<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>[Cloud-oriented Life(CoL)]Data Backup and Migration to AliBaba Cloud OSS using OSSImport</title>
    <url>/2020/08/15/Cloud-oriented-Life-CoL-Data-Backup-and-Migration-to-AliBaba-Cloud-OSS-using-OSSImport/</url>
    <content><![CDATA[<p>OSSImport is a free tool created by the Alibaba Cloud product team to assist with data backup and migration into the Alibaba Cloud Object Storage Service (OSS). Using OSSImport data can be migrated from either local storage or from third party cloud platforms. Currently supported data sources include Qiniu, Baidu BOS, AWS S3, Azure Blob, Youpai Cloud, Tencent Cloud COS, Kingsoft KS3, HTTP, and other OSS buckets.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p>Java<br>Install Java which is a pre-requisite to using the OSSImport tool.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y java-1.8.0-openjdk</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y curl unzip</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>curl, unzip</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line">yum install -y curl unzip</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="Insallaion"><a href="#Insallaion" class="headerlink" title="Insallaion"></a>Insallaion</h2><p>Download the OSSImport tool using the following ‘curl’ command</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -o ./ossimport.zip http://gosspublic.alicdn.com/ossimport/standalone/ossimport-2.3.1.zip?spm=a2c63.p38356.a3.3.48ce6605cjP9sM&amp;file=ossimport-2.3.1.zip</span><br></pre></td></tr></table></figure>

<p>When the download finishes – unzip the archive using the following ‘unzip’ command</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip ossimport.zip -d ./ossimport</span><br></pre></td></tr></table></figure>

<h2 id="Configuraion"><a href="#Configuraion" class="headerlink" title="Configuraion"></a>Configuraion</h2><p>Edit the local_job.cfg configuration file located at “./ossimport/conf/local_job.cfg” using an editor of your choice – ensure the following fields are updated:</p>
<h3 id="Local"><a href="#Local" class="headerlink" title="Local"></a>Local</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">srcType&#x3D;local</span><br><span class="line"></span><br><span class="line"># Note: The srcPrefix setting is where you specific a directory where local files are stored to be migrated to OSS. In a Linux&#x2F;Unix environment this must end with a &quot;&#x2F;&quot; (Ex: &#x2F;Users&#x2F;username&#x2F;Documents&#x2F;)</span><br><span class="line">srcPrefix&#x3D;&lt;LOCAL DIRECTORY FOR FILES&gt;</span><br><span class="line"></span><br><span class="line"># Note: Alibaba Cloud Access and Secret key can be obtained from within the portal &quot;Account Management&quot; -&gt; &quot;Access Keys&quot;</span><br><span class="line">destAccessKey&#x3D;&lt;ALIBABA CLOUD ACCESS KEY&gt;</span><br><span class="line">destSecretKey&#x3D;&lt;ALIBABA CLOUD SECRET KEY&gt;</span><br><span class="line"></span><br><span class="line"># Note: The Alibaba Cloud OSS address can be found within the OSS portal, because the source machine is not within the same network the &quot;Internet Access&quot; endpoint address must be used.</span><br><span class="line">destDomain&#x3D;&lt;ALIBABA CLOUD OSS ADDRESS&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash import.sh</span><br></pre></td></tr></table></figure>

<p>See files whthin the logs/ directory to more information after running.</p>
<h2 id="Known-Issues"><a href="#Known-Issues" class="headerlink" title="Known Issues"></a>Known Issues</h2><h3 id="JDK-Version"><a href="#JDK-Version" class="headerlink" title="JDK Version"></a>JDK Version</h3><p>JDK version must be 7 or 8, otherwise will throw an exception.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.lang.ClassNotFoundException: javax.xml.bind.JAXBException</span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://www.alibabacloud.com/blog/data-backup-and-migration-to-oss-using-ossimport_594320">Data Backup and Migration to OSS using OSSImport - https://www.alibabacloud.com/blog/data-backup-and-migration-to-oss-using-ossimport_594320</a></p>
<p>[2] <a href="https://help.aliyun.com/document_detail/56990.html?spm=a2c4g.11186623.2.14.783340afwo9Yqx#concept-rc2-t1h-wdb">说明及配置_数据迁移工具ossimport_常用工具_对象存储 OSS-阿里云 - https://help.aliyun.com/document_detail/56990.html?spm=a2c4g.11186623.2.14.783340afwo9Yqx#concept-rc2-t1h-wdb</a></p>
<p>[3] <a href="https://g.yuque.com/bzxr/aliyun/vzvblv?language=en-us">OSS跨账号复制工具ossimport尝试 · 语雀 - https://g.yuque.com/bzxr/aliyun/vzvblv?language=en-us</a></p>
]]></content>
      <categories>
        <category>Aliyun (AliCloud) / Alibaba Cloud</category>
      </categories>
      <tags>
        <tag>OSS</tag>
        <tag>Aliyun (AliCloud) / Alibaba Cloud</tag>
        <tag>Backup</tag>
        <tag>Migration</tag>
      </tags>
  </entry>
  <entry>
    <title>FAQs about using Vagrant for building and managing virtual machine environments</title>
    <url>/2020/07/25/FAQs-about-using-Vagrant-for-building-and-managing-virtual-machine-environments/</url>
    <content><![CDATA[<h1 id="FAQs-about-using-Vagrant-for-building-and-managing-virtual-machine-environments"><a href="#FAQs-about-using-Vagrant-for-building-and-managing-virtual-machine-environments" class="headerlink" title="FAQs about using Vagrant for building and managing virtual machine environments"></a>FAQs about using Vagrant for building and managing virtual machine environments</h1><p><a href="https://www.vagrantup.com/">Vagrant</a> is a tool for building and managing virtual machine environments in a single workflow. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases production parity, and makes the “works on my machine” excuse a relic of the past.</p>
<p>There are some FAQs about Vagrant.</p>
<a id="more"></a>

<h2 id="Vagrant-Up"><a href="#Vagrant-Up" class="headerlink" title="Vagrant Up"></a>Vagrant Up</h2><h3 id="Error-Unknown-repo-‘C-base’-on-CentOS-8"><a href="#Error-Unknown-repo-‘C-base’-on-CentOS-8" class="headerlink" title="Error: Unknown repo: ‘C*-base’ on CentOS 8"></a>Error: Unknown repo: ‘C*-base’ on CentOS 8</h3><p>There is a error occure when run vagrant up command first time.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant up</span></span><br><span class="line">==&gt; default: Attempting graceful shutdown of VM</span><br><span class="line">...</span><br><span class="line">Error: Unknown repo: &#x27;C*-base&#x27;</span><br><span class="line">The following SSH command responded with a non-zero exit status.</span><br><span class="line">Vagrant assumes that this means the command failed!</span><br><span class="line"></span><br><span class="line">yum install -y kernel-devel-`uname -r` --enablerepo=C*-base --enablerepo=C*-updates</span><br><span class="line"></span><br><span class="line">Stderr from the command:</span><br><span class="line"></span><br><span class="line">Error: Unknown repo: &#x27;C*-base&#x27;</span><br></pre></td></tr></table></figure>

<p>Check vm status with vagrant status command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant status</span></span><br><span class="line">Current machine states:</span><br><span class="line"></span><br><span class="line">default                   running (virtualbox)</span><br><span class="line"></span><br><span class="line">The VM is running. To stop this VM, you can run `vagrant halt` to</span><br><span class="line">shut it down forcefully, or you can run `vagrant suspend` to simply</span><br><span class="line">suspend the virtual machine. In either case, to restart it again,</span><br><span class="line">simply run `vagrant up`.</span><br></pre></td></tr></table></figure>

<p>Then, ssh into vm with vagrant ssh command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant ssh</span></span><br><span class="line">[vagrant@localhost ~]$ </span><br><span class="line">[vagrant@localhost ~]$ sudo yum update -y</span><br><span class="line">[vagrant@localhost ~]$ exit</span><br></pre></td></tr></table></figure>

<p>Last, exit to host to run vagrant reload.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant reload</span></span><br><span class="line">==&gt; default: Attempting graceful shutdown of VM...</span><br><span class="line">...</span><br><span class="line">==&gt; default: flag to force provisioning. Provisioners marked to run always will still run.</span><br></pre></td></tr></table></figure>

<p>OK, the vm vagrant up sucessfully.</p>
<h3 id="sbin-mount-vboxsf-mounting-failed-with-the-error-No-such-device-on-ubuntu-eoan64"><a href="#sbin-mount-vboxsf-mounting-failed-with-the-error-No-such-device-on-ubuntu-eoan64" class="headerlink" title="/sbin/mount.vboxsf: mounting failed with the error: No such device on ubuntu/eoan64"></a>/sbin/mount.vboxsf: mounting failed with the error: No such device on ubuntu/eoan64</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vagrant up                                                                                                       22.92 Dur  17:32:24</span><br><span class="line">Bringing machine &#x27;default&#x27; up with &#x27;virtualbox&#x27; provider...</span><br><span class="line">==&gt; default: Box &#x27;ubuntu/eoan64&#x27; could not be found. Attempting to find and install...</span><br><span class="line">...</span><br><span class="line">Vagrant was unable to mount VirtualBox shared folders. This is usually</span><br><span class="line">because the filesystem &quot;vboxsf&quot; is not available. This filesystem is</span><br><span class="line">made available via the VirtualBox Guest Additions and kernel module.</span><br><span class="line">Please verify that these guest additions are properly installed in the</span><br><span class="line">guest. This is not a bug in Vagrant and is usually caused by a faulty</span><br><span class="line">Vagrant box. For context, the command attempted was:</span><br><span class="line"></span><br><span class="line">mount -t vboxsf -o uid=1000,gid=1000 vagrant /vagrant</span><br><span class="line"></span><br><span class="line">The error output from the command was:</span><br><span class="line"></span><br><span class="line">/sbin/mount.vboxsf: mounting failed with the error: No such device</span><br></pre></td></tr></table></figure>

<p>First, install vagrant-vbguest plugin.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant plugin install vagrant-vbguest</span></span><br><span class="line">Installing the &#x27;vagrant-vbguest&#x27; plugin. This can take a few minutes...</span><br><span class="line">Fetching: micromachine-3.0.0.gem (100%)</span><br><span class="line">Fetching: vagrant-vbguest-0.23.0.gem (100%)</span><br><span class="line">Installed the plugin &#x27;vagrant-vbguest (0.23.0)&#x27;!</span><br></pre></td></tr></table></figure>

<p>Then, run vagrant vbguest command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant vbguest</span></span><br><span class="line">[default] No Virtualbox Guest Additions installation found.</span><br><span class="line">...</span><br><span class="line">Unmounting Virtualbox Guest Additions ISO from: /mnt</span><br></pre></td></tr></table></figure>

<p>Last, exit to host to run vagrant reload.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant reload</span></span><br><span class="line">==&gt; default: Attempting graceful shutdown of VM...</span><br><span class="line">...</span><br><span class="line">==&gt; default: flag to force provisioning. Provisioners marked to run always will still run.</span><br></pre></td></tr></table></figure>

<p>OK, the vm vagrant up sucessfully.</p>
<h3 id="Stderr-VBoxManage-error-VT-x-is-disabled-in-the-BIOS-for-all-CPU-modes-VERR-VMX-MSR-ALL-VMX-DISABLED"><a href="#Stderr-VBoxManage-error-VT-x-is-disabled-in-the-BIOS-for-all-CPU-modes-VERR-VMX-MSR-ALL-VMX-DISABLED" class="headerlink" title="Stderr: VBoxManage: error: VT-x is disabled in the BIOS for all CPU modes (VERR_VMX_MSR_ALL_VMX_DISABLED)"></a>Stderr: VBoxManage: error: VT-x is disabled in the BIOS for all CPU modes (VERR_VMX_MSR_ALL_VMX_DISABLED)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vagrant up</span><br><span class="line">Bringing machine &#39;default&#39; up with &#39;virtualbox&#39; provider...</span><br><span class="line">...</span><br><span class="line">There was an error while executing &#96;VBoxManage&#96;, a CLI used by Vagrant</span><br><span class="line">for controlling VirtualBox. The command and stderr is shown below.</span><br><span class="line"></span><br><span class="line">Command: [&quot;startvm&quot;, &quot;4db5d7b1-1321-4951-81ef-24253d8407e8&quot;, &quot;--type&quot;, &quot;headless&quot;]</span><br><span class="line"></span><br><span class="line">Stderr: VBoxManage: error: VT-x is disabled in the BIOS for all CPU modes (VERR_VMX_MSR_ALL_VMX_DISABLED)</span><br><span class="line">VBoxManage: error: Details: code NS_ERROR_FAILURE (0x80004005), component ConsoleWrap, interface IConsole</span><br></pre></td></tr></table></figure>

<p>Reeboot host then keep pressing DEL key when poweron) enter into BIOS, and enable CPU processor VT-x support.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vagrant reload</span></span><br><span class="line">==&gt; default: Attempting graceful shutdown of VM...</span><br><span class="line">...</span><br><span class="line">==&gt; default: flag to force provisioning. Provisioners marked to run always will still run.</span><br></pre></td></tr></table></figure>

<p>OK, the vm vagrant up sucessfully.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.vagrantup.com/">Vagrant by HashiCorp - https://www.vagrantup.com/</a></p>
]]></content>
      <categories>
        <category>Vagrant</category>
        <category>FAQs</category>
        <category>Virtual Machine</category>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>Vagrant</tag>
        <tag>FAQs</tag>
        <tag>Virtual Machine</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] Best practices about Ruby bundle and Gemfile </title>
    <url>/2020/08/29/Google-oriented-Programming-GoP-Best-practices-about-Ruby-bundle-and-Gemfile/</url>
    <content><![CDATA[<h1 id="Best-practices-about-Ruby-bundle-and-Gemfile"><a href="#Best-practices-about-Ruby-bundle-and-Gemfile" class="headerlink" title="Best practices about Ruby bundle and Gemfile"></a>Best practices about Ruby bundle and Gemfile</h1><h3 id="Modularity"><a href="#Modularity" class="headerlink" title="Modularity"></a>Modularity</h3><p>It is not easy to maintain that Gemfile has too much content. Recoommand to modular Gemfile by split the single Gemfile file to mulitple Gemfile files.</p>
<p>First, split Gemfile content into mulitiple files prefix with Gemfile(such as Gemfile-base, Gemfile.base, etc.) according to your need, recommand by classification or usage.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tree gemfiles</span></span><br><span class="line">Gemfiles</span><br><span class="line">├── Gemfile-base</span><br><span class="line">└── Gemfile-logger</span><br></pre></td></tr></table></figure>

<p>Then, replace Gemfile with these code:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line">gemfiles = <span class="string">%w(Gemfiles/Gemfile-base Gemfiles/Gemfile-logger)</span></span><br><span class="line">gemfiles.each <span class="keyword">do</span> <span class="params">|gemfile|</span></span><br><span class="line">  <span class="keyword">if</span> File.exist?(gemfile)</span><br><span class="line">    <span class="comment"># or instance_eval File.read(gemfile)</span></span><br><span class="line">    eval_gemfile gemfile</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    puts(<span class="string">&quot;\e[31mWarning: <span class="subst">#&#123;gemfile&#125;</span> not found!\e[0m&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>


<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://guides.rubyonrails.org/routing.html">Rails Routing from the Outside In — Ruby on Rails Guides - https://guides.rubyonrails.org/routing.html</a></p>
<p>[2] <a href="https://medium.com/lightthefuse/rails-5-routes-cookbook-10-recipes-for-the-novice-rails-developer-and-beyond-9986f43064bc">Rails 5 Routing Cookbook: 10 recipes for the novice Rails developer and beyond | by Rui Freitas | Light the Fuse and Run | Medium- https://medium.com/lightthefuse/rails-5-routes-cookbook-10-recipes-for-the-novice-rails-developer-and-beyond-9986f43064bc</a></p>
]]></content>
      <categories>
        <category>Best practices</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Bundle</tag>
        <tag>Gemfile</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] FAQs about Docker Containers or Kubernetes (K8S) Pods Containers</title>
    <url>/2020/08/29/Google-oriented-Programming-GoP-FAQs-about-Docker-Containers-or-Kubernetes-K8S-Pods/</url>
    <content><![CDATA[<h1 id="FAQs-about-Docker-Containers-or-Kubernetes-K8S-Pods"><a href="#FAQs-about-Docker-Containers-or-Kubernetes-K8S-Pods" class="headerlink" title="FAQs about Docker Containers or Kubernetes (K8S) Pods"></a>FAQs about Docker Containers or Kubernetes (K8S) Pods</h1><h3 id="Exit-Code-137"><a href="#Exit-Code-137" class="headerlink" title="Exit Code: 137"></a>Exit Code: 137</h3><p>A Pod is terminated or restarted with exit code 137. It should happen Out Of Memory(OOM).</p>
<p>Run kubectl describe pod <name> command to check pod state.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl describe pod &lt;name&gt;</span></span><br><span class="line">...</span><br><span class="line">    State:          Running</span><br><span class="line">      Started:      Feb, 03 Sep 2020 02:46:17 +0800</span><br><span class="line">    Last State:     Terminated</span><br><span class="line">      Reason:       Error</span><br><span class="line">      Exit Code:    137</span><br><span class="line">      Started:      Sat, 01 Feb 2020 11:32:03 +0800</span><br><span class="line">      Finished:     Mon, 03 Feb 2020 02:46:12 +0800</span><br><span class="line">    Ready:          True</span><br><span class="line">    Restart Count:  1</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>Run journalctl command to check journal logs.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> journalctl -k | grep -i -e memory -e oom</span></span><br><span class="line">Feb 03 02:46:14 s1 kernel:  [&lt;ffffffff81bbb076&gt;] out_of_memory+0x4b6/0x4f0</span><br><span class="line">Feb 03 02:46:14 s1 kernel: [ pid ]   uid  tgid total_vm      rss nr_ptes swapents oom_score_adj name</span><br><span class="line">Feb 03 02:46:15 s1 kernel: Out of memory: Kill process 22739 (bundle) score 1325 or sacrifice child</span><br><span class="line">Feb 03 02:46:15 s1 kernel: kthreadd invoked oom-killer: gfp_mask=0x3000d0, order=2, oom_score_adj=0</span><br><span class="line">Feb 03 02:46:15 s1 kernel:  [&lt;ffffffffc03cb71a&gt;] ? virtballoon_oom_notify+0x2a/0x70 [virtio_balloon]</span><br><span class="line">Feb 03 02:46:15 s1 kernel:  [&lt;ffffffff81bba834&gt;] oom_kill_process+0x254/0x3d0</span><br><span class="line">Feb 03 02:46:15 s1 kernel:  [&lt;ffffffff81bba2dd&gt;] ? oom_unkillable_task+0xcd/0x120</span><br><span class="line">Feb 03 02:46:15 s1 kernel:  [&lt;ffffffff81bbb076&gt;] out_of_memory+0x4b6/0x4f0</span><br><span class="line">Feb 03 02:46:15 s1 kernel: [ pid ]   uid  tgid total_vm      rss nr_ptes swapents oom_score_adj name</span><br><span class="line">Feb 03 02:46:15 s1 kernel: Out of memory: Kill process 23056 (util.rb:22) score 1326 or sacrifice child</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>FAQs</category>
        <category>Docker</category>
        <category>Kubernetes (K8S)</category>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>Kubernetes (K8S)</tag>
        <tag>FAQs</tag>
        <tag>Docker</tag>
        <tag>Docker Container</tag>
        <tag>Kubernetes (K8S) Pod</tag>
        <tag>Google-oriented Programming(GoP)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] FAQs about SCP to transfer files</title>
    <url>/2020/07/25/Google-oriented-Programming-GoP-FAQs-about-SCP-to-transfer-files/</url>
    <content><![CDATA[<h1 id="FAQs-about-SCP"><a href="#FAQs-about-SCP" class="headerlink" title="FAQs about SCP"></a>FAQs about SCP</h1><h2 id="zsh-report-errors-no-matches-found-while-zsh-uses-scp-to-transfer-files-with-wildcards"><a href="#zsh-report-errors-no-matches-found-while-zsh-uses-scp-to-transfer-files-with-wildcards" class="headerlink" title="zsh report errors no matches found while zsh uses scp to transfer files with wildcards"></a>zsh report errors no matches found while zsh uses scp to transfer files with wildcards</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp cloudolife@192.168.1.100:/Users/cloudolife/.ssh/* ~/.ssh/</span></span><br><span class="line">sh: no matches found: cloudolife@192.168.1.100:/Users/cloudolife/.ssh/*</span><br></pre></td></tr></table></figure>

<p>The reason is because zsh tries to expand *. No matches error will be reported when the file cannot be found locally.</p>
<p>There are two approaches:</p>
<h3 id="Option-1-Avoid-zsh-to-expand"><a href="#Option-1-Avoid-zsh-to-expand" class="headerlink" title="Option 1, Avoid zsh to expand *"></a>Option 1, Avoid zsh to expand *</h3><ul>
<li><p>Add a backslash() before * to prevent escaping</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> scp cloudolife@192.168.1.100:/Users/cloudolife/.ssh\* ~/.ssh/</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Or, Enclose the path (or the path including the server) with single or double quotes</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Single quotation mark, including server address</span></span><br><span class="line">scp &#x27;cloudolife@192.168.1.100:/Users/cloudolife/.ssh/*&#x27; ~/.ssh/</span><br><span class="line"><span class="meta">#</span><span class="bash"> Double quotation mark, without server address</span></span><br><span class="line">scp cloudolife@192.168.1.100:&quot;/Users/cloudolife/.ssh/*&quot; ~/.ssh/</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>But sometimes the above two methods using wildcards for local paths are invalid, then refer to next:</p>
<h3 id="Option-2-Switch-to-bin-bash"><a href="#Option-2-Switch-to-bin-bash" class="headerlink" title="Option 2, Switch to /bin/bash"></a>Option 2, Switch to /bin/bash</h3><p>/bin/bash does not have the problem of expanding *.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chsh -s /bin/bash</span></span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/toopoo/article/details/104700267">zsh 使用scp传输文件时使用通配符报错_SimonLiu的博客-CSDN博客</a></p>
]]></content>
      <categories>
        <category>FAQs</category>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>FAQs</tag>
        <tag>Google-oriented Programming(GoP)</tag>
        <tag>SCP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] Fix error about JavaScript heap out of memory while running Angular CLI ng serve</title>
    <url>/2020/08/01/Google-oriented-Programming-GoP-Fix-error-about-JavaScript-heap-out-of-memory-while-running-Angular-CLI-ng-serve/</url>
    <content><![CDATA[<h1 id="How-to-resolve-it"><a href="#How-to-resolve-it" class="headerlink" title="How to resolve it"></a>How to resolve it</h1><p>Remember to append max_old_space_size opton to increase JavaScript memory limit(MB). By default it’s ~1500.</p>
<p>Recommand limit is 1024 * n, such as 4096, 8192, etc.</p>
<p>There are three options to use max_old_space_size.</p>
<a id="more"></a>

<h2 id="First-way-Command-Option"><a href="#First-way-Command-Option" class="headerlink" title="First way: Command Option"></a>First way: Command Option</h2><p>Put max_old_space_size option to package.json script. Replace ng serve script</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;start&quot;: &quot;ng serve&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>with</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;start&quot;: &quot;node --max_old_space_size=4096 ./node_modules/@angular/cli/bin/ng serve&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>then run as npm start.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure>

<p>or run command as:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node --max_old_space_size=4096 ./node_modules/@angular/cli/bin/ng serve</span><br></pre></td></tr></table></figure>

<h2 id="Second-option-Environment-Variable"><a href="#Second-option-Environment-Variable" class="headerlink" title="Second option: Environment Variable"></a>Second option: Environment Variable</h2><p>Set it as an environment variable NODE_OPTIONS.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export NODE_OPTIONS=--max_old_space_size=4096</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> check environment variable.</span></span><br><span class="line">echo $NODE_OPTIONS</span><br><span class="line"><span class="meta">#</span><span class="bash"> -max_old_space_size=4096</span></span><br></pre></td></tr></table></figure>

<p>then run npm or node command as normal.</p>
<h2 id="Third-option-npm-executable-file"><a href="#Third-option-npm-executable-file" class="headerlink" title="Third option: npm executable file"></a>Third option: npm executable file</h2><p>Modify npm executable file and append –max_old_space_size=4096 option.</p>
<p>Find where the npm executable file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">which npm</span><br><span class="line"><span class="meta">#</span><span class="bash"> May be ~/.nvm/versions/node/v8.9.0/bin/npm, <span class="keyword">if</span> use nvm.</span></span><br></pre></td></tr></table></figure>

<p>vi ~/.nvm/versions/node/v8.9.0/bin/npm.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env node --max_old_space_size=4096</span></span><br></pre></td></tr></table></figure>

<p>then run npm command as normal.</p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>[1] <a href="https://dev.to/koscheyscrag/fix-of-angular-cli-javascript-heap-out-of-memory-error-while-running-ng-serve--1jjh">Fix of Angular-cli ‘JavaScript heap out of memory’ error while running ‘ng serve’ - DEV https://dev.to/koscheyscrag/fix-of-angular-cli-javascript-heap-out-of-memory-error-while-running-ng-serve–1jjh</a></p>
]]></content>
      <categories>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Out of Memory</tag>
        <tag>Angular CLI</tag>
        <tag>Node.js</tag>
        <tag>NPM</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] JetBrains Licenses for Open Source Development</title>
    <url>/2020/09/05/Google-oriented-Programming-GoP-JetBrains-Licenses-for-Open-Source-Development/</url>
    <content><![CDATA[<p>You can apply for the free JetBrains Products(IntelliJ IDEA, Clion, PyCharm, RubyMine, etc) License with your Open Source projects.</p>
<p>JetBrains will check the history of recent commits in your Open Source project. To approve the request, they need to see that regular commits have been made for the past 3 months or more. For an Open Source license renewal, they need to see how the granted licenses have been used throughout the past year.</p>
<a id="more"></a>

<h2 id="Apply"><a href="#Apply" class="headerlink" title="Apply"></a>Apply</h2><p><a href="https://www.jetbrains.com/community/opensource/#support">https://www.jetbrains.com/community/opensource/#support</a> to apply.</p>
<p>Then, fill out the application form to request Open Source License and submit it.</p>
<h2 id="Register"><a href="#Register" class="headerlink" title="Register"></a>Register</h2><p>You will recreive an email about the application about a few days. Click the link(Take me to my licenses) within the email to register a JetBrains account, then you will get the License. </p>
<h2 id="Renewal"><a href="#Renewal" class="headerlink" title="Renewal"></a>Renewal</h2><p>Your free subscription(s) will be valid for one year. You will receive an automatic email reminder shortly before the licenses expire. If your project still meets our Support Program’s requirements at that time, feel free to apply for a renewal.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.jetbrains.com/community/opensource/#support">https://www.jetbrains.com/community/opensource/#support - https://www.jetbrains.com/community/opensource/#support</a> </p>
]]></content>
      <categories>
        <category>JetBrains</category>
        <category>Open Source</category>
      </categories>
      <tags>
        <tag>JetBrains</tag>
        <tag>Open Source</tag>
      </tags>
  </entry>
  <entry>
    <title>[Google-oriented Programming(GoP)] Use multiple SSH keys within git commands</title>
    <url>/2020/08/08/Google-oriented-Programming-GoP-Use-multiple-SSH-keys-within-git-commands/</url>
    <content><![CDATA[<p>Github or Gitlab use ~/.ssh/id_rsa as the default SSH private key. But sometimes you need more accounts than one for access to Github or Gitlab and similar tools. For example you can have one account for your projects at home and second account for your company.</p>
<p>There are three ways to Use multiple SSH private keys within git commands.</p>
<a id="more"></a>

<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><h2 id="SSH-Key"><a href="#SSH-Key" class="headerlink" title="SSH Key"></a>SSH Key</h2><p>Check out our guide to <a href="https://docs.github.com/articles/generating-an-ssh-key/">generating SSH keys</a> or troubleshoot common SSH Problems.</p>
<h1 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h1><p>Replace <Your SSK private Key> with your private key(such as ~/.ssh/id_rsa) while execute the next commands.</p>
<h2 id="Recommand-First-option-Git-configuration"><a href="#Recommand-First-option-Git-configuration" class="headerlink" title="(Recommand)First option, Git configuration"></a>(Recommand)First option, Git configuration</h2><p>It will configure sshCommand for per git repository.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line">git config core.sshCommand &quot;ssh -i &lt;Your SSK private Key&gt; -F /dev/null&quot;</span><br></pre></td></tr></table></figure>

<p>It will insert sshCommand to [core] segment within .git/config file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[core]</span><br><span class="line">        sshCommand = ssh -i &lt;Your SSK private Key&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Second-option-Shell-Environment-Variable"><a href="#Second-option-Shell-Environment-Variable" class="headerlink" title="Second option, Shell Environment Variable"></a>Second option, Shell Environment Variable</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line">GIT_SSH_COMMAND=&quot;ssh -i &lt;Your SSK private Key&gt;&quot;</span><br></pre></td></tr></table></figure>
<p>Can append GIT_SSH_COMMAND environment variable to your shell bash. Such as ~/.zshrc, ~/.bashrc, etc.</p>
<h2 id="Third-option-SSH-configuration"><a href="#Third-option-SSH-configuration" class="headerlink" title="Third option, SSH configuration"></a>Third option, SSH configuration</h2><p>Assign different Hosts for multiple host reposities within ~/.ssh/config.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vi ~/.ssh/config</span></span><br><span class="line">Host &lt;Your Git Account 1&gt;_github</span><br><span class="line">  HostName github.com</span><br><span class="line"><span class="meta">  #</span><span class="bash"> User git</span></span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile &lt;Your SSH Private key 2</span><br><span class="line"></span><br><span class="line">Host &lt;Your Git Account 2&gt;_github</span><br><span class="line">  HostName github.com</span><br><span class="line"><span class="meta">  #</span><span class="bash"> User git</span></span><br><span class="line">  PreferredAuthentications publickey</span><br><span class="line">  IdentityFile &lt;Your SSH Private key 2&gt;</span><br></pre></td></tr></table></figure>

<p>Must use &lt;Your Git Account 1&gt;_github or &lt;Your Git Account 2&gt;_github instead of git.com while use git command. Such as:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@&lt;Your Git Account 1&gt;_github:&lt;Your repository&gt;.git</span><br></pre></td></tr></table></figure>

<h1 id="SSH-Agent"><a href="#SSH-Agent" class="headerlink" title="SSH Agent"></a>SSH Agent</h1><p>Remember to add SSH Key to SSH Agent to make your SSH private key available for git command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Delete all cached keys.</span></span><br><span class="line">ssh-add -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable ssh-agent.</span></span><br><span class="line"><span class="built_in">eval</span> `ssh-agent -s`</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that your keys were added.</span></span><br><span class="line">ssh-add -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># If you haven&#x27;t any entries then you should add your keys</span></span><br><span class="line">ssh-add &lt;Your SSH private key&gt;</span><br><span class="line"><span class="comment"># ssh-add &lt;Your SSH private key 1&gt;</span></span><br><span class="line"><span class="comment"># ssh-add &lt;Your SSH private key 2&gt;</span></span><br></pre></td></tr></table></figure>

<p>That’s all done! Now you can use different SSH private keys for multiple git reposities.</p>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://coderwall.com/p/7smjkq/multiple-ssh-keys-for-different-accounts-on-github-or-gitlab">My Profile | Cloudflare - Web Performance &amp; Security https://coderwall.com/p/7smjkq/multiple-ssh-keys-for-different-accounts-on-github-or-gitlab</a></p>
<p>[2] <a href="https://www.freecodecamp.org/news/how-to-manage-multiple-ssh-keys/">How to Manage Multiple SSH Keys https://www.freecodecamp.org/news/how-to-manage-multiple-ssh-keys/</a></p>
]]></content>
      <categories>
        <category>Google-oriented Programming(GoP)</category>
      </categories>
      <tags>
        <tag>SSH</tag>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>GitLab</tag>
      </tags>
  </entry>
  <entry>
    <title>[Server-side Rendering(SSR)] ssr-prerender run prerender to render SEO HTML within the docker container</title>
    <url>/2020/08/15/Server-side-Rendering-SSR-ssr-prerender-run-prerender-to-render-SEO-HTML-within-the-docker-container/</url>
    <content><![CDATA[<h1 id="SSR-Prerender"><a href="#SSR-Prerender" class="headerlink" title="SSR-Prerender"></a>SSR-Prerender</h1><p><a href="https://github.com/CloudoLife/ssr-prerender">ssr-prerender</a> is a wrapper to use <a href="https://prerender.io/">Prerender</a> to prerender HTML for SEO. It can run by <a href="https://docs.docker.com/compose/">Docker Compose</a>, <a href="https://www.docker.com/">Docker</a> or <a href="https://docs.docker.com/compose/">Docker Compose</a> or Shell(Traditional).</p>
<h2 id="Prerender"><a href="#Prerender" class="headerlink" title="Prerender"></a>Prerender</h2><p>Prerender is a node server that uses Headless Chrome to render HTML, screenshots, PDFs, and HAR files out of any web page. The Prerender server listens for an http request, takes the URL and loads it in Headless Chrome, waits for the page to finish loading by waiting for the network to be idle, and then returns your content.</p>
<p>It have some advantages:</p>
<ul>
<li><p>Loosely coupled<br>No code or only a small codes need to modify no matter what technical architecture is used within Front-End or Back-End.</p>
</li>
<li><p>Out of the box<br>Provide cache support, multiple render types(HTML, Image, PDF, HAR), Allowlist, Blacklist, etc.</p>
</li>
</ul>
<h2 id="Deployment-Diagram"><a href="#Deployment-Diagram" class="headerlink" title="Deployment Diagram"></a>Deployment Diagram</h2><p><img src="https://github.com/CloudoLife/ssr-prerender/blob/master/SSR-Prerender%20Deployment%20v1.1.png?raw=true" alt="SSR-Prerender Deployment"></p>
<p>Powered by <a href="https://plantuml.com/deployment-diagram">PlantUML</a></p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>Developing apps today requires so much more than writing code. Multiple languages, frameworks, architectures, and discontinuous interfaces between tools for each lifecycle stage creates enormous complexity. </p>
<p>Docker simplifies and accelerates your workflow, while giving developers the freedom to innovate with their choice of tools, application stacks, and deployment environments for each project.</p>
<p>To learn more about all the features of Docker, see <a href="https://www.docker.com/">Docker - https://www.docker.com/</a>.</p>
</li>
</ul>
<ul>
<li><p><a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
<p>Docker Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration. </p>
<p>To learn more about all the features of Docker Compose, see <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a>.</p>
</li>
<li><p><a href="https://www.google.com/chrome/">Google Chrome - Download the Fast, Secure Browser from Google - https://www.google.com/chrome/</a></p>
<p>Google Chrome is the browser built by Google.</p>
<p>To learn more about all the features of Google Chrome, see the <a href="https://www.google.com/chrome/">Google Chrome - Download the Fast, Secure Browser from Google - https://www.google.com/chrome/</a>.</p>
<p>It is optional while run within the docker container.</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>You can change configuration within <a href=".env">.env</a> file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prerender/prerender: Node server that uses Headless Chrome to render a javascript-rendered page as HTML. To be used <span class="keyword">in</span> conjunction with prerender middleware.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/prerender/prerende</span></span><br><span class="line">CHROME_FLAGS=&quot;--no-sandbox, --headless, --disable-gpu, --remote-debugging-port=9222, --hide-scrollbars&quot;</span><br><span class="line">LOG_REQUESTS=false</span><br><span class="line">PORT=3000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> memory or redis</span></span><br><span class="line">STORAGE_CACHE=memory</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> prerender-redis-cache/prerenderRedisCache.js at master · JonathanBennett/prerender-redis-cache</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/JonathanBennett/prerender-redis-cache/blob/master/lib/prerenderRedisCache.js</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> REDISTOGO_URL=redis://redis:6379/0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> REDISCLOUD_URL=redis://redis:6379/0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> REDISGREEN_URL=redis://redis:6379/0</span></span><br><span class="line">REDIS_URL=redis://redis:6379/0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> prerender/prerender-memory-cache: In memory cache <span class="keyword">for</span> use with Prerender server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/prerender/prerender-memory-cache</span></span><br><span class="line">CACHE_MAXSIZE=10000</span><br><span class="line">CACHE_TTL=3600</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Recommand to run ss-prerender with Docker Compose or Docker.</p>
<h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure>

<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it --rm --name ssr-prerender -p 3000:3000 cloudolife/ssr-prerender:latest</span><br></pre></td></tr></table></figure>

<h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><p>TBD</p>
<h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>You can run ss-prerender from local shell or within a docker container.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node server.js</span><br></pre></td></tr></table></figure>

<p>That’s all.</p>
<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p><a href="http://localhost:3000/http://localhost:8080">http://localhost:3000/http://localhost:8080</a></p>
<h2 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h2><h3 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h3><p>This repository has provider a Google Chrome version and will auto install while docker build process. But you can upgrade Google Chrome to the latest version by download and replace google-chrome-stable_current_amd64.deb file with the latest Google Chrome version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure>

<p>Then, run command docker build . or docker-compose buiid to rebuild it.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/prerender/prerender">prerender/prerender: Node server that uses Headless Chrome to render a javascript-rendered page as HTML. To be used in conjunction with prerender middleware. - https://github.com/prerender/prerender</a></p>
<p>[2] <a href="https://prerender.io/">Prerender - Dynamic Rendering for Effective JavaScript SEO | Prerender - https://prerender.io/</a></p>
<p>[3] <a href="https://prerender.io/documentation">Prerender - Dynamic Rendering for Effective JavaScript SEO | Prerender - https://prerender.io/documentation</a></p>
<p>[4] <a href="https://prerender.com/">Prerender.com | Headless Chrome In The Cloud to Render HTML, Screenshots, PDFs, and HAR Files - https://prerender.com/</a></p>
<p>[5] <a href="https://prerender.com/documentation">Prerender.com | Documentation - https://prerender.com/documentation</a></p>
<p>[6] <a href="https://github.com/JonathanBennett/prerender-redis-cache/blob/master/lib/prerenderRedisCache.js">prerender-redis-cache/prerenderRedisCache.js at master · JonathanBennett/prerender-redis-cache - https://github.com/JonathanBennett/prerender-redis-cache/blob/master/lib/prerenderRedisCache.js</a></p>
<p>[7] <a href="https://github.com/prerender/prerender-memory-cache">prerender/prerender-memory-cache: In memory cache for use with Prerender server - https://github.com/prerender/prerender-memory-cache</a></p>
<p>[8] <a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>[9] <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Search Engine Optimization(SEO)</category>
        <category>Server-side Rendering(SSR)</category>
      </categories>
      <tags>
        <tag>CloudoLife (CoL)</tag>
        <tag>Docker</tag>
        <tag>Node.js</tag>
        <tag>Prerender</tag>
        <tag>Docker Compose</tag>
        <tag>Site</tag>
        <tag>Search Engine Optimization(SEO)</tag>
        <tag>Server-side Rendering(SSR)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ansible] Use Ansible community.kubernetes.helm to manages Kubernetes (K8S) packages with the Helm package manager</title>
    <url>/2020/11/21/Ansible/Use-Ansible-community-kubernetes-helm-to-manages-Kubernetes-K8s-packages-with-the-Helm-package-manager/</url>
    <content><![CDATA[<h3 id="community-kubernetes-helm"><a href="#community-kubernetes-helm" class="headerlink" title="community.kubernetes.helm"></a>community.kubernetes.helm</h3><p><a href="https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html">community.kubernetes.helm</a> is an Ansible Galaxy to install, upgrade, delete packages with the Helm to manages Kubernetes packages with the Helm package manager</p>
<p><a href="https://www.ansible.com/">Ansible is Simple IT Automation - https://www.ansible.com/</a> can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</p>
<p>Ansible’s main goals are simplicity and ease-of-use. It also has a strong focus on security and reliability, featuring a minimum of moving parts, usage of OpenSSH for transport (with other transports and pull modes as alternatives), and a language that is designed around auditability by humans–even those not familiar with the program.</p>
<p>Ansible is a universal language, unraveling the mystery of how work gets done. Turn tough tasks into repeatable playbooks.</p>
<p>This article is about how to use community.kubernetes.helm to manage releases with the Helm package manager.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Install-Ansible"><a href="#Install-Ansible" class="headerlink" title="Install Ansible"></a>Install Ansible</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install ansible</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> ansible --version</span></span><br><span class="line">ansible 2.9.13</span><br><span class="line">  config file = None</span><br><span class="line">  configured module search path = [&#x27;/Users/cloudolife/.ansible/plugins/modules&#x27;, &#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">  ansible python module location = /usr/local/Cellar/ansible/2.9.13/libexec/lib/python3.8/site-packages/ansible</span><br><span class="line">  executable location = /usr/local/bin/ansible</span><br><span class="line">  python version = 3.8.5 (default, Jul 21 2020, 10:48:26) [Clang 11.0.3 (clang-1103.0.32.62)]</span><br></pre></td></tr></table></figure>

<h3 id="Install-community-kubernetes"><a href="#Install-community-kubernetes" class="headerlink" title="Install community.kubernetes"></a>Install community.kubernetes</h3><p>This plugin is part of the community.kubernetes collection.</p>
<p>To install it use: </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ansible-galaxy collection install community.kubernetes</span></span><br></pre></td></tr></table></figure>

<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>To use it in a playbook, specify: <code>community.kubernetes.helm</code>. For example use <code>ommunity.kubernetes.helm</code> to install nfs-server-provisioner helm chart.</p>
<p>See the directory structure.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tree .</span></span><br><span class="line">.</span><br><span class="line">└── playbooks</span><br><span class="line">    ├── helm.yml</span><br><span class="line">    └── values.yaml</span><br></pre></td></tr></table></figure>

<p>Edit the playbook file.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># playbooks/helm.yml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Kubernetes</span> <span class="string">(K8S)</span> <span class="string">packages</span> <span class="string">by</span> <span class="string">community.kubernetes.helm.</span> </span><br><span class="line"><span class="comment">#   become: yes</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">localhost</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">python</span> <span class="string">package.</span></span><br><span class="line">      <span class="attr">pip:</span></span><br><span class="line">        <span class="attr">name:</span> </span><br><span class="line">          <span class="comment"># PyYAML · PyPI</span></span><br><span class="line">          <span class="comment"># https://pypi.org/project/PyYAML/</span></span><br><span class="line">          <span class="comment"># or pip install PyYAML</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">PyYAML</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># community.kubernetes.helm - Manages Kubernetes packages with the Helm package manager — Ansible Documentation</span></span><br><span class="line">    <span class="comment"># https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html</span></span><br><span class="line">    <span class="comment"># helm repo add jetstack https://charts.jetstack.io &amp;&amp; helm repo update</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">jetstack</span> <span class="string">chart</span> <span class="string">repo</span></span><br><span class="line">      <span class="attr">community.kubernetes.helm_repository:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">jetstack</span></span><br><span class="line">        <span class="attr">repo_url:</span> <span class="string">&quot;https://charts.jetstack.io&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># helm install cert-manager jetstack/cert-manager --namespace cert-manager --version 1.0.4 -f values.yaml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">cert-manager</span> <span class="string">chart</span> <span class="string">using</span> <span class="string">values</span> <span class="string">files</span> <span class="string">on</span> <span class="string">target</span></span><br><span class="line">      <span class="attr">community.kubernetes.helm:</span></span><br><span class="line">        <span class="attr">binary_path:</span> <span class="string">/usr/local/bin/helm</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">cert-manager</span></span><br><span class="line">        <span class="attr">chart_ref:</span> <span class="string">jetstack/cert-manager</span></span><br><span class="line">        <span class="attr">chart_version:</span> <span class="number">1.0</span><span class="number">.4</span></span><br><span class="line">        <span class="comment"># kubectl create namespace cert-manager</span></span><br><span class="line">        <span class="attr">create_namespace:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">release_namespace:</span> <span class="string">cert-manager</span></span><br><span class="line">        <span class="attr">values:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;file&#x27;, &#x27;values.yaml&#x27;) | from_yaml &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ansible-playbook -i hosts playbooks/helm.yml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about cert-manager.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace cert-manager</span></span><br><span class="line">NAME                           NAMESPACE       REVISION    UPDATED                                   STATUS      CHART                                APP VERSION</span><br><span class="line">cert-manager                   cert-manager    1           2020-09-12 11:24:36.704126 +0800 +0800    deployed    cert-manager-v1.0.2                  v1.0.2</span><br></pre></td></tr></table></figure>

<p>See pods about cert-manager.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n cert-manager</span></span><br><span class="line">NAME                                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">cert-manager-57b65b7fc-dczgc                   1/1     Running   5          13d</span><br><span class="line">cert-manager-cainjector-5f988f74c6-9ll6k       1/1     Running   5          13d</span><br><span class="line">cert-manager-webhook-7cf554f879-ktkmg          1/1     Running   3          13d</span><br></pre></td></tr></table></figure>

<h2 id="More-examples"><a href="#More-examples" class="headerlink" title="More examples"></a>More examples</h2><p>Visist <a href="https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html">community.kubernetes.helm - Manages Kubernetes packages with the Helm package manager — Ansible Documentation: https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html</a> to see more examples.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html">community.kubernetes.helm - Manages Kubernetes packages with the Helm package manager — Ansible Documentation: https://docs.ansible.com/ansible/latest/collections/community/kubernetes/helm_module.html</a></p>
<p>[2] <a href="https://www.ansible.com/">Ansible is Simple IT Automation - https://www.ansible.com/</a></p>
<p>[3] <a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html">Installing Ansible — Ansible Documentation - https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
        <category>Ansible</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>community.kubernetes.helm</tag>
        <tag>Ansible</tag>
        <tag>DevOps</tag>
      </tags>
  </entry>
  <entry>
    <title>[Email] Use exmail.qq.com SMTPS protocol to send email from Alibaba Cloud Cloud</title>
    <url>/2020/08/15/Email/smtp.example.com/</url>
    <content><![CDATA[<p>For security reasons, Alibaba Cloud blocks outbound traffic on TCP port 25 by default. that You cannot connect to external addresses TCP port 25 from Alibaba Cloud Cloud servers (ECS).</p>
<h2 id="Background-Information"><a href="#Background-Information" class="headerlink" title="Background Information"></a>Background Information</h2><p>Blocking the outbound direction of TCP 25 port may affect your connection to the SMTP server of a third-party mail service provider through TCP 25 port to send external mail. If you need to use the cloud server on Alibaba Cloud to send external emails, it is recommended that you use Alibaba Cloud Mail products or use the 465 port provided by a third-party mail service provider.</p>
<p>Note If there are special scenarios, you must use TCP port 25 on the cloud server for external connections. Please submit a port 25 unblocking application in the security management and control platform. Alibaba Cloud will review the application reason you submitted and notify you of the review result by email.</p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Remember to replace the content within <code>&#123;&#123; &#125;&#125;</code> with your prefer value.</p>
<p>The <code>from_address</code> and <code>user</code> must be the same.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">smtp:</span></span><br><span class="line">  <span class="attr">from_address:</span> &#123;&#123; <span class="string">.Values.smtp.from_address</span> &#125;&#125; <span class="comment"># noreply@cloudolife.com</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">smtp.exmail.qq.com</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">465</span> <span class="comment"># not 25</span></span><br><span class="line">  <span class="attr">use_tls:</span> &#123;&#123; <span class="string">.Values.smtp.use_tls</span> &#125;&#125; <span class="comment"># true or false</span></span><br><span class="line">  <span class="attr">user:</span> &#123;&#123; <span class="string">.Values.smtp.user</span> &#125;&#125; <span class="comment"># noreply@cloudolife.com</span></span><br><span class="line">  <span class="attr">password:</span> &#123;&#123; <span class="string">.Values.smtp.password</span> &#125;&#125;</span><br><span class="line">  <span class="attr">enable_replies:</span> <span class="literal">false</span> <span class="comment"># or true</span></span><br></pre></td></tr></table></figure>

<h2 id="FAQs"><a href="#FAQs" class="headerlink" title="FAQs"></a>FAQs</h2><h3 id="smtp-or-smtps"><a href="#smtp-or-smtps" class="headerlink" title="smtp or smtps."></a>smtp or smtps.</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">The $MAIL_URL is &#x27;smtp://...:465&#x27;.  You probably want &#x27;smtps://&#x27; (The &#x27;s&#x27; enables TLS/SSL) since &#x27;465&#x27; is typically a secure port. undefined </span><br></pre></td></tr></table></figure>

<p>Use smtps protocols and 465 port instead of smtp and 25.</p>
<h3 id="Error-code-501"><a href="#Error-code-501" class="headerlink" title="Error code 501"></a>Error code 501</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Exception in defer callback: Error: Mail command failed: 501 ÏµÍ³ÒÑÇ¿ÖÆ¿ªÆôÕÊºÅÉý¼¶ÉèÖÃ£¬ÇëµÇÂ¼exmail.qq.com°ó¶¨Î¢ÐÅ</span><br></pre></td></tr></table></figure>

<p>This is because Tencent Enterprise Mailbox forced to enable the security certification before send email from client.</p>
<p>You can log in Tencent Enterprise Mailbox Administrator Web UI, find the sender’s account, and edit it to disable <code>enforce secure login</code> option.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://exmail.qq.com/">腾讯企业邮箱 - https://exmail.qq.com/</a></p>
<p>[2] <a href="https://help.aliyun.com/document_detail/56130.html">TCP 25端口解封申请 - 阿里云 - https://help.aliyun.com/document_detail/56130.html</a></p>
<p>[3] <a href="https://blog.csdn.net/weixin_30258027/article/details/95448730?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">阿里云服务器不能发邮件禁用25端口的三种解决方法_weixin_30258027的博客-CSDN博客 - https://blog.csdn.net/weixin_30258027/article/details/95448730?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Terraform</tag>
        <tag>Terraform Provider</tag>
        <tag>PostgreSQL</tag>
        <tag>Database</tag>
        <tag>CloudoLife (CoL)</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Large File Storage (LFS) version large files on the remote git server</title>
    <url>/2020/07/04/Git/Git-Large-File-Storage-LFS-version-large-files-on-the-remote-git-server/</url>
    <content><![CDATA[<h1 id="Git-Large-File-Storage-LFS"><a href="#Git-Large-File-Storage-LFS" class="headerlink" title="Git Large File Storage (LFS)"></a>Git Large File Storage (LFS)</h1><p>Git Large File Storage (LFS) is an open source Git extension for versioning large files that replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitLab, GitLab.com, GitHub.com or GitHub Enterprise.</p>
<a id="more"></a>

<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li><p>Large file versioning</p>
<p>  Version large files—even those as large as a couple GB in size—with Git.</p>
</li>
<li><p>More repository space</p>
<p>  Host more in your Git repositories. External file storage makes it easy to keep your repository at a manageable size.</p>
</li>
<li><p>Faster cloning and fetching<br>  Download less data. This means faster cloning and fetching from repositories that deal with large files.</p>
</li>
<li><p>Same Git workflow</p>
<p>  Work like you always do on Git—no need for additional commands, secondary storage systems, or toolsets.</p>
</li>
</ul>
<p>– Same access controls and permissions</p>
<pre><code>Keep the same access controls and permissions for large files as the rest of your Git repository when working with a remote host like GitHub.</code></pre>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install or <a href="https://github.com/git-lfs/git-lfs/releases/download/v2.12.1/git-lfs-darwin-amd64-v2.12.1.tar.gz">download</a> the Git command line extension <code>git-lfs</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X with brew.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install git-lfs</span></span><br></pre></td></tr></table></figure>

<h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p>Set up Git LFS for your user account by running:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git lfs install</span></span><br></pre></td></tr></table></figure>

<p>You only need to run this once per user account.</p>
<p>It will add the following to your <code>~/.gitconfig</code>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[filter &quot;lfs&quot;]</span><br><span class="line">    smudge &#x3D; git-lfs smudge -- %f</span><br><span class="line">    process &#x3D; git-lfs filter-process</span><br><span class="line">    required &#x3D; true</span><br><span class="line">    clean &#x3D; git-lfs clean -- %f</span><br></pre></td></tr></table></figure>

<h3 id="Tracking"><a href="#Tracking" class="headerlink" title="Tracking"></a>Tracking</h3><p>In each Git repository where you want to use Git LFS, select the file types you’d like Git LFS to manage (or directly edit your .gitattributes). You can configure additional file extensions at anytime.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git lfs track <span class="string">&quot;*.psd&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>Now make sure .gitattributes is tracked:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add .gitattributes</span></span><br></pre></td></tr></table></figure>

<p>Note that defining the file types Git LFS should track will not, by itself, convert any pre-existing files to Git LFS, such as files on other branches or in your prior commit history. To do that, use the git lfs migrate[1] command, which has a range of options designed to suit various potential use cases.</p>
<p>There is no step three. Just commit and push to GitHub as you normally would.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git add file.psd</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">&quot;Add design file&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git push origin master</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://git-lfs.github.com/">Git Large File Storage | Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise. - https://git-lfs.github.com/</a></p>
<p>[2] <a href="https://docs.gitlab.com/ee/topics/git/lfs/">Git Large File Storage (LFS) | GitLab - https://docs.gitlab.com/ee/topics/git/lfs/</a></p>
<p>[3] <a href="https://docs.gitlab.com/ee/topics/git/lfs/migrate_to_git_lfs.html">Migrate a Git repo into Git LFS with BFG | GitLab - https://docs.gitlab.com/ee/topics/git/lfs/migrate_to_git_lfs.html</a></p>
]]></content>
      <categories>
        <category>Software Configuration Management (SCM)</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>GitLab</tag>
        <tag>Git Large File Storage (LFS)</tag>
        <tag>Large File Storage (LFS)</tag>
        <tag>Software Configuration Management (SCM)</tag>
      </tags>
  </entry>
  <entry>
    <title>Use GitHub action to publishing Docker image to Docker Hub repository</title>
    <url>/2021/02/13/GitHub/Use-GitHub-action-to-publish-Docker-image-to-Docker-Hub-repository/</url>
    <content><![CDATA[<h1 id="GitHub-action"><a href="#GitHub-action" class="headerlink" title="GitHub action"></a>GitHub action</h1><p>Each time you push the code or create a new release on GitHub, you can trigger a workflow to publish your image. The workflow in the example below runs when the push event triggers.</p>
<p>In the example workflow below, we use the Docker build-push-action action to build the Docker image and, if the build succeeds, push the built image to Docker Hub.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://github.com/">Github</a> Account</p>
<p>GitHub is where over 56 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and features, power your CI/CD and DevOps workflows, and secure code before you commit it.</p>
</li>
<li><p><a href="https://hub.docker.com/">Docker Hub</a> Account</p>
<p>To push to Docker Hub, you will need to have a Docker Hub account, and have a Docker Hub repository created. For more information, see <a href="https://docs.docker.com/docker-hub/repos/#pushing-a-docker-container-image-to-docker-hub">“Pushing a Docker container image to Docker Hub”</a> in the Docker documentation.</p>
<p>The build-push-action options required for Docker Hub are:</p>
<p>username and password: This is your Docker Hub username and password. We recommend storing your Docker Hub username and password as secrets so they aren’t exposed in your workflow file. For more information, see “Creating and using encrypted secrets.” <a href="https://docs.github.com/en/actions/reference/encrypted-secrets">Encrypted secrets - GitHub Docs - https://docs.github.com/en/actions/reference/encrypted-secrets</a>.</p>
<p>repository: Your Docker Hub repository in the format DOCKER-HUB-NAMESPACE/DOCKER-HUB-REPOSITORY.</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="build-push-action-options"><a href="#build-push-action-options" class="headerlink" title="build-push-action options"></a>build-push-action options</h3><p>Create the <code>.github/workflows/publish.yml</code> file.</p>
<p>Remember to replace <code>cloudolife/col-github-action-example</code> with your prefer Docker Hub repository.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .github/workflows/publish.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Publish</span> <span class="string">Docker</span> <span class="string">image</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># on:</span></span><br><span class="line"><span class="comment">#   release:</span></span><br><span class="line"><span class="comment">#     types: [published]</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">push_to_registry:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Push</span> <span class="string">Docker</span> <span class="string">image</span> <span class="string">to</span> <span class="string">Docker</span> <span class="string">Hub</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">out</span> <span class="string">the</span> <span class="string">repo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Push</span> <span class="string">to</span> <span class="string">Docker</span> <span class="string">Hub</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/build-push-action@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKER_USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKER_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">repository:</span> <span class="string">cloudolife/col-github-action-example</span></span><br><span class="line">          <span class="attr">tag_with_ref:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>GitHub action will run automatically after your push the code to GitHub.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://docs.github.com/en/actions/guides/publishing-docker-images">Publishing Docker images - GitHub Docs - https://docs.github.com/en/actions/guides/publishing-docker-images</a></p>
<p>[2] <a href="https://docs.docker.com/docker-hub/repos/#pushing-a-docker-container-image-to-docker-hub">Repositories | Docker Documentation - https://docs.docker.com/docker-hub/repos/#pushing-a-docker-container-image-to-docker-hub</a></p>
<p>[3] <a href="https://docs.github.com/en/actions/learn-github-actions">Learn GitHub Actions - GitHub Docs - https://docs.github.com/en/actions/learn-github-actions</a></p>
<p>[4] <a href="https://docs.github.com/en/actions/reference/encrypted-secrets">Encrypted secrets - GitHub Docs - https://docs.github.com/en/actions/reference/encrypted-secrets</a></p>
<p>[5] <a href="https://github.com/">Github</a></p>
<p>[6] <a href="https://hub.docker.com/">Docker Hub</a></p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>GitHub Action</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>DevOps</tag>
        <tag>Continuous Integration (CI)</tag>
        <tag>Docker Hub</tag>
        <tag>GitHub Action</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] A few ways to download images from k8s.gcr.io</title>
    <url>/2020/10/03/Kubernetes-K8S/A-few-ways-to-download-images-from-k8s-gcr-io/</url>
    <content><![CDATA[<p>The biggest problem in deploying Kubernetes (K8S) is mirror downloading too slowly. It is difficult to download images from hub such as k8s.gcr.io in a domestic environment because network limit.</p>
<a id="more"></a>

<p>There are a fee ways:</p>
<ol>
<li><p>Directly designate a domestic mirror (such as an Alibaba Cloud mirror) to pull and download images.</p>
</li>
<li><p>After successfully pulling the images in the mirror, tag it to become the corresponding mirror of k8s.gcr.io.</p>
</li>
<li><p>Finally delete the image tag pulled from the mirror.</p>
</li>
</ol>
<hr>
<p>Make sure that the <code>imagePullPolicy</code> policy is <code>IfNotPresent</code>, that is, if there is a local mirror, use the local mirror instead of pulling!</p>
<hr>
<p>Or put the downloaded image in the <code>Harbor</code> private repository, and then point the image download source to the harbor private repository address.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Remember to replace coredns:1.7.0 with your prefer image and version.</p>
<p>Pull and tag one image.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> IMAGE_VERSION=coredns:1.7.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker pull registry.aliyuncs.com/google_containers/<span class="variable">$&#123;IMAGE_VERSION&#125;</span> &amp;&amp; \</span></span><br><span class="line">  docker tag registry.aliyuncs.com/google_containers/$&#123;IMAGE_VERSION&#125; k8s.gcr.io/$&#123;IMAGE_VERSION&#125; &amp;&amp; \</span><br><span class="line">  docker rmi registry.aliyuncs.com/google_containers/$&#123;IMAGE_VERSION&#125;</span><br></pre></td></tr></table></figure>

<p>Pull and tag multiple images.</p>
<p>Remember to replace coredns:1.7.0 and pause:3.2 with your prefer image and version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> IMAGE_VERSIONS=<span class="string">&quot;coredns:1.7.0 pause:3.2&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> IMAGE_VERSION <span class="keyword">in</span> <span class="variable">$&#123;IMAGE_VERSIONS&#125;</span>; \</span></span><br><span class="line">  do \</span><br><span class="line">    docker pull registry.aliyuncs.com/google_containers/$&#123;IMAGE_VERSION&#125; &amp;&amp; \</span><br><span class="line">    docker tag registry.aliyuncs.com/google_containers/$&#123;IMAGE_VERSION&#125; k8s.gcr.io/$&#123;IMAGE_VERSION&#125; &amp;&amp; \</span><br><span class="line">    docker rmi registry.aliyuncs.com/google_containers/$&#123;IMAGE_VERSION&#125;; \</span><br><span class="line">  done</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.cnblogs.com/kevingrace/p/12778066.html">无法直接在国内网络环境下从k8s.gcr.io下载镜像问题 - 散尽浮华 - 博客园 - https://www.cnblogs.com/kevingrace/p/12778066.html</a></p>
<p>[2] <a href="https://goharbor.io/">Harbor - https://goharbor.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Cloud Computing</category>
        <category>Kubernetes (K8S)</category>
        <category>Aliyun (AliCloud) / Alibaba Cloud</category>
        <category>Harbor</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Aliyun (AliCloud) / Alibaba Cloud</tag>
        <tag>Cloud Computing</tag>
        <tag>Harbor</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Access Service or Pod with 80 or 443 port outside macOS Docker-Desktop Kubernetes (K8S)</title>
    <url>/2020/10/31/Kubernetes-K8S/Access-Service-with-80-or-443-port-outside-macOS-Docker-Desktop-Kubernetes-K8S/</url>
    <content><![CDATA[<p>There are some ways accessing Service with 80 or 443 port outside macOS Docker-Desktop Kubernetes (K8S), include LoadBalancer, NodePort, and Port Forward(<code>kubectl port-forward</code>, <code>socat</code>, <code>Packet Filter(pf)</code>, etc.)</p>
<a id="more"></a>

<h2 id="LoadBalancer"><a href="#LoadBalancer" class="headerlink" title="LoadBalancer"></a>LoadBalancer</h2><p>On cloud providers which support external load balancers, setting the type field to LoadBalancer provisions a load balancer for your Service. The actual creation of the load balancer happens asynchronously, and information about the provisioned balancer is published in the Service’s .status.loadBalancer field. </p>
<p>On macOS you can specify Sevice type loadBalancer which loadBalancerIP is within 127.0.0.1/24 subnet(such as 127.0.0.240).</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nginx.LoadBalancer.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1beta2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">30080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">32443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line">  <span class="attr">loadBalancerIP:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.240</span></span><br></pre></td></tr></table></figure>

<p>Then, apply the manifest file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f nginx.LoadBalancer.yaml</span></span><br></pre></td></tr></table></figure>

<p>Check Service status.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get svc</span><br><span class="line">NAMESPACE NAME      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">default   nginx  LoadBalancer   10.104.166.92    localhost     80:30080/TCP,443:32443/TCP   2d9h</span><br></pre></td></tr></table></figure>

<p>You can see the EXTERNAL-IP will be assign to localhost.</p>
<p>Once the service is up and running, on Mac this will only be routable by visiting either 127.0.0.1 or localhost. You can go to it on a browser at <a href="http://127.0.0.1/">http://127.0.0.1</a>, <a href="https://127.0.0.1/">https://127.0.0.1</a>, <a href="http://localhost/">http://localhost</a> or <a href="https://localhost/">https://localhost</a>. </p>
<h2 id="NodePort"><a href="#NodePort" class="headerlink" title="NodePort"></a>NodePort</h2><h3 id="Change-kube-apiserver-–service-node-port-range-parameters"><a href="#Change-kube-apiserver-–service-node-port-range-parameters" class="headerlink" title="Change kube-apiserver –service-node-port-range parameters"></a>Change kube-apiserver –service-node-port-range parameters</h3><p>Exposes the Service on each Node’s IP at a static port (the NodePort). A ClusterIP Service, to which the NodePort Service routes, is automatically created. You’ll be able to contact the NodePort Service, from outside the cluster, by requesting <NodeIP>:<NodePort>.</p>
<p>If you set the type field to NodePort, the Kubernetes control plane allocates a port from a range specified by <code>--service-node-port-range</code> flag (default: 30000-32767). Each node proxies that port (the same port number on every Node) into your Service. Your Service reports the allocated port in its .spec.ports[*].nodePort field.</p>
<p>The following way to change kube-apiserver <code>--service-node-port-range</code> parameters for Docker-desktop Kubernetes (K8S) on macOS:</p>
<ol>
<li>login to Docker-Desktop VM:</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run --rm -it --privileged --pid=host walkerlee/nsenter -t 1 -m -u -i -n sh</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Edit kube-apiserver.yaml (it’s one of static pods, they are created by kubelet using files in /etc/kubernetes/manifests)</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vi /etc/kubernetes/manifests/kube-apiserver.yaml</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>Add the following line to the pod spec:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kube-apiserver.yaml/etc/kubernetes/manifests/kube-apiserver.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-apiserver</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--advertise-address=192.168.65.3</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--service-node-port-range=1-65535</span>   <span class="comment"># &lt;-- add this line</span></span><br><span class="line">    <span class="string">...</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Save and exit. Remember to restart Docker-Desktop, then make kube-apiserver restart with new parameters.</p>
</li>
<li><p>Check kube-apiserver with new parameters.</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl describe pod kube-apiserver-docker-desktop -n kube-system | grep service-node-port-range</span></span><br><span class="line">      --service-node-port-range=1-65535</span><br></pre></td></tr></table></figure>

<h3 id="Forward-port"><a href="#Forward-port" class="headerlink" title="Forward port"></a>Forward port</h3><h4 id="kubectl-port-forward"><a href="#kubectl-port-forward" class="headerlink" title="kubectl port-forward"></a>kubectl port-forward</h4><p>kubectl port-forward allows using resource name, such as a service name, to select a matching service to forward a local port to a port on the Service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl port-forward service/nginx 80:32080</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl port-forward service/nginx 80:32443</span></span><br></pre></td></tr></table></figure>

<p>You can go to it on a browser at <a href="http://127.0.0.1/">http://127.0.0.1</a>, <a href="https://127.0.0.1/">https://127.0.0.1</a>, <a href="http://localhost/">http://localhost</a> or <a href="https://localhost/">https://localhost</a>. </p>
<h4 id="socat"><a href="#socat" class="headerlink" title="socat"></a>socat</h4><p><a href="http://www.dest-unreach.org/socat/">socat - http://www.dest-unreach.org/socat/</a> socat is a relay for bidirectional data transfer between two independent data channels. Each of these data channels may be a file, pipe, device (serial line etc. or a pseudo terminal), a socket (UNIX, IP4, IP6 - raw, UDP, TCP), an SSL socket, proxy CONNECT connection, a file descriptor (stdin etc.), the GNU line editor (readline), a program, or a combination of two of these. These modes include generation of “listening” sockets, named pipes, and pseudo terminals. </p>
<p>socat can be used, e.g., as TCP port forwarder (one-shot or daemon), as an external socksifier, for attacking weak firewalls, as a shell interface to UNIX sockets, IP6 relay, for redirecting TCP oriented programs to a serial line, to logically connect serial lines on different computers, or to establish a relatively secure environment (su and  chroot) for running client or server shell scripts with network connections.</p>
<p>You can use socat to forward 80 or 43 ports to Kubernetes (K8S) Service NodePort 32080 or 32443.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> forward 80 port</span></span><br><span class="line">socat -d -lf socat_ssh.log TCP4-LISTEN:80,reuseaddr,fork TCP4:127.0.0.1:32080</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> forward 443 prot</span></span><br><span class="line">socat -d -lf socat_ssh.log TCP4-LISTEN:443,reuseaddr,fork TCP4:127.0.0.1:32443</span><br></pre></td></tr></table></figure>

<p>You can go to it on a browser at <a href="http://127.0.0.1/">http://127.0.0.1</a>, <a href="https://127.0.0.1/">https://127.0.0.1</a>, <a href="http://localhost/">http://localhost</a> or <a href="https://localhost/">https://localhost</a>. </p>
<h4 id="pf"><a href="#pf" class="headerlink" title="pf"></a>pf</h4><p><a href="https://www.openbsd.org/faq/pf/">Packet Filter - https://www.openbsd.org/faq/pf/</a> (from here on referred to as PF) is OpenBSD’s system for filtering TCP/IP traffic and doing Network Address Translation. PF is also capable of normalizing and conditioning TCP/IP traffic, as well as providing bandwidth control and packet prioritization. PF has been a part of the GENERIC kernel since OpenBSD 3.0.</p>
<p>Use macOS PF firewall to forward 80 or 43 ports to Kubernetes (K8S) Service NodePort 32080 or 32443.</p>
<p>Add an anchor</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/pf.conf</span></span><br><span class="line"></span><br><span class="line">scrub-anchor &quot;com.apple/*&quot;</span><br><span class="line">nat-anchor &quot;com.apple/*&quot;</span><br><span class="line">nat-anchor &quot;custom&quot;</span><br><span class="line">rdr-anchor &quot;com.apple/*&quot;</span><br><span class="line">rdr-anchor &quot;custom&quot;</span><br><span class="line">dummynet-anchor &quot;com.apple/*&quot;</span><br><span class="line">anchor &quot;com.apple/*&quot;</span><br><span class="line">anchor &quot;custom&quot;</span><br><span class="line">load anchor &quot;com.apple&quot; from &quot;/etc/pf.anchors/com.apple&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add kuberneters pf rules.</span></span><br><span class="line">load anchor &quot;custom&quot; from &quot;/etc/pf.anchors/kuberneters&quot;</span><br></pre></td></tr></table></figure>

<p>Add pf rules.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/pf.anchors/kuberneters</span></span><br><span class="line">rdr inet proto tcp from any to any port 80 -&gt; 127.0.0.1 port 32080</span><br><span class="line">rdr inet proto tcp from any to any port 443 -&gt; 127.0.0.1 port 32443</span><br></pre></td></tr></table></figure>

<p>Enable pf rules.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo pfctl -evf /etc/pf.conf</span></span><br></pre></td></tr></table></figure>

<p>You can go to it on a browser at <a href="http://127.0.0.1/">http://127.0.0.1</a>, <a href="https://127.0.0.1/">https://127.0.0.1</a>, <a href="http://localhost/">http://localhost</a> or <a href="https://localhost/">https://localhost</a>. </p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://medium.com/@JockDaRock/kubernetes-metal-lb-for-docker-for-mac-windows-in-10-minutes-23e22f54d1c8">Kubernetes Metal LB for Docker for Mac/Windows in 10 Minutes | by Jock Reed | Medium - https://medium.com/@JockDaRock/kubernetes-metal-lb-for-docker-for-mac-windows-in-10-minutes-23e22f54d1c8</a></p>
<p>[2] <a href="https://stackoverflow.com/questions/57582980/how-to-change-the-default-nodeport-range-on-mac-docker-desktop">kubernetes - How to change the default nodeport range on Mac (docker-desktop)? - Stack Overflow - https://stackoverflow.com/questions/57582980/how-to-change-the-default-nodeport-range-on-mac-docker-desktop</a></p>
<p>[3] <a href="https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/">Use Port Forwarding to Access Applications in a Cluster | Kubernetes - https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/</a></p>
<p>[4] <a href="http://www.dest-unreach.org/socat/">socat - http://www.dest-unreach.org/socat/</a></p>
<p>[5] <a href="https://www.openbsd.org/faq/pf/">Packet Filter - https://www.openbsd.org/faq/pf/</a> </p>
<p>[6] <a href="https://kubernetes.io/docs/concepts/services-networking/service/">Service | Kubernetes - https://kubernetes.io/docs/concepts/services-networking/service/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>macOS</tag>
        <tag>macOS Docker-Desktop</tag>
        <tag>kubectl port-forward</tag>
        <tag>socat</tag>
        <tag>Packet Filter(pf)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Delete the terminating Namespace in Kubernetes (K8S)</title>
    <url>/2020/10/03/Kubernetes-K8S/Delete-the-terminating-Namespace-in-Kubernetes-K8S/</url>
    <content><![CDATA[<p>In some cases, a namespace cannot be deleted in Kubernetes (K8S), and it will remain stuck in terminating state. The steps to solve this problem are:</p>
<a id="more"></a>

<p>Remember to replace nginx-ingress with your prefer namespace name.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> K8S_NAMESPACE=nginx-ingress</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Confirm and delete manually</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get ns <span class="variable">$&#123;K8S_NAMESPACE&#125;</span> -o json &gt; <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json &amp;&amp; vi <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json &amp;&amp; kubectl replace --raw <span class="string">&quot;/api/v1/namespaces/<span class="variable">$&#123;K8S_NAMESPACE&#125;</span>/finalize&quot;</span> -f <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or Auto delete</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get ns <span class="variable">$&#123;K8S_NAMESPACE&#125;</span> -o json &gt; <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json &amp;&amp; sed -i <span class="string">&#x27;/&quot;kubernetes&quot;/&#x27;</span>d <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json &amp;&amp; kubectl replace --raw <span class="string">&quot;/api/v1/namespaces/<span class="variable">$&#123;K8S_NAMESPACE&#125;</span>/finalize&quot;</span> -f <span class="variable">$&#123;K8S_NAMESPACE&#125;</span>.json</span></span><br></pre></td></tr></table></figure>

<p>Delete multiple Namespaces.</p>
<p>Remember to replace nginx-ingress and cloudolife with your prefer namespace name.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> IMAGE_VERSIONS=<span class="string">&quot;nginx-ingress cloudolife&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> K8S_NAMESPACE <span class="keyword">in</span> <span class="variable">$&#123;K8S_NAMESPACES&#125;</span>; \</span></span><br><span class="line">  do \</span><br><span class="line">    kubectl get ns $&#123;K8S_NAMESPACE&#125; -o json &gt; $&#123;K8S_NAMESPACE&#125;.json &amp;&amp; sed -i &#x27;/&quot;kubernetes&quot;/&#x27;d $&#123;K8S_NAMESPACE&#125;.json &amp;&amp; kubectl replace --raw &quot;/api/v1/namespaces/$&#123;K8S_NAMESPACE&#125;/finalize&quot; -f $&#123;K8S_NAMESPACE&#125;.json; \</span><br><span class="line">  done</span><br></pre></td></tr></table></figure>

<p>The above command will delete the all elements(such as kubernetes) in finalizer array, leaving only an empty array [] with the namespace resource.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://support.huaweicloud.com/cce_faq/cce_faq_00277.html">K8S如何更新Terminating状态的命名空间？_云容器引擎 CCE_常见问题_集群类_集群运行_华为云 - https://support.huaweicloud.com/cce_faq/cce_faq_00277.html</a></p>
<p>[2] <a href="https://www.cnblogs.com/elnino/p/11104084.html">k8s 删除ns 卡住的解决办法 - ElNinoT - 博客园 - https://www.cnblogs.com/elnino/p/11104084.html</a></p>
<p>[3] <a href="https://my.oschina.net/u/4385577/blog/3483266">k8s 删除ns 卡住的解决办法 - osc_m8nx82a1的个人空间 - OSCHINA - 中文开源技术交流社区 - https://my.oschina.net/u/4385577/blog/3483266</a></p>
<p>[4] <a href="https://liarlee.site/2019/10/09/Linux/Linux_k8s-namespace-delete-terminating/">k8s所有的NS删除的时候都进入Terminating状态 | LiarLee’s Notebook - https://liarlee.site/2019/10/09/Linux/Linux_k8s-namespace-delete-terminating/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Cloud Computing</category>
        <category>Kubernetes (K8S)</category>
        <category>Namespace</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Cloud Computing</tag>
        <tag>Namespace</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Deploy Weave Scope to provide a visualization and monitoring tool for Kubernetes (K8S)</title>
    <url>/2020/11/21/Kubernetes-K8S/Deploy-Weave-Scope-to-provide-a-visualization-and-monitoring-tool-for-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Weave-Scope"><a href="#Weave-Scope" class="headerlink" title="Weave Scope"></a>Weave Scope</h1><p><a href="https://www.weave.works/oss/scope/">Weave Scope - https://www.weave.works/oss/scope/</a> is a visualization and monitoring tool for Docker and Kubernetes. It provides a top down view into your app as well as your entire infrastructure, and allows you to diagnose any problems with your distributed containerized app, in real time, as it is being deployed to a cloud provider.</p>
<p>Weave Scope help you to understand your application quickly by seeing it in a real time interactive display, with zero configuration or integration required — just launch and go.</p>
<p>Weave Scope automatically detects processes, containers, hosts. No kernel modules, no agents, no special libraries, no coding. Seamless integration with Docker, Kubernetes, DCOS and AWS ECS.</p>
<p>This article is about how to use <code>kubectl</code> to deploy Weave Scope on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>A simple way to get Scope running in a Kubernetes setting is to</p>
<p>Clone the Scope repo:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/weaveworks/scope</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> scope</span></span><br></pre></td></tr></table></figure>

<p>Run</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f examples/k8s</span></span><br></pre></td></tr></table></figure>

<p>to deploy Scope to your cluster.</p>
<p>See pods about weave.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n weave</span></span><br><span class="line">NAME                                         READY   STATUS    RESTARTS   AGE</span><br><span class="line">weave-scope-agent-5vmfn                      1/1     Running   1          84m</span><br><span class="line">weave-scope-agent-7hs9p                      1/1     Running   0          84m</span><br><span class="line">weave-scope-cluster-agent-65d685466c-txgg6   1/1     Running   0          37m</span><br></pre></td></tr></table></figure>

<p>Port-forward to access weave-scope-app:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl port-forward svc/weave-scope-app -n weave 4040:80</span></span><br></pre></td></tr></table></figure>

<p>Point your browser to <a href="http://127.0.0.1:4040/">http://127.0.0.1:4040</a>.</p>
<hr>
<p>Note: Do not expose the Scope service to the Internet, e.g. by changing the type to NodePort or LoadBalancer, or with Ingress. Scope allows anyone with access to the user interface control over your hosts and containers.</p>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.weave.works/docs/scope/latest/installing/#k8s">Installing Weave Scope - https://www.weave.works/docs/scope/latest/installing/#k8s</a></p>
<p>[2] <a href="https://www.weave.works/oss/scope/">Weave Scope - https://www.weave.works/oss/scope/</a></p>
<p>[3] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
      </categories>
      <tags>
        <tag>Kubernetes (K8S)</tag>
        <tag>Security</tag>
        <tag>Weave Scope</tag>
        <tag>weaveworks</tag>
        <tag>Visualization</tag>
        <tag>Monitor</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] Installing Docker and Docker Compose on Raspberry Pi OS</title>
    <url>/2021/01/01/Raspberry-Pi/Installing-Docker-and-Docker-Compose-on-Raspberry-Pi-OS/</url>
    <content><![CDATA[<p>At the end of May 2020, the Raspberry Pi Foundation announced Raspberry Pi OS, the new official operating system for the mini-computer that is replacing Raspbian.</p>
<p>The good news is that Raspberry Pi OS does support Docker and Docker Compose, in both the 32-bit and 64-bit variants! Read below on how to install it as well as Docker Compose.</p>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Installing-Docker"><a href="#Installing-Docker" class="headerlink" title="Installing Docker"></a>Installing Docker</h3><p>Installing Docker CE (Community Edition) on the Raspberry Pi OS requires running just a few commands.</p>
<p>The best way to install Docker is to fetch it from the official Docker repositories, so to ensure that you’re always running the latest version.</p>
<p>To install Docker CE on Raspberry Pi OS, both 32-bit and 64-bit, run:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install some required packages first</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install -y \</span></span><br><span class="line">     apt-transport-https \</span><br><span class="line">     ca-certificates \</span><br><span class="line">     curl \</span><br><span class="line">     gnupg2 \</span><br><span class="line">     software-properties-common</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Get the Docker signing key <span class="keyword">for</span> packages</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ID</span>&quot;</span>)/gpg | sudo apt-key add -</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Docker official repos</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span>] https://download.docker.com/linux/<span class="subst">$(. /etc/os-release; echo <span class="string">&quot;<span class="variable">$ID</span>&quot;</span>)</span> \</span></span></span><br><span class="line">     $(lsb_release -cs) stable&quot; | \</span><br><span class="line">    sudo tee /etc/apt/sources.list.d/docker.list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install Docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install -y --no-install-recommends \</span></span><br><span class="line">    docker-ce \</span><br><span class="line">    cgroupfs-mount</span><br></pre></td></tr></table></figure>

<p>Done! At this point, we just need to run two more commands to have the Docker service started and automatically launched at boot.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br></pre></td></tr></table></figure>

<p>Now that we have Docker running, we can test it by running the “hello world” image:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run --rm hello-world</span></span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (arm32v7)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta"> $</span><span class="bash"> docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>

<h3 id="Install-Docker-Compose"><a href="#Install-Docker-Compose" class="headerlink" title="Install Docker Compose"></a>Install Docker Compose</h3><p>Lastly, let’s look at how to add Docker Compose.</p>
<p>Docker Compose is normally installed from pre-built binaries, downloaded from the GitHub release page for the project. Sadly, those are not available for the ARM architecture.</p>
<p>We can however install Docker Compose from pip:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install required packages</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y python3-pip libffi-dev</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install Docker Compose from pip (using Python3)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This might take a <span class="keyword">while</span></span></span><br><span class="line">sudo pip3 install docker-compose</span><br></pre></td></tr></table></figure>

<p>With this, you now have a complete Raspberry Pi mini-server running Docker and ready to accept your containers.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose version</span></span><br><span class="line">docker-compose version 1.27.4, build unknown</span><br><span class="line">docker-py version: 4.4.1</span><br><span class="line">CPython version: 3.7.3</span><br><span class="line">OpenSSL version: OpenSSL 1.1.1d  10 Sep 2019</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://withblue.ink/2020/06/24/docker-and-docker-compose-on-raspberry-pi-os.html">Docker and Docker Compose on Raspberry Pi OS | With Blue Ink - https://withblue.ink/2020/06/24/docker-and-docker-compose-on-raspberry-pi-os.html</a></p>
<p>[2] <a href="https://www.docker.com/">Empowering App Development for Developers | Docker - https://www.docker.com/</a></p>
<p>[3] <a href="https://docs.docker.com/compose/">Overview of Docker Compose | Docker Documentation - https://docs.docker.com/compose/</a></p>
]]></content>
      <categories>
        <category>Raspberry Pi</category>
        <category>Docker</category>
        <category>Docker Compose</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Docker Compose</tag>
        <tag>Linux</tag>
        <tag>Raspberry Pi</tag>
        <tag>Raspberry Pi OS</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] Installing Snap on Raspberry Pi OS</title>
    <url>/2021/01/01/Raspberry-Pi/Installing-Snap-on-Raspberry-Pi-OS/</url>
    <content><![CDATA[<h1 id="Snap"><a href="#Snap" class="headerlink" title="Snap"></a>Snap</h1><p>Snap is a software packaging and deployment system developed by Canonical for the operating systems that use the Linux kernel. The packages, called snaps, and the tool for using them, snapd, work across a range of Linux distributions and allow upstream software developers to distribute their applications directly to users. Snaps are self-contained applications running in a sandbox with mediated access to the host system. Snap was originally released for cloud applications but was later ported to work for Internet of Things devices and desktop applications too.</p>
<p>Snap can be installed on a Raspberry Pi running the latest version of Raspberry Pi OS by opening a terminal and typing a couple of commands.</p>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Enter the following into the terminal:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt update</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install snapd</span></span><br></pre></td></tr></table></figure>

<p>You will also need to reboot your device. This can be accomplished from the terminal (and from the desktop), but make sure you save any open documents first:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo reboot</span></span><br></pre></td></tr></table></figure>

<p>After this, install the core snap in order to get the latest snapd.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo snap install core</span></span><br></pre></td></tr></table></figure>

<p>To test your system, install the hello-world snap and make sure it runs correctly:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> snap install hello-world</span></span><br><span class="line">hello-world 6.3 from Canonical✓ installed</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> hello-world</span></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure>

<p>Snap is now installed and ready to go! If you’re using a desktop, a great next step is to install the Snap Store app, and snaps can be more readily discovered, installed and managed from the Snap Store desktop app.</p>
<p>The Snap Store app is installed with the following command:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo snap install snap-store</span></span><br></pre></td></tr></table></figure>

<p>Snap Store can now be launched from your desktop’s default launcher.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://snapcraft.io/docs/installing-snap-on-raspbian">Installing snap on Raspberry Pi OS | Snapcraft documentation - https://snapcraft.io/docs/installing-snap-on-raspbian</a></p>
<p>[2] <a href="https://snapcraft.io/docs/installing-snap-store-app">Installing the Snap Store app | Snapcraft documentation - https://snapcraft.io/docs/installing-snap-store-app</a></p>
<p>[3] <a href="https://www.raspberrypi.org/">Teach, Learn, and Make with Raspberry Pi - https://www.raspberrypi.org/</a></p>
]]></content>
      <categories>
        <category>Raspberry Pi</category>
        <category>Package Manager</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Raspberry Pi</tag>
        <tag>Raspberry Pi OS</tag>
        <tag>Package Manager</tag>
        <tag>Snap</tag>
        <tag>Canonical</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] Resizing or disable Swap size</title>
    <url>/2021/01/01/Raspberry-Pi/Resizing-or-disable-Swap-Size/</url>
    <content><![CDATA[<h1 id="Raspberry-Pi-Swap-Size"><a href="#Raspberry-Pi-Swap-Size" class="headerlink" title="Raspberry Pi Swap Size"></a>Raspberry Pi Swap Size</h1><p>Users who stake on Raspberry Pis earlier than the Raspberry Pi 3 (such as the Original Raspberry Pi, Raspberry Pi Zero, and potentially the Raspberry Pi 2) may benefit from a significant increase in performance by enabling and/or increasing the size of the Raspberry Pi’s swap file.</p>
<a id="more"></a>

<hr>
<p>Note: Using a swap file could potentially result in an increase in writes &amp; reads to your Raspberry Pi’s SD card, possibly lowering the lifespan of the card. However in most cases Raspbian ships with a default swap file with a size of 100 MB and in this case we are simply increasing that to 2048 MB.</p>
<hr>
<p>First check the default Swap size should be 100 MB.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            924         287         107          23         530         652</span><br><span class="line">Swap:           100           1          99</span><br></pre></td></tr></table></figure>

<p>Edit the file <code>/etc/dphys-swapfile</code> and modify the variable <code>CONF_SWAPSIZE</code>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/dphys-swapfile - user settings <span class="keyword">for</span> dphys-swapfile package</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> author Neil Franklin, last modification 2010.05.05</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> copyright ETH Zuerich Physics Departement</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   use under either modified/non-advertising BSD or GPL license</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> this file is sourced with . so full normal sh syntax applies</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> the default settings are added as commented out CONF_*=* lines</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">where</span> we want the swapfile to be, this is the default</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CONF_SWAPFILE=/var/swap</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> size to absolute value, leaving empty (default) <span class="keyword">then</span> uses computed value</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   you most likely don<span class="string">&#x27;t want this, unless you have an special disk situation</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> CONF_SWAPSIZE=100</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Generally, when the memory is less than 2G, the swap partition should be twice the memory.</span></span><br><span class="line">CONF_SWAPSIZE=2048</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> size to computed value, this <span class="built_in">times</span> RAM size, dynamically adapts,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   guarantees that there is enough swap without wasting disk space on excess</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CONF_SWAPFACTOR=2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> restrict size (computed and absolute!) to maximally this <span class="built_in">limit</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   can be <span class="built_in">set</span> to empty <span class="keyword">for</span> no <span class="built_in">limit</span>, but beware of filled partitions!</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   this is/was a (outdated?) 32bit kernel <span class="built_in">limit</span> (<span class="keyword">in</span> MBytes), <span class="keyword">do</span> not overrun it</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   but is also sensible on 64bit to prevent filling /var or even / partition</span></span><br><span class="line"><span class="meta">#</span><span class="bash">CONF_MAXSWAP=2048</span></span><br></pre></td></tr></table></figure>

<p>Restart <code>dphys-swapfile.service</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/dphys-swapfile restart</span><br><span class="line">[....] Restarting dphys-swapfile (via systemctl): dphys-swapfile.service</span><br></pre></td></tr></table></figure>

<p>Check Swap size have been up to about 2048 MB.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            924         287         107          23         530         652</span><br><span class="line">Swap:          2047           1        2046</span><br></pre></td></tr></table></figure>

<p>That should be enough swap to complete any future work.</p>
<h2 id="Disable-Swap"><a href="#Disable-Swap" class="headerlink" title="Disable Swap"></a>Disable Swap</h2><p>Disable and remove Swap by run the follow commands.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dphys-swapfile swapoff</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo dphys-swapfile uninstall</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo update-rc.d dphys-swapfile remove</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt purge dphys-swapfile</span></span><br></pre></td></tr></table></figure>

<p>Then reboot your Raspberry Pi to make it enable.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo reboot</span></span><br></pre></td></tr></table></figure>

<p>Last check the Swap size should be 0 MB.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            924         315         120          18         488         621</span><br><span class="line">Swap:             0           0           0</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://nebl.io/neblio-university/enabling-increasing-raspberry-pi-swap/">Enabling &amp; Increasing Raspberry Pi Swap - Neblio - https://nebl.io/neblio-university/enabling-increasing-raspberry-pi-swap/</a></p>
<p>[2] <a href="https://pimylifeup.com/raspberry-pi-swap-file/">Increasing Swap on a Raspberry Pi - Pi My Life Up - https://pimylifeup.com/raspberry-pi-swap-file/</a></p>
]]></content>
      <categories>
        <category>Raspberry Pi</category>
        <category>Raspberry Pi OS</category>
        <category>Swap</category>
      </categories>
      <tags>
        <tag>Raspberry Pi</tag>
        <tag>Raspberry Pi OS</tag>
        <tag>Swap</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] k3sup install K3S Lightweight Kubernetes (K8S) on Raspberry Pi</title>
    <url>/2021/01/01/Raspberry-Pi/k3sup-install-K3S-Lightweight-Kubernetes-K8S-on-Raspberry-Pi/</url>
    <content><![CDATA[<h1 id="k3sup-🚀-said-‘ketchup’"><a href="#k3sup-🚀-said-‘ketchup’" class="headerlink" title="k3sup 🚀 (said ‘ketchup’)"></a>k3sup 🚀 (said ‘ketchup’)</h1><p>k3sup is a light-weight utility to get from zero to KUBECONFIG with k3s(Lightweight Kubernetes, the certified Kubernetes distribution built for IoT &amp; Edge computing) on any local or remote VM. All you need is ssh access and the k3sup binary to get kubectl access immediately.</p>
<p>The tool is written in Go and is cross-compiled for Linux, Windows, MacOS and even on Raspberry Pi. and uses ssh to install k3s to a remote Linux host. You can also use it to join existing Linux hosts into a k3s cluster as agents. First, k3s is installed using the utility script from Rancher, along with a flag for your host’s public IP so that TLS works properly. The kubeconfig file on the server is then fetched and updated so that you can connect from your laptop using kubectl.</p>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>First install k3sup.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> macOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install k3sup</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or Raspberry Pi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://github.com/alexellis/k3sup/releases/download/0.9.13/k3sup-armhf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod +x k3sup-armhf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv k3sup-armhf /usr/<span class="built_in">local</span>/bin/k3sup</span></span><br></pre></td></tr></table></figure>

<p>k3sup was developed to automate what can be a very manual and confusing process for many developers, who are already short on time. Once you’ve provisioned a VM with your favourite tooling, k3sup means you are only 60 seconds away from running kubectl get pods on your own computer. </p>
<h2 id="Install-K3S"><a href="#Install-K3S" class="headerlink" title="Install K3S"></a>Install K3S</h2><p>k3sup can install k3s through SSH remote machine or local machine.</p>
<h3 id="SSH-Remote-Machine"><a href="#SSH-Remote-Machine" class="headerlink" title="SSH Remote Machine"></a>SSH Remote Machine</h3><p>Install K3S on the remote machine(such as 192.168.1.110) through SSH.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> k3sup install --ip 192.168.1.110 --user pi</span></span><br><span class="line">Running: k3sup install</span><br><span class="line">2021/01/01 20:34:53 192.168.1.110</span><br><span class="line">Public IP: 192.168.1.110</span><br><span class="line">[INFO]  Finding release for channel v1.19</span><br><span class="line">[INFO]  Using v1.19.5+k3s2 as release</span><br><span class="line">[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v1.19.5+k3s2/sha256sum-arm.txt</span><br><span class="line">[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v1.19.5+k3s2/k3s-armhf</span><br><span class="line">[INFO]  Verifying binary download</span><br><span class="line">[INFO]  Installing k3s to /usr/local/bin/k3s</span><br><span class="line">[INFO]  Creating /usr/local/bin/kubectl symlink to k3s</span><br><span class="line">[INFO]  Creating /usr/local/bin/crictl symlink to k3s</span><br><span class="line">[INFO]  Skipping /usr/local/bin/ctr symlink to k3s, command exists in PATH at /usr/bin/ctr</span><br><span class="line">[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh</span><br><span class="line">[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh</span><br><span class="line">[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env</span><br><span class="line">[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service</span><br><span class="line">[INFO]  systemd: Enabling k3s unit</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.</span><br><span class="line">[INFO]  systemd: Starting k3s</span><br><span class="line">Result: [INFO]  Finding release for channel v1.19</span><br><span class="line">[INFO]  Using v1.19.5+k3s2 as release</span><br><span class="line">[INFO]  Downloading hash https://github.com/rancher/k3s/releases/download/v1.19.5+k3s2/sha256sum-arm.txt</span><br><span class="line">[INFO]  Downloading binary https://github.com/rancher/k3s/releases/download/v1.19.5+k3s2/k3s-armhf</span><br><span class="line">[INFO]  Verifying binary download</span><br><span class="line">[INFO]  Installing k3s to /usr/local/bin/k3s</span><br><span class="line">[INFO]  Creating /usr/local/bin/kubectl symlink to k3s</span><br><span class="line">[INFO]  Creating /usr/local/bin/crictl symlink to k3s</span><br><span class="line">[INFO]  Skipping /usr/local/bin/ctr symlink to k3s, command exists in PATH at /usr/bin/ctr</span><br><span class="line">[INFO]  Creating killall script /usr/local/bin/k3s-killall.sh</span><br><span class="line">[INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh</span><br><span class="line">[INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env</span><br><span class="line">[INFO]  systemd: Creating service file /etc/systemd/system/k3s.service</span><br><span class="line">[INFO]  systemd: Enabling k3s unit</span><br><span class="line">[INFO]  systemd: Starting k3s</span><br><span class="line"> Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.</span><br><span class="line">Saving file to: /Users/cloudolife/kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Test your cluster with:</span></span><br><span class="line">export KUBECONFIG=/Users/cloudolife/kubeconfig</span><br><span class="line">kubectl config set-context default</span><br><span class="line">kubectl get node -o wide</span><br></pre></td></tr></table></figure>

<p>Or SSH into Raspberry Pi and run `kubectl’.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh pi@192.168.1.110</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> On Raspberry Pi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo kubectl get node -o wide</span></span><br><span class="line">NAME          STATUS   ROLES    AGE   VERSION        INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                         KERNEL-VERSION   CONTAINER-RUNTIME</span><br><span class="line">raspberrypi   Ready    master   89m   v1.19.5+k3s2   192.168.1.110   &lt;none&gt;        Raspbian GNU/Linux 10 (buster)   5.4.79-v7+       containerd://1.4.3-k3s1</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo kubectl get pods -A</span><br><span class="line">NAMESPACE     NAME                                     READY   STATUS         RESTARTS   AGE</span><br><span class="line">kube-system   metrics-server-7b4f8b595-4kdwb           1/1     Running        0          85m</span><br><span class="line">kube-system   coredns-66c464876b-nwkn5                 1/1     Running        0          85m</span><br><span class="line">kube-system   local-path-provisioner-7ff9579c6-dzmrv   1/1     Running        0          85m</span><br><span class="line">kube-system   helm-install-traefik-xjgk4               1/1     Running        0          85m</span><br></pre></td></tr></table></figure>

<h3 id="Local-Machine"><a href="#Local-Machine" class="headerlink" title="Local Machine"></a>Local Machine</h3><p>If you are a local computer, you can bypass SSH with <code>k3sup install --local</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> On Raspberry Pi</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> k3sup install --<span class="built_in">local</span></span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/alexellis/k3sup">alexellis/k3sup: bootstrap Kubernetes with k3s over SSH &lt; 1 min 🚀 - https://github.com/alexellis/k3sup</a></p>
<p>[2] <a href="https://ma.ttias.be/deploying-highly-available-k3s-k3sup/">Deploying a highly-available K3s with K3sup - https://ma.ttias.be/deploying-highly-available-k3s-k3sup/</a></p>
<p>[3] <a href="https://k3s.io/">K3s: Lightweight Kubernetes - https://k3s.io/</a></p>
<p>[4] <a href="https://github.com/k3s-io/k3s">k3s/README.md at master · k3s-io/k3s - https://github.com/k3s-io/k3s</a></p>
<p>[5] <a href="https://formulae.brew.sh/formula/k3sup">k3sup — Homebrew Formulae - https://formulae.brew.sh/formula/k3sup</a></p>
]]></content>
      <categories>
        <category>Raspberry Pi</category>
        <category>Raspberry Pi OS</category>
        <category>Kubernetes (K8S)</category>
      </categories>
      <tags>
        <tag>Kubernetes (K8S)</tag>
        <tag>Linux</tag>
        <tag>Raspberry Pi</tag>
        <tag>Raspberry Pi OS</tag>
        <tag>macOS</tag>
        <tag>K3S</tag>
        <tag>k3sup</tag>
        <tag>Homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title>Computers Are Hard: building software with David Heinemeier Hansson</title>
    <url>/2020/10/31/Reading/Computers-are-Hard-Building-software-with-David-Heinemeier-Hansson/</url>
    <content><![CDATA[<h1 id="Summary-Building-software-with-David-Heinemeier-Hansson"><a href="#Summary-Building-software-with-David-Heinemeier-Hansson" class="headerlink" title="Summary - Building software with David Heinemeier Hansson"></a>Summary - Building software with David Heinemeier Hansson</h1><p>This article is about Building software with David Heinemeier Hansson from <a href="https://medium.com/computers-are-hard/computers-are-hard-building-software-with-david-heinemeier-hansson-c9025cdf225e">Computers Are Hard: building software with David Heinemeier Hansson | by Wojtek Borowicz | Computers Are Hard | Medium - https://medium.com/computers-are-hard/computers-are-hard-building-software-with-david-heinemeier-hansson-c9025cdf225e</a>.</p>
<a id="more"></a>

<h2 id="Unpredictable-Unknowable-and-Unshaped"><a href="#Unpredictable-Unknowable-and-Unshaped" class="headerlink" title="Unpredictable, Unknowable, and Unshaped"></a>Unpredictable, Unknowable, and Unshaped</h2><p>Software, in most cases, is inherently unpredictable, unknowable, and unshaped</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://medium.com/computers-are-hard/computers-are-hard-building-software-with-david-heinemeier-hansson-c9025cdf225e">Computers Are Hard: building software with David Heinemeier Hansson | by Wojtek Borowicz | Computers Are Hard | Medium - https://medium.com/computers-are-hard/computers-are-hard-building-software-with-david-heinemeier-hansson-c9025cdf225e</a></p>
]]></content>
      <categories>
        <category>Thinking</category>
        <category>Programming language</category>
      </categories>
      <tags>
        <tag>David Heinemeier Hansson</tag>
        <tag>Thinking</tag>
        <tag>Programming language</tag>
      </tags>
  </entry>
  <entry>
    <title>Software development language, TDD, Three-pronged approach from Rust at FP Complete, 2020</title>
    <url>/2021/01/30/Reading/Software-development-language-TDD-Three-pronged-approach-from-Rust-at-FP-Complete-2020/</url>
    <content><![CDATA[<h1 id="Summary-Rust-at-FP-Complete-2020-update"><a href="#Summary-Rust-at-FP-Complete-2020-update" class="headerlink" title="Summary - Rust at FP Complete, 2020 update"></a>Summary - Rust at FP Complete, 2020 update</h1><p>This article is about Software development language, TDD, Three-pronged approach from <a href="https://www.fpcomplete.com/blog/rust-at-fpco-2020/">Rust at FP Complete, 2020 update - https://www.fpcomplete.com/blog/rust-at-fpco-2020/</a>.</p>
<a id="more"></a>

<h2 id="Productivity-Robustness-and-Performance"><a href="#Productivity-Robustness-and-Performance" class="headerlink" title="Productivity, Robustness, and Performance"></a>Productivity, Robustness, and Performance</h2><p>Three pillars of a software development language: productivity, robustness, and performance. Often times, these three pillars are in conflict with each other, or at least appear to be. </p>
<p>Getting to market quickly (productivity) often involves skimping on quality assurance (robustness), or writing inefficient code (performance). Or you can write simple code which is easy to test and validate (productivity and robustness), but end up with a slow algorithm (performance). Optimizing the code takes time and may introduce new bugs.</p>
<h2 id="Two-weak-links-in-the-chain-of-techniques-TDD"><a href="#Two-weak-links-in-the-chain-of-techniques-TDD" class="headerlink" title="Two weak links in the chain of techniques TDD"></a>Two weak links in the chain of techniques TDD</h2><p>We’re big believers in using the computer itself to help us write better code. Some of this can be done with methodologies like test-driven development (TDD). But there are two weak links in the chain of techniques like TDD:</p>
<ol>
<li><p>It requires active effort to think through what needs to be tested</p>
</li>
<li><p>It’s possible to ignore these test failures and ship broken code</p>
</li>
</ol>
<h2 id="Three-pronged-approach"><a href="#Three-pronged-approach" class="headerlink" title="Three-pronged approach"></a>Three-pronged approach</h2><p>We’ve taken a three-pronged approach to Rust at FP Complete until now. This has included:</p>
<ol>
<li><p>Producing educational material for both internal and external audiences</p>
</li>
<li><p>Using Rust for internal tooling</p>
</li>
<li><p>Writing product code with Rust</p>
</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.fpcomplete.com/blog/rust-at-fpco-2020/">Rust at FP Complete, 2020 update - https://www.fpcomplete.com/blog/rust-at-fpco-2020/</a></p>
]]></content>
      <categories>
        <category>Thinking</category>
        <category>Programming language</category>
        <category>Rust</category>
      </categories>
      <tags>
        <tag>Thinking</tag>
        <tag>Programming language</tag>
        <tag>Productivity</tag>
        <tag>Robustness</tag>
        <tag>Performance</tag>
        <tag>Test-driven development (TDD)</tag>
        <tag>FP Complete</tag>
        <tag>Rust</tag>
      </tags>
  </entry>
  <entry>
    <title>[Weekly] 2021-02-20</title>
    <url>/2021/02/20/Weekly/2021-02-20/</url>
    <content><![CDATA[<h1 id="Cloud-oriented-Life-Weekly-2021-02-20"><a href="#Cloud-oriented-Life-Weekly-2021-02-20" class="headerlink" title="[Cloud-oriented Life Weekly] 2021-02-20"></a>[Cloud-oriented Life Weekly] 2021-02-20</h1><a id="more"></a>

<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><h3 id="GitHub-action"><a href="#GitHub-action" class="headerlink" title="GitHub action"></a>GitHub action</h3><p>Each time you push the code or create a new release on GitHub, you can trigger a workflow to publish your image. The workflow in the example below runs when the push event triggers.</p>
<p><a href="https://docs.github.com/en/actions/guides/publishing-docker-images">Publishing Docker images - GitHub Docs - https://docs.github.com/en/actions/guides/publishing-docker-images</a></p>
<h2 id="Programming-Language"><a href="#Programming-Language" class="headerlink" title="Programming Language"></a>Programming Language</h2><h2 id="Golang-Go"><a href="#Golang-Go" class="headerlink" title="Golang (Go)"></a>Golang (Go)</h2><p>Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.</p>
<p>The Go team is very happy to announce the release of Go 1.16 at 16 February 2021. </p>
<p><a href="https://blog.golang.org/go1.16">Go 1.16 is released - The Go Blog - https://blog.golang.org/go1.16</a></p>
<h2 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h2><h3 id="Automation-Testing"><a href="#Automation-Testing" class="headerlink" title="Automation-Testing"></a>Automation-Testing</h3><h4 id="miniprogram-automator"><a href="#miniprogram-automator" class="headerlink" title="miniprogram-automator"></a>miniprogram-automator</h4><p>miniprogram-automator is the Miniprogram Automation SDK provides developers with a set of solutions for manipulating Miniprograms through external scripts and Wechat Devtools so as to achieve the purpose of Miniprogram automation testing.</p>
<p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/quick-start.html">快速入门 | 微信开放文档 - https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/quick-start.html</a></p>
<h4 id="Playwright"><a href="#Playwright" class="headerlink" title="Playwright"></a>Playwright</h4><p>Playwright enables reliable end-to-end testing for modern web apps. It enables fast, reliable and capable automation across all modern browsers.</p>
<p><a href="https://playwright.dev/">Fast and reliable end-to-end testing for modern web apps | Playwright - https://playwright.dev/</a></p>
]]></content>
      <categories>
        <category>Weekly</category>
      </categories>
      <tags>
        <tag>Golang (Go)</tag>
        <tag>miniprogram-automator</tag>
        <tag>Playwright</tag>
        <tag>Weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>[macOS] Install HP Easy Start (HP Printer Software and Driver) on macOS</title>
    <url>/2021/02/06/macOS/Install-HP-Easy-Start-HP-Printer-Software-and-Driver-on-macOS/</url>
    <content><![CDATA[<h1 id="HP-Easy-Start"><a href="#HP-Easy-Start" class="headerlink" title="HP Easy Start"></a>HP Easy Start</h1><p>HP Easy Start is the new way to set up your HP printer and prepare your Mac for printing. HP Easy Start will locate and install the latest software for your printer and then guide you through printer setup.</p>
<p>HP Easy Start is a unique and useful application designed to guide you setting up with the most updated drivers for your HP Printer . These drivers address printer to computer compatibility, but also makes it easy to set up your devices ready for printing.</p>
<a id="more"></a>

<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>HP Easy Start Download on macOS is quite simple. Here are some of the ways for a quick download.</p>
<ul>
<li><p>Mac App Store</p>
<p><a href="https://apps.apple.com/us/app/hp-smart/id1474276998">‎HP Smart for Desktop on the Mac App Store - https://apps.apple.com/us/app/hp-smart/id1474276998</a></p>
</li>
<li><p>HP® Customer Support</p>
<p><a href="https://support.hp.com/us-en/drivers/selfservice/hp-easy-start/7376041">HP Easy Start Software and Driver Downloads | HP® Customer Support - https://support.hp.com/us-en/drivers/selfservice/hp-easy-start/7376041</a></p>
</li>
</ul>
<h2 id="FAQs"><a href="#FAQs" class="headerlink" title="FAQs"></a>FAQs</h2><h3 id="macOS-cannot-find-network-printer"><a href="#macOS-cannot-find-network-printer" class="headerlink" title="macOS cannot find network printer"></a>macOS cannot find network printer</h3><p>If you are using macOS, you must make sure that your macOS connected to the same Wi-Fi network used by the HP printer.</p>
<h3 id="We-were-unable-to-find-drivers-for-your-product"><a href="#We-were-unable-to-find-drivers-for-your-product" class="headerlink" title="We were unable to find drivers for your product"></a>We were unable to find drivers for your product</h3><p>Try manually selecting your operating system. If your operating system is not listed then HP may not provide driver support for your product with that operating system.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://support.hp.com/us-en/drivers/selfservice/hp-easy-start/7376041">HP Easy Start Software and Driver Downloads | HP® Customer Support - https://support.hp.com/us-en/drivers/selfservice/hp-easy-start/7376041</a></p>
<p>[2] <a href="https://apps.apple.com/us/app/hp-smart/id1474276998">‎HP Smart for Desktop on the Mac App Store - https://apps.apple.com/us/app/hp-smart/id1474276998</a></p>
]]></content>
      <categories>
        <category>macOS</category>
        <category>Printer</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>HP LaserJet Pro M1213nf Multifunction Printer</tag>
        <tag>Printer</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS Docker use NFS Volume to get a better performance</title>
    <url>/2020/12/12/macOS/macOS-Docker-use-NFS-Volume-to-get-a-better-performance/</url>
    <content><![CDATA[<h1 id="macOS-Docker-NFS-Volume"><a href="#macOS-Docker-NFS-Volume" class="headerlink" title="macOS Docker NFS Volume"></a>macOS Docker NFS Volume</h1><p>Why volumes on macOS work so slow? Docker For Mac runs the docker server within the virtual machine. The host machine shares the file system with the VM using osxfs. According to the documentation:</p>
<a id="more"></a>

<hr>
<p>There are a number of issues with the performance of directories bind-mounted with osxfs. In particular, writes of small blocks, and traversals of large directories are currently slow. Additionally, containers that perform large numbers of directory operations, such as repeated scans of large directory trees, may suffer from poor performance.</p>
<hr>
<p>My blog project based on Hexo(with next theme) consist of lots of files. Docker needs to keep in sync tons of files between the host machine and the container.</p>
<h2 id="NFS-Volume"><a href="#NFS-Volume" class="headerlink" title="NFS Volume"></a>NFS Volume</h2><p>The docker-compose allows defining the NFS volume that can be mounted to the container. The only thing you need to do is to configure and expose your NFS server.</p>
<p>If you want to mount volumes from NFS, you need to expose selected directories in /etc/export file.</p>
<p>First edit the /etc/exports file. If it doesn’t exist, which was my case, create it and eidt:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/exports</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> For MacOS Catalina Users</span></span><br><span class="line">/System/Volumes/Data -alldirs -mapall=501:20 localhost</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> For Others MacOS Versions</span></span><br><span class="line">/Users -alldirs -mapall=501:20 localhost</span><br></pre></td></tr></table></figure>

<p>Edit /etc/nfs.conf to tell the NFS daemon to allow connections from any port. This is necessary as Docker NFS connections can be blocked.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/nfs.conf</span></span><br><span class="line"></span><br><span class="line">nfs.server.mount.require_resv_port = 0</span><br></pre></td></tr></table></figure>

<p>Restart NFS to take .</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo nfsd restart</span></span><br></pre></td></tr></table></figure>

<p>Check NFS service status.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo nfsd status</span></span><br><span class="line">nfsd service is enabled</span><br><span class="line">nfsd is running (pid 7612, 8 threads)</span><br></pre></td></tr></table></figure>

<h2 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h2><p>Now we are going to configure your docker-compose.yml so that the volumes are made via NFS. Below is a simple example that can be easily adapted to the project you are working on:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: &#39;3&#39;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  # docker-compose run app sh</span><br><span class="line">  # docker-compose run --service-ports app sh</span><br><span class="line">  app:</span><br><span class="line">    build:</span><br><span class="line">      context: ..&#x2F;</span><br><span class="line">      dockerfile: docker&#x2F;Dockerfile</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;4008:4000&quot;</span><br><span class="line">    # restart: on-failure</span><br><span class="line">    volumes:</span><br><span class="line">      - nfsmount:&#x2F;app</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  nfsmount:</span><br><span class="line">    driver: local</span><br><span class="line">    driver_opts:</span><br><span class="line">      type: nfs</span><br><span class="line">      o: addr&#x3D;host.docker.internal,rw,nolock,hard,nointr,nfsvers&#x3D;3</span><br><span class="line">      device: &quot;:&#x2F;System&#x2F;Volumes&#x2F;Data&#x2F;$&#123;PWD&#125;&quot;</span><br></pre></td></tr></table></figure>

<p>You see we have a volume called nfsmount, which can be called anything you want, which has some extra parameters for your volume.</p>
<p>That done, you can now upload your containers and see the huge difference this one will bring to you.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run app bash</span></span><br><span class="line">docker-compose run app bashCreating network &quot;blog-hexo-docker-compose_default&quot; with the default driver</span><br><span class="line">Creating volume &quot;blog-hexo-docker-compose_nfsmount&quot; with local driver</span><br><span class="line">Creating blog-hexo-docker-compose_app_run ... done</span><br><span class="line">bash-5.0# hexo g</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.0.0-rc.5</span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 1.67 s</span><br><span class="line">INFO  Deleted: tags/Cert-Manager/index.html</span><br><span class="line">INFO  Deleted: 2020/07/04/git/Git-Large-File-Storage-LFS-version-large-files-on-the-remote-git-server/index.html</span><br><span class="line">INFO  Generated: tags/cert-manager/index.html</span><br><span class="line">INFO  Generated: 2020/07/04/Git/Git-Large-File-Storage-LFS-version-large-files-on-the-remote-git-server/index.html</span><br><span class="line">INFO  2 files generated in 1.88 s</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.yiiacademy.com.br/en/2020/04/30/slow-docker-on-mac-use-nfs/">Slow docker on Mac? Use NFS! | Yii Academy - https://www.yiiacademy.com.br/en/2020/04/30/slow-docker-on-mac-use-nfs/</a></p>
<p>[2] <a href="https://blog.fingo.pl/speed-up-docker-using-nfs-volumes/">Speed up docker using NFS volumes – FINGO Blog - https://blog.fingo.pl/speed-up-docker-using-nfs-volumes/</a></p>
]]></content>
      <categories>
        <category>macOS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>macOS</tag>
        <tag>Network File System (NFS)</tag>
      </tags>
  </entry>
  <entry>
    <title>[DevOps] Use logrotate to automatic rotate, compress, remove and mail log files</title>
    <url>/2020/07/04/DevOps/Logging/Use-logrotate-to-automatic-rotate-compress-remove-and-mail-log-files/</url>
    <content><![CDATA[<h1 id="logrotate"><a href="#logrotate" class="headerlink" title="logrotate"></a>logrotate</h1><p>The <code>logrotate</code> utility is designed to simplify the administration of log files on a system which generates a lot of log files. Logrotate allows for the automatic rotation compression, removal and mailing of log files. Logrotate can be set to handle a log file hourly, daily, weekly, monthly or when the log file gets to a certain size.</p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>The Linux system installs <code>logrotate</code> by default.</p>
<p>The primary configuration file for <code>logrotate</code> which sets default parameters is <code>/etc/logrotate.conf</code>; additional application-specific configuration files are included from the <code>/etc/logrotate.d</code> directory. Values set in application-specific configuration files override those same parameters in the primary configuration file. See <a href="https://man.archlinux.org/man/logrotate.conf.5">logrotate.conf(5) — Arch manual pages - https://man.archlinux.org/man/logrotate.conf.5</a> for configuration examples and a reference of available directives.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/logrotate.d/mylog</span></span><br><span class="line"></span><br><span class="line">/app/mylog/*.log &#123;</span><br><span class="line">        daily</span><br><span class="line">        missingok</span><br><span class="line">        copytruncate</span><br><span class="line">        rotate 365</span><br><span class="line">        compress</span><br><span class="line">        delaycompress</span><br><span class="line">        notifempty</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>There are some frequent directives:</p>
<ul>
<li><p>compress</p>
<p>  Old versions of log files are compressed with gzip(1) by default. See also nocompress.</p>
</li>
<li><p>copytruncate</p>
<p>  Truncate the original log file in place after creating a copy, instead of moving the old log file and optionally creating a new one. It can be used when some program cannot be told to close its logfile and thus might continue writing (appending) to the previous log file forever. Note that there is a very small time slice between copying the file and truncating it, so some logging data might be lost. When this option is used, the create option will have no effect, as the old log file stays in place.</p>
</li>
<li><p>daily</p>
<p>  Log files are rotated every day.</p>
</li>
<li><p>delaycompress</p>
<p>  Postpone compression of the previous log file to the next rotation cycle. This only has effect when used in combination with compress. It can be used when some program cannot be told to close its logfile and thus might continue writing to the previous log file for some time.</p>
</li>
<li><p>missingok</p>
<p>  If the log file is missing, go on to the next one without issuing an error message. See also nomissingok.</p>
</li>
<li><p>notifempty</p>
<p>  Do not rotate the log if it is empty (this overrides the ifempty option).</p>
</li>
<li><p>rotate count</p>
<p>  Log files are rotated count times before being removed or mailed to the address specified in a mail directive. If count is 0, old versions are removed rather than rotated.</p>
</li>
</ul>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>logrotate is usually run through the systemd service: logrotate.service.</p>
<p>To run logrotate manually:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> logrotate /etc/logrotate.conf</span></span><br></pre></td></tr></table></figure>

<p>To rotate a single log file:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> logrotate /etc/logrotate.d/mylog</span></span><br></pre></td></tr></table></figure>

<p>See <a href="https://linux.die.net/man/8/logrotate">logrotate(8) - Linux man page - https://linux.die.net/man/8/logrotate</a> for more details.</p>
<h2 id="Debug-or-Verbose-logrotate"><a href="#Debug-or-Verbose-logrotate" class="headerlink" title="Debug or Verbose logrotate"></a>Debug or Verbose logrotate</h2><p>To simulate running your configuration file (dry run):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> logrotate --debug /etc/logrotate.d/mylog</span></span><br></pre></td></tr></table></figure>

<p>To force running rotations even when conditions are not met, run:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> logrotate -vf /etc/logrotate.d/mylog</span></span><br></pre></td></tr></table></figure>

<h2 id="Check-logrotate-cron"><a href="#Check-logrotate-cron" class="headerlink" title="Check logrotate cron"></a>Check logrotate cron</h2><p>Normally, logrotate is run as a daily cron job by default.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat /etc/cron.daily/logrotate</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line">/usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf</span><br><span class="line">EXITVALUE=$?</span><br><span class="line">if [ $EXITVALUE != 0 ]; then</span><br><span class="line">    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</span><br><span class="line">fi</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<p>It will not modify a log multiple times in one day unless the criterion for that log is based on the log’s size and logrotate is being run multiple times each day, or unless the -f or –force option is used.</p>
<h2 id="Check-logrotate-status"><a href="#Check-logrotate-status" class="headerlink" title="Check logrotate status"></a>Check logrotate status</h2><p>Logrotate rotations are usually logged to /var/lib/logrotate/logrotate.status or /var/lib/logrotate.status (according to the operating system or the -s option allows you to specify another state file):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat /var/lib/logrotate/logrotate.status</span></span><br><span class="line">logrotate state -- version 2</span><br><span class="line">&quot;/var/log/yum.log&quot; 2020-11-29-3:26:1</span><br><span class="line">&quot;/var/log/boot.log&quot; 2020-11-29-3:29:1</span><br><span class="line">&quot;/var/log/chrony/*.log&quot; 2020-11-29-3:0:0</span><br><span class="line">&quot;/var/log/spooler&quot; 2020-11-29-3:11:1</span><br><span class="line">&quot;/var/log/btmp&quot; 2020-11-29-3:50:1</span><br><span class="line">&quot;/var/log/maillog&quot; 2020-11-29-3:11:1</span><br><span class="line">&quot;/var/log/wpa_supplicant.log&quot; 2020-11-29-3:0:0</span><br><span class="line">&quot;/var/log/secure&quot; 2020-11-29-3:11:1</span><br><span class="line">&quot;/var/log/messages&quot; 2020-11-29-3:11:1</span><br><span class="line">&quot;/var/log/cron&quot; 2020-11-29-3:11:1</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://linux.die.net/man/8/logrotate">logrotate(8) - Linux man page - https://linux.die.net/man/8/logrotate</a></p>
<p>[2] <a href="https://man.archlinux.org/man/logrotate.conf.5">logrotate.conf(5) — Arch manual pages - https://man.archlinux.org/man/logrotate.conf.5</a></p>
<p>[3] <a href="https://wiki.archlinux.org/index.php/logrotate">Logrotate - ArchWiki - https://wiki.archlinux.org/index.php/logrotate</a></p>
<p>[4] <a href="https://github.com/logrotate/logrotate">logrotate/logrotate: The logrotate utility is designed to simplify the administration of log files on a system which generates a lot of log files. - https://github.com/logrotate/logrotate</a></p>
]]></content>
      <categories>
        <category>DevOps</category>
        <category>Logging</category>
      </categories>
      <tags>
        <tag>Best practices</tag>
        <tag>Linux</tag>
        <tag>DevOps</tag>
        <tag>logrotate</tag>
        <tag>cron</tag>
        <tag>Logging</tag>
      </tags>
  </entry>
  <entry>
    <title>[Infrastructure as Code (IaC)] Get Started with Kubernetes (K8S) - Use Pulumi Go SDK to manage Kubernetes (K8S)</title>
    <url>/2020/11/21/Infrastructure-as-Code-IaC/Pulumi/Pulumi-Get-Started-with-Kubernetes-K8S-Use-Pulumi-Go-SDK-to-manage-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Pulumi"><a href="#Pulumi" class="headerlink" title="Pulumi"></a>Pulumi</h1><p>Pulumi is a Modern Infrastructure as Code (IaC) to create, deploy, and manage infrastructure on any cloud using familiar programming languages and tools.</p>
<p>Pulumi’s Cloud Native SDK makes it easy to target any Kubernetes environment to provision a cluster, configure and deploy applications, and update them as required.</p>
<p>This article is about how to use Pulumi and Go SDK to manager Namespace and Deployment within Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</li>
</ul>
<h2 id="Install-Pulumi-and-Go"><a href="#Install-Pulumi-and-Go" class="headerlink" title="Install Pulumi and Go"></a>Install Pulumi and Go</h2><h3 id="Pulumi-1"><a href="#Pulumi-1" class="headerlink" title="Pulumi"></a>Pulumi</h3><p>Install the <a href="https://www.pulumi.com/">Pulumi - https://www.pulumi.com/</a> CLI.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install pulumi</span></span><br></pre></td></tr></table></figure>

<h3 id="Go-Language-Runtime"><a href="#Go-Language-Runtime" class="headerlink" title="Go Language Runtime"></a>Go Language Runtime</h3><p>Install <a href="https://golang.org/">Go - https://golang.org/</a> .</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install go</span></span><br></pre></td></tr></table></figure>

<h2 id="Configure-Kubernetes"><a href="#Configure-Kubernetes" class="headerlink" title="Configure Kubernetes"></a>Configure Kubernetes</h2><p>By default, Pulumi will look for a kubeconfig file in the following locations, just like kubectl:</p>
<ul>
<li><p>The environment variable: $KUBECONFIG,</p>
</li>
<li><p>Or in current user’s default kubeconfig directory: ~/.kube/config</p>
</li>
</ul>
<p>If the kubeconfig file is not in either of these locations, Pulumi will not find it, and it will fail to authenticate against the cluster. Set one of these locations to a valid kubeconfig file, if you have not done so already.</p>
<h2 id="Run-Pulumi"><a href="#Run-Pulumi" class="headerlink" title="Run Pulumi"></a>Run Pulumi</h2><p>Pulumi login into local file system.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi login file://.</span></span><br><span class="line">Logged in to cloudolife as cloudolife (file://.)</span><br><span class="line">or visit https://pulumi.com/docs/reference/install/ for manual instructions and release notes.</span><br></pre></td></tr></table></figure>

<p>Pulumi new a project with go SDK.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi new kubernetes-go</span></span><br><span class="line">This command will walk you through creating a new Pulumi project.</span><br><span class="line"></span><br><span class="line">Enter a value or leave blank to accept the (default), and press &lt;ENTER&gt;.</span><br><span class="line">Press ^C at any time to quit.</span><br><span class="line"></span><br><span class="line">project name: (cloudolife-pulumi-go-alicloud-k8s) </span><br><span class="line">project description: (A minimal Kubernetes Go Pulumi program) </span><br><span class="line">Created project &#x27;cloudolife-pulumi-go-alicloud-k8s&#x27;</span><br><span class="line"></span><br><span class="line">stack name: (dev) </span><br><span class="line">Created stack &#x27;dev&#x27;</span><br><span class="line">Enter your passphrase to protect config/secrets: </span><br><span class="line">Re-enter your passphrase to confirm: </span><br><span class="line"></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Installing dependencies...</span><br><span class="line"></span><br><span class="line">Finished installing dependencies</span><br><span class="line"></span><br><span class="line">Your new project is ready to go! ✨</span><br><span class="line"></span><br><span class="line">To perform an initial deployment, run &#x27;pulumi up&#x27;</span><br></pre></td></tr></table></figure>

<p>The above command will create some files within the current directory.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tree .</span><br><span class="line">.</span><br><span class="line">├── Pulumi.dev.yaml</span><br><span class="line">├── Pulumi.yaml</span><br><span class="line">├── go.mod</span><br><span class="line">├── go.sum</span><br><span class="line">└── main.go</span><br></pre></td></tr></table></figure>

<p>See and modify <a href="./main.go">main.go</a> file.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"># main.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    appsv1 <span class="string">&quot;github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/apps/v1&quot;</span></span><br><span class="line">    corev1 <span class="string">&quot;github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/core/v1&quot;</span></span><br><span class="line">    metav1 <span class="string">&quot;github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/pulumi/pulumi/sdk/v2/go/pulumi&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    pulumi.Run(<span class="function"><span class="keyword">func</span><span class="params">(ctx *pulumi.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Apply a namespace.</span></span><br><span class="line">        namespace, err := corev1.NewNamespace(ctx, <span class="string">&quot;pulumi-go-alicloud-k8s&quot;</span>, &amp;corev1.NamespaceArgs&#123;</span><br><span class="line">            Metadata: &amp;metav1.ObjectMetaArgs&#123;</span><br><span class="line">                Name: pulumi.String(<span class="string">&quot;pulumi-go-alicloud-k8s&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        appLabels := pulumi.StringMap&#123;</span><br><span class="line">            <span class="string">&quot;app&quot;</span>: pulumi.String(<span class="string">&quot;nginx&quot;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Apply a Deployment.</span></span><br><span class="line">        deployment, err := appsv1.NewDeployment(ctx, <span class="string">&quot;app-dep&quot;</span>, &amp;appsv1.DeploymentArgs&#123;</span><br><span class="line">            Metadata: &amp;metav1.ObjectMetaArgs&#123;</span><br><span class="line">                Namespace: namespace.Metadata.Elem().Name(),</span><br><span class="line">            &#125;,</span><br><span class="line">            Spec: appsv1.DeploymentSpecArgs&#123;</span><br><span class="line">                Selector: &amp;metav1.LabelSelectorArgs&#123;</span><br><span class="line">                    MatchLabels: appLabels,</span><br><span class="line">                &#125;,</span><br><span class="line">                Replicas: pulumi.Int(<span class="number">1</span>),</span><br><span class="line">                Template: &amp;corev1.PodTemplateSpecArgs&#123;</span><br><span class="line">                    Metadata: &amp;metav1.ObjectMetaArgs&#123;</span><br><span class="line">                        Labels: </span><br><span class="line">                        appLabels,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    Spec: &amp;corev1.PodSpecArgs&#123;</span><br><span class="line">                        Containers: corev1.ContainerArray&#123;</span><br><span class="line">                            corev1.ContainerArgs&#123;</span><br><span class="line">                                Name:  pulumi.String(<span class="string">&quot;nginx&quot;</span>),</span><br><span class="line">                                Image: pulumi.String(<span class="string">&quot;nginx&quot;</span>),</span><br><span class="line">                            &#125;&#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.Export(<span class="string">&quot;name&quot;</span>, deployment.Metadata.Elem().Name())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run pulumi up to create the namespace and pods.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi up</span></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Previewing update (dev):</span><br><span class="line">     Type                              Name                              Plan       </span><br><span class="line">     pulumi:pulumi:Stack               cloudolife-pulumi-go-alicloud-k8s-dev             </span><br><span class="line"> +   ├─ kubernetes:core/v1:Namespace   pulumi-go-alicloud-k8s            create     </span><br><span class="line"> +   └─ kubernetes:apps/v1:Deployment  app-dep                           create     </span><br><span class="line"> </span><br><span class="line">Outputs:</span><br><span class="line">  + name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Resources:</span><br><span class="line">    + 2 to create</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudolife/WorkSpaces/cloudolife/cloudolife-devops/cloudolife-pulumi/cloudolife-pulumi-go-alicloud-k8s/.pulumi/stacks/dev.json</span><br><span class="line">Do you want to perform this update? details</span><br><span class="line">  pulumi:pulumi:Stack: (same)</span><br><span class="line">    [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::pulumi:pulumi:Stack::cloudolife-pulumi-go-alicloud-k8s-dev]</span><br><span class="line">    + kubernetes:core/v1:Namespace: (create)</span><br><span class="line">        [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::kubernetes:core/v1:Namespace::pulumi-go-alicloud-k8s]</span><br><span class="line">        apiVersion: &quot;v1&quot;</span><br><span class="line">        kind      : &quot;Namespace&quot;</span><br><span class="line">        metadata  : &#123;</span><br><span class="line">            labels: &#123;</span><br><span class="line">                app.kubernetes.io/managed-by: &quot;pulumi&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            name  : &quot;pulumi-go-alicloud-k8s&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    + kubernetes:apps/v1:Deployment: (create)</span><br><span class="line">        [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::kubernetes:apps/v1:Deployment::app-dep]</span><br><span class="line">        apiVersion: &quot;apps/v1&quot;</span><br><span class="line">        kind      : &quot;Deployment&quot;</span><br><span class="line">        metadata  : &#123;</span><br><span class="line">            annotations: &#123;</span><br><span class="line">                pulumi.com/autonamed: &quot;true&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            labels     : &#123;</span><br><span class="line">                app.kubernetes.io/managed-by: &quot;pulumi&quot;</span><br><span class="line">            &#125;</span><br><span class="line">            name       : &quot;app-dep-rx8h9grh&quot;</span><br><span class="line">            namespace  : &quot;pulumi-go-alicloud-k8s&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        spec      : &#123;</span><br><span class="line">            replicas: 1</span><br><span class="line">            selector: &#123;</span><br><span class="line">                matchLabels: &#123;</span><br><span class="line">                    app: &quot;nginx&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            template: &#123;</span><br><span class="line">                metadata: &#123;</span><br><span class="line">                    labels: &#123;</span><br><span class="line">                        app: &quot;nginx&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                spec    : &#123;</span><br><span class="line">                    containers: [</span><br><span class="line">                        [0]: &#123;</span><br><span class="line">                            image: &quot;nginx&quot;</span><br><span class="line">                            name : &quot;nginx&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    --outputs:--</span><br><span class="line">  + name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Do you want to perform this update? yes</span><br><span class="line">Updating (dev):</span><br><span class="line">     Type                              Name                              Status      </span><br><span class="line">     pulumi:pulumi:Stack               cloudolife-pulumi-go-alicloud-k8s-dev              </span><br><span class="line"> +   ├─ kubernetes:core/v1:Namespace   pulumi-go-alicloud-k8s            created     </span><br><span class="line"> +   └─ kubernetes:apps/v1:Deployment  app-dep                           created     </span><br><span class="line"> </span><br><span class="line">Outputs:</span><br><span class="line">  + name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Resources:</span><br><span class="line">    + 2 created</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudolife/WorkSpaces/cloudolife/cloudolife-devops/cloudolife-pulumi/cloudolife-pulumi-go-alicloud-k8s/.pulumi/stacks/dev.json</span><br></pre></td></tr></table></figure>

<p>See namespaces abount pulumi-go-alicloud-k8s</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get namespace</span><br><span class="line">NAME                     STATUS   AGE</span><br><span class="line">pulumi-go-alicloud-k8s   Active   3m29s</span><br></pre></td></tr></table></figure>

<p>See pods about pulumi-go-alicloud-k8s.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n pulumi-go-alicloud-k8s</span></span><br><span class="line">NAMESPACE                NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">pulumi-go-alicloud-k8s   app-dep-rx8h9grh-f89759699-2hn27            1/1     Running   0          14s</span><br></pre></td></tr></table></figure>

<p>Destroy all resources created by Pulumi.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi destroy</span></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Previewing destroy (dev):</span><br><span class="line">     Type                              Name                              Plan       </span><br><span class="line"> -   pulumi:pulumi:Stack               cloudolife-pulumi-go-alicloud-k8s-dev  delete     </span><br><span class="line"> -   ├─ kubernetes:core/v1:Namespace   pulumi-go-alicloud-k8s            delete     </span><br><span class="line"> -   └─ kubernetes:apps/v1:Deployment  app-dep                           delete     </span><br><span class="line"> </span><br><span class="line">Outputs:</span><br><span class="line">  - name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Resources:</span><br><span class="line">    - 3 to delete</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudolife/WorkSpaces/cloudolife/cloudolife-devops/cloudolife-pulumi/cloudolife-pulumi-go-alicloud-k8s/.pulumi/stacks/dev.jsonn</span><br><span class="line">Do you want to perform this destroy? details</span><br><span class="line">- kubernetes:core/v1:Namespace: (delete)</span><br><span class="line">    [id=pulumi-go-alicloud-k8s]</span><br><span class="line">    [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::kubernetes:core/v1:Namespace::pulumi-go-alicloud-k8s]</span><br><span class="line">- kubernetes:apps/v1:Deployment: (delete)</span><br><span class="line">    [id=pulumi-go-alicloud-k8s/app-dep-rx8h9grh]</span><br><span class="line">    [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::kubernetes:apps/v1:Deployment::app-dep]</span><br><span class="line">- pulumi:pulumi:Stack: (delete)</span><br><span class="line">    [urn=urn:pulumi:dev::cloudolife-pulumi-go-alicloud-k8s::pulumi:pulumi:Stack::cloudolife-pulumi-go-alicloud-k8s-dev]</span><br><span class="line">    --outputs:--</span><br><span class="line">  - name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Do you want to perform this destroy? yes</span><br><span class="line">Destroying (dev):</span><br><span class="line">     Type                              Name                              Status      </span><br><span class="line"> -   pulumi:pulumi:Stack               cloudolife-pulumi-go-alicloud-k8s-dev  deleted     </span><br><span class="line"> -   ├─ kubernetes:core/v1:Namespace   pulumi-go-alicloud-k8s            deleted     </span><br><span class="line"> -   └─ kubernetes:apps/v1:Deployment  app-dep                           deleted     </span><br><span class="line"> </span><br><span class="line">Outputs:</span><br><span class="line">  - name: &quot;app-dep-rx8h9grh&quot;</span><br><span class="line"></span><br><span class="line">Resources:</span><br><span class="line">    - 3 deleted</span><br><span class="line"></span><br><span class="line">Duration: 30s</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudolife/WorkSpaces/cloudolife/cloudolife-devops/cloudolife-pulumi/cloudolife-pulumi-go-alicloud-k8s/.pulumi/stacks/dev.jsonn</span><br><span class="line">The resources in the stack have been deleted, but the history and configuration associated with the stack are still maintained. </span><br><span class="line">If you want to remove the stack completely, run &#x27;pulumi stack rm dev&#x27;.</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.pulumi.com/docs/get-started/kubernetes/">Kubernetes Getting Started | Pulumi - https://www.pulumi.com/docs/get-started/kubernetes/</a></p>
<p>[2] <a href="https://www.pulumi.com/blog/deploy-kubernetes-and-apps-with-go/">Deploy Kubernetes and Applications with Go | Pulumi - https://www.pulumi.com/blog/deploy-kubernetes-and-apps-with-go/</a></p>
<p>[3] <a href="https://www.pulumi.com/">Pulumi - Modern Infrastructure as Code - https://www.pulumi.com/</a></p>
<p>[4] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Pulumi</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Pulumi</tag>
        <tag>Golang(Go)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Pulumi] Use Pulumi GitHub provider TypeScript SDK to manage Github</title>
    <url>/2020/12/12/Infrastructure-as-Code-IaC/Pulumi/Use-Pulumi-GitHub-provider-TypeScript-SDK-to-manage-Github/</url>
    <content><![CDATA[<p>Pulumi is a Modern Infrastructure as Code (IaC) to create, deploy, and manage infrastructure on any cloud using familiar programming languages and tools.</p>
<p>The GitHub provider for Pulumi can be used to provision any of the cloud resources available in GitHub. The GitHub provider must be configured with credentials to deploy and update resources in GitHub.</p>
<p>This article is about how to use Pulumi Github provider and TypeScript SDK to manager Github.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://github.com/">Github Account and Token</a><br>  GitHub is where over 56 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and features, power your CI/CD and DevOps workflows, and secure code before you commit it.</p>
<ul>
<li><p>Github account<br>  You should have a Github account or Signup with <a href="https://github.com/join">Join GitHub · GitHub - https://github.com/join</a>.</p>
</li>
<li><p>Github Token<br>  You should have or generate a personal access token for quick access to the GitHub API.<br>  <a href="https://github.com/settings/tokens">Personal Access Tokens - https://github.com/settings/tokens</a></p>
</li>
</ul>
</li>
</ul>
<h2 id="Install-Pulumi-and-NodeJS"><a href="#Install-Pulumi-and-NodeJS" class="headerlink" title="Install Pulumi and NodeJS"></a>Install Pulumi and NodeJS</h2><h3 id="Pulumi"><a href="#Pulumi" class="headerlink" title="Pulumi"></a>Pulumi</h3><p>Install the <a href="https://www.pulumi.com/">Pulumi - https://www.pulumi.com/</a> CLI.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install pulumi</span></span><br></pre></td></tr></table></figure>

<h3 id="NodeJS-Language-Runtime"><a href="#NodeJS-Language-Runtime" class="headerlink" title="NodeJS Language Runtime"></a>NodeJS Language Runtime</h3><p>Install <a href="https://nodejs.org/en/">Node.js - https://nodejs.org/en/</a>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mac OS X</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install node</span></span><br></pre></td></tr></table></figure>

<h2 id="Pulumi-New"><a href="#Pulumi-New" class="headerlink" title="Pulumi New"></a>Pulumi New</h2><p>First, create a directory col-pulumi-github-typescript or with your prefer name.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir col-pulumi-github-typescript</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> col-pulumi-github-typescript</span></span><br></pre></td></tr></table></figure>

<p>Pulumi login into local file system.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi login file://.</span></span><br><span class="line">Logged in to cloudolife as cloudolife (file://.)</span><br><span class="line">or visit https://pulumi.com/docs/reference/install/ for manual instructions and release notes.</span><br></pre></td></tr></table></figure>

<p>Pulumi new a project with TypeScript SDK.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi new typescript</span></span><br><span class="line">This command will walk you through creating a new Pulumi project.</span><br><span class="line"></span><br><span class="line">Enter a value or leave blank to accept the (default), and press &lt;ENTER&gt;.</span><br><span class="line">Press ^C at any time to quit.</span><br><span class="line"></span><br><span class="line">project name: (col-pulumi-github-typescript) </span><br><span class="line">project description: (A minimal TypeScript Pulumi program) </span><br><span class="line">Created project &#x27;col-pulumi-github-typescript&#x27;</span><br><span class="line"></span><br><span class="line">stack name: (dev) </span><br><span class="line">Created stack &#x27;dev&#x27;</span><br><span class="line">Enter your passphrase to protect config/secrets: </span><br><span class="line">Re-enter your passphrase to confirm: </span><br><span class="line"></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Installing dependencies...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> protobufjs@6.10.2 postinstall /Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/node_modules/protobufjs</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> node scripts/postinstall</span></span><br><span class="line"></span><br><span class="line">added 90 packages from 133 contributors and audited 90 packages in 6.586s</span><br><span class="line"></span><br><span class="line">18 packages are looking for funding</span><br><span class="line">  run `npm fund` for details</span><br><span class="line"></span><br><span class="line">found 0 vulnerabilities</span><br><span class="line"></span><br><span class="line">Finished installing dependencies</span><br><span class="line"></span><br><span class="line">Your new project is ready to go! ✨</span><br><span class="line"></span><br><span class="line">To perform an initial deployment, run &#x27;pulumi up&#x27;</span><br></pre></td></tr></table></figure>

<p>The above command will create some files within the current directory.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tree .</span></span><br><span class="line">.</span><br><span class="line">├── Pulumi.dev.yaml</span><br><span class="line">├── Pulumi.yaml</span><br><span class="line">├── README.md</span><br><span class="line">├── index.ts</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure>

<p>See and modify <a href="./index.ts">index.ts</a> file.</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"># main.ts</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> pulumi <span class="keyword">from</span> <span class="string">&quot;@pulumi/pulumi&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> github <span class="keyword">from</span> <span class="string">&quot;@pulumi/github&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> repo = <span class="keyword">new</span> github.Repository(<span class="string">&quot;demo-repo&quot;</span>, &#123;</span><br><span class="line">  description: <span class="string">&quot;Generated from automated test&quot;</span>,</span><br><span class="line">  visibility: <span class="string">&quot;private&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="NPM-Install"><a href="#NPM-Install" class="headerlink" title="NPM Install"></a>NPM Install</h2><p>Then, install pulumi-github TypeScript SDK.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install @pulumi/github</span></span><br></pre></td></tr></table></figure>

<h2 id="Pulumi-Conf"><a href="#Pulumi-Conf" class="headerlink" title="Pulumi Conf"></a>Pulumi Conf</h2><p>The Pulumi GitHub Provider needs to be configured with GitHub credentials before it can be used to create resources.</p>
<p>Once obtained, there are two ways to communicate your authorization tokens to Pulumi:</p>
<p>Set the environment variable GITHUB_TOKEN:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export GITHUB_TOKEN=XXXXXXXXXXXXXX</span><br></pre></td></tr></table></figure>

<p>Set them using configuration, if you prefer that they be stored alongside your Pulumi stack for easy multi-user access:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pulumi config set github:token XXXXXXXXXXXXXX --secret</span><br><span class="line"></span><br><span class="line">Or pulumi config set github:token --secret</span><br><span class="line">```shell</span><br><span class="line"><span class="meta">$</span><span class="bash"> pulumi config <span class="built_in">set</span> github:token --secret</span></span><br><span class="line">value: </span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br></pre></td></tr></table></figure>

<p>It will put github:token and value into <a href="./Pulumi.dev.yaml">./Pulumi.dev.yaml</a>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Pulumi.dev.yaml</span></span><br><span class="line"></span><br><span class="line">encryptionsalt: &lt; Encryptionsalt &gt;</span><br><span class="line">config:</span><br><span class="line">  github:token:</span><br><span class="line">    secure: &lt; Secure &gt;</span><br></pre></td></tr></table></figure>

<p>Remember to pass –secret when setting github:token so that it is properly encrypted. A full set of configuration parameters can be found listed on the Project README.</p>
<p>The GitHub provider supports several options for providing access to GitHub credentials. See the GitHub setup page <a href="https://github.com/pulumi/pulumi-github/">pulumi/pulumi-github: A Pulumi package to facilitate interacting with GitHub - https://github.com/pulumi/pulumi-github/</a> for details.</p>
<h2 id="Pulumi-up"><a href="#Pulumi-up" class="headerlink" title="Pulumi up"></a>Pulumi up</h2><h3 id="Create-Repository"><a href="#Create-Repository" class="headerlink" title="Create Repository"></a>Create Repository</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi up</span></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Previewing update (dev):</span><br><span class="line">     Type                        Name                              Plan       </span><br><span class="line">     pulumi:pulumi:Stack         col-pulumi-github-typescript-dev             </span><br><span class="line"> +   └─ github:index:Repository  demo-repo                         create     </span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    + 1 to create</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br><span class="line">Do you want to perform this update? details</span><br><span class="line">  pulumi:pulumi:Stack: (same)</span><br><span class="line">    [urn=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:pulumi:Stack::col-pulumi-github-typescript-dev]</span><br><span class="line">    + github:index/repository:Repository: (create)</span><br><span class="line">        [urn=urn:pulumi:dev::col-pulumi-github-typescript::github:index/repository:Repository::demo-repo]</span><br><span class="line">        [provider=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:providers:github::default_2_4_2::564af3f5-1154-432e-8aab-683031b8258f]</span><br><span class="line">        allowMergeCommit   : true</span><br><span class="line">        allowRebaseMerge   : true</span><br><span class="line">        allowSquashMerge   : true</span><br><span class="line">        archived           : false</span><br><span class="line">        deleteBranchOnMerge: false</span><br><span class="line">        description        : &quot;Generated from automated test&quot;</span><br><span class="line">        name               : &quot;demo-repo-40447f2&quot;</span><br><span class="line">        visibility         : &quot;private&quot;</span><br><span class="line"></span><br><span class="line">Do you want to perform this update? yes</span><br><span class="line">Updating (dev):</span><br><span class="line">     Type                        Name                              Status      </span><br><span class="line">     pulumi:pulumi:Stack         col-pulumi-github-typescript-dev              </span><br><span class="line"> +   └─ github:index:Repository  demo-repo                         created     </span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    + 1 created</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Duration: 10s</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br></pre></td></tr></table></figure>

<p>You cant visit <a href="https://github.com/benjamincloudolife/demo-repo-40447f2">Clodolife/demo-repo-c192cd1 - https://github.com/benjamincloudolife/demo-repo-40447f2</a> to see the demo-repo-40447f2 repository or with your prefer name.</p>
<h3 id="Rename-Repository"><a href="#Rename-Repository" class="headerlink" title="Rename Repository"></a>Rename Repository</h3><p>You can rename the repository from demo-repo-40447f2 to demo-repo or with your prefer name..</p>
<p>Modify <a href="./index.ts">index.ts</a> file.</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"># main.ts</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> pulumi <span class="keyword">from</span> <span class="string">&quot;@pulumi/pulumi&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> github <span class="keyword">from</span> <span class="string">&quot;@pulumi/github&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> repo = <span class="keyword">new</span> github.Repository(<span class="string">&quot;demo-repo&quot;</span>, &#123;</span><br><span class="line">  name: <span class="string">&quot;demo-repo&quot;</span>,</span><br><span class="line">  description: <span class="string">&quot;Generated from automated test&quot;</span>,</span><br><span class="line">  visibility: <span class="string">&quot;private&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>Run pulumi up.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi up</span></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Previewing update (dev):</span><br><span class="line">     Type                        Name                              Plan        Info</span><br><span class="line">     pulumi:pulumi:Stack         col-pulumi-github-typescript-dev              </span><br><span class="line"> +-  └─ github:index:Repository  demo-repo                         replace     [diff: ~name]</span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    +-1 to replace</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br><span class="line">Do you want to perform this update? details</span><br><span class="line">  pulumi:pulumi:Stack: (same)</span><br><span class="line">    [urn=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:pulumi:Stack::col-pulumi-github-typescript-dev]</span><br><span class="line">    --github:index/repository:Repository: (delete-replaced)</span><br><span class="line">        [id=demo-repo-c192cd1]</span><br><span class="line">        [urn=urn:pulumi:dev::col-pulumi-github-typescript::github:index/repository:Repository::demo-repo]</span><br><span class="line">        [provider=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:providers:github::default_2_4_2::564af3f5-1154-432e-8aab-683031b8258f]</span><br><span class="line">    +-github:index/repository:Repository: (replace)</span><br><span class="line">        [id=demo-repo-c192cd1]</span><br><span class="line">        [urn=urn:pulumi:dev::col-pulumi-github-typescript::github:index/repository:Repository::demo-repo]</span><br><span class="line">        [provider=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:providers:github::default_2_4_2::564af3f5-1154-432e-8aab-683031b8258f]</span><br><span class="line">      ~ name: &quot;demo-repo-c192cd1&quot; =&gt; &quot;demo-repo&quot;</span><br><span class="line">    ++github:index/repository:Repository: (create-replacement)</span><br><span class="line">        [id=demo-repo-c192cd1]</span><br><span class="line">        [urn=urn:pulumi:dev::col-pulumi-github-typescript::github:index/repository:Repository::demo-repo]</span><br><span class="line">        [provider=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:providers:github::default_2_4_2::564af3f5-1154-432e-8aab-683031b8258f]</span><br><span class="line">      ~ name: &quot;demo-repo-c192cd1&quot; =&gt; &quot;demo-repo&quot;</span><br><span class="line"></span><br><span class="line">Do you want to perform this update? yes</span><br><span class="line">Updating (dev):</span><br><span class="line">     Type                        Name                              Status       Info</span><br><span class="line">     pulumi:pulumi:Stack         col-pulumi-github-typescript-dev               </span><br><span class="line"> +-  └─ github:index:Repository  demo-repo                         replaced     [diff: ~name]</span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    +-1 replaced</span><br><span class="line">    1 unchanged</span><br><span class="line"></span><br><span class="line">Duration: 13s</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br></pre></td></tr></table></figure>

<p>You cant visit <a href="https://github.com/benjamincloudolife/demo-repo">Clodolife/demo-repo - https://github.com/benjamincloudolife/demo-repo</a> to see the demo-repo repository or with your prefer name.</p>
<h3 id="Pulumi-Destroy"><a href="#Pulumi-Destroy" class="headerlink" title="Pulumi Destroy"></a>Pulumi Destroy</h3><p>Destroy all resources created by Pulumi.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi destroy</span></span><br><span class="line">Enter your passphrase to unlock config/secrets</span><br><span class="line">    (set PULUMI_CONFIG_PASSPHRASE or PULUMI_CONFIG_PASSPHRASE_FILE to remember): </span><br><span class="line">Previewing destroy (dev):</span><br><span class="line">     Type                        Name                              Plan       </span><br><span class="line"> -   pulumi:pulumi:Stack         col-pulumi-github-typescript-dev  delete     </span><br><span class="line"> -   └─ github:index:Repository  demo-repo                         delete     </span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    - 2 to delete</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br><span class="line">Do you want to perform this destroy? details</span><br><span class="line">- github:index/repository:Repository: (delete)</span><br><span class="line">    [id=demo-repo]</span><br><span class="line">    [urn=urn:pulumi:dev::col-pulumi-github-typescript::github:index/repository:Repository::demo-repo]</span><br><span class="line">    [provider=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:providers:github::default_2_4_2::564af3f5-1154-432e-8aab-683031b8258f]</span><br><span class="line">- pulumi:pulumi:Stack: (delete)</span><br><span class="line">    [urn=urn:pulumi:dev::col-pulumi-github-typescript::pulumi:pulumi:Stack::col-pulumi-github-typescript-dev]</span><br><span class="line"></span><br><span class="line">Do you want to perform this destroy? yes</span><br><span class="line">Destroying (dev):</span><br><span class="line">     Type                        Name                              Status      </span><br><span class="line"> -   pulumi:pulumi:Stack         col-pulumi-github-typescript-dev  deleted     </span><br><span class="line"> -   └─ github:index:Repository  demo-repo                         deleted     </span><br><span class="line"> </span><br><span class="line">Resources:</span><br><span class="line">    - 2 deleted</span><br><span class="line"></span><br><span class="line">Duration: 2s</span><br><span class="line"></span><br><span class="line">Permalink: file:///Users/cloudoLife/col-pulumi/col-pulumi-github-typescript/.pulumi/stacks/dev.json</span><br><span class="line">The resources in the stack have been deleted, but the history and configuration associated with the stack are still maintained. </span><br><span class="line">If you want to remove the stack completely, run &#x27;pulumi stack rm dev&#x27;.</span><br></pre></td></tr></table></figure>

<h2 id="Github-Organization"><a href="#Github-Organization" class="headerlink" title="Github Organization"></a>Github Organization</h2><p>If you want to manage Github organization resource, you must use pulumi config organization first.</p>
<p>Remember to rename CloudoLife with your prefer organization name.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pulumi config github:organization CloudoLife</span></span><br></pre></td></tr></table></figure>

<p>It will put github:organization and value into <a href="./Pulumi.dev.yaml">./Pulumi.dev.yaml</a>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Pulumi.dev.yaml</span></span><br><span class="line"></span><br><span class="line">encryptionsalt: &lt; Encryptionsalt &gt;</span><br><span class="line">config:</span><br><span class="line">  github:organization: CloudoLife</span><br><span class="line">  github:token:</span><br><span class="line">    secure: &lt; Secure &gt;</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.pulumi.com/docs/intro/cloud-providers/github/">GitHub | Pulumi - https://www.pulumi.com/docs/intro/cloud-providers/github/</a></p>
<p>[2] <a href="https://www.pulumi.com/docs/intro/cloud-providers/github/setup/">GitHub Setup | Pulumi - https://www.pulumi.com/docs/intro/cloud-providers/github/setup/</a></p>
<p>[3] <a href="https://github.com/pulumi/pulumi-github/">pulumi/pulumi-github: A Pulumi package to facilitate interacting with GitHub - https://github.com/pulumi/pulumi-github/</a></p>
<p>[4] <a href="https://www.pulumi.com/">Pulumi - Modern Infrastructure as Code - https://www.pulumi.com/</a></p>
<p>[5] <a href="https://nodejs.org/en/">Node.js - https://nodejs.org/en/</a></p>
<p>[6] <a href="https://github.com/settings/tokens">Personal Access Tokens - https://github.com/settings/tokens</a></p>
<p>[7] <a href="https://github.com/">GitHub: Where the world builds software · GitHub - https://github.com/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Infrastructure as Code (IaC)</category>
        <category>Pulumi</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Cloud Native</tag>
        <tag>Pulumi</tag>
        <tag>TypeScript</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>[Infrastructure as Code (IaC)] Manage PostgreSQL database with Terraform PostgreSQL Provider</title>
    <url>/2020/08/15/Infrastructure-as-Code-IaC/Terraform/Infrastructure-as-Code-IaC-Manage-PostgreSQL-database-with-Terraform-PostgreSQL-Provider/</url>
    <content><![CDATA[<h1 id="Terraform-PostgreSQL-Database-Examples"><a href="#Terraform-PostgreSQL-Database-Examples" class="headerlink" title="Terraform PostgreSQL Database Examples"></a>Terraform PostgreSQL Database Examples</h1><p>Examples about using Terraform PostgreSQL Provider to manage databases and roles(users).</p>
<p>Github: <a href="https://github.com/CloudoLife/terraform-postgresql-examples">https://github.com/CloudoLife/terraform-postgresql-examples</a></p>
<a id="more"></a>

<h2 id="Prerequsites"><a href="#Prerequsites" class="headerlink" title="Prerequsites"></a>Prerequsites</h2><p>Your must have a PostgreSQL database admin account and password, and Terraform CLI have been installed.</p>
<h3 id="PostgreSQL-Database-Admin-Account-and-Password"><a href="#PostgreSQL-Database-Admin-Account-and-Password" class="headerlink" title="PostgreSQL Database Admin Account and Password"></a>PostgreSQL Database Admin Account and Password</h3><p>Account and password may be postgres/postgres by default.</p>
<h3 id="Terrraform-and-Terrafrom-PostgreSQL-Provider"><a href="#Terrraform-and-Terrafrom-PostgreSQL-Provider" class="headerlink" title="Terrraform and Terrafrom PostgreSQL Provider"></a>Terrraform and Terrafrom PostgreSQL Provider</h3><ul>
<li><p><a href="https://www.terraform.io/">Terraform by HashiCorp</a></p>
<p>  Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service</p>
</li>
<li><p><a href="https://www.terraform.io/docs/providers/postgresql/index.html">Provider: PostgreSQL - Terraform by HashiCorp</a></p>
<p>  The PostgreSQL provider gives the ability to deploy and configure resources in a PostgreSQL server.</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="PostgreSQL-Provider-Variables"><a href="#PostgreSQL-Provider-Variables" class="headerlink" title="PostgreSQL Provider Variables"></a>PostgreSQL Provider Variables</h3><p>First, Specify values for PostgreSQL Provider variables within <a href="./terraform.tfvars">terraform.tfvars</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">host &#x3D; &quot;localhost&quot;</span><br><span class="line"></span><br><span class="line">port &#x3D; &quot;5432&quot;</span><br><span class="line"></span><br><span class="line">database &#x3D; &quot;postgres&quot;</span><br><span class="line"></span><br><span class="line">username &#x3D; &quot;postgres&quot;</span><br><span class="line"></span><br><span class="line">password &#x3D; &quot;postgres&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Role-User"><a href="#Role-User" class="headerlink" title="Role(User)"></a>Role(User)</h3><p>Config PostgreSQL roles(users) within <a href="./roles">./roles</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># PostgreSQL: postgresql_role - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;postgresql&#x2F;r&#x2F;postgresql_role.html</span><br><span class="line">resource &quot;postgresql_role&quot; &quot;example&quot; &#123;</span><br><span class="line">  name     &#x3D; &quot;example&quot;</span><br><span class="line">  login    &#x3D; true</span><br><span class="line">  password &#x3D; &quot;example&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><p>Config PostgreSQL databases within <a href="./databases">./databases</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># PostgreSQL: postgresql_database - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;postgresql&#x2F;r&#x2F;postgresql_database.html</span><br><span class="line">resource &quot;postgresql_database&quot; &quot;example&quot; &#123;</span><br><span class="line">  name              &#x3D; &quot;example&quot;</span><br><span class="line">  owner             &#x3D; postgresql_role.example.name </span><br><span class="line">  # template          &#x3D; &quot;template0&quot;</span><br><span class="line">  lc_collate        &#x3D; &quot;C&quot;</span><br><span class="line">  connection_limit  &#x3D; -1</span><br><span class="line">  allow_connections &#x3D; true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><h3 id="Terraform-Init"><a href="#Terraform-Init" class="headerlink" title="Terraform Init"></a>Terraform Init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform init</span><br></pre></td></tr></table></figure>

<p>It will download the Terraform PostgreSQL Provider binary.</p>
<h3 id="Terraform-apply"><a href="#Terraform-apply" class="headerlink" title="Terraform apply"></a>Terraform apply</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform apply</span><br></pre></td></tr></table></figure>

<p>It will dispaly the execute plan and wait for your make yes or no.<br>Then yes to create PostgreSQL roles(users) and databases.</p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>[1] <a href="https://www.terraform.io/docs/providers/postgresql/index.htm">Provider: PostgreSQL - Terraform by HashiCorp - https://www.terraform.io/docs/providers/postgresql/index.htm</a></p>
<p>[2] <a href="https://github.com/terraform-providers/terraform-provider-postgresql">terraform-providers/terraform-provider-postgresql: Terraform PostgreSQL provider - https://github.com/terraform-providers/terraform-provider-postgresql</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Terraform</tag>
        <tag>Terraform Provider</tag>
        <tag>PostgreSQL</tag>
        <tag>Database</tag>
        <tag>CloudoLife (CoL)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Infrastructure as Code (IaC)] Terraform Aliyun Monitor Examples about using Terraform Alibaba Cloud Provider to manage alarm rules and monitor sites</title>
    <url>/2020/08/15/Infrastructure-as-Code-IaC/Terraform/Infrastructure-as-Code-IaC-Terraform-Aliyun-Monitor-Examples-about-using-Terraform-Alibaba-Cloud-Provider-to-manage-alarm-rules-and-monitor-sites/</url>
    <content><![CDATA[<h1 id="Terraform-Aliyun-Monitor-Examples"><a href="#Terraform-Aliyun-Monitor-Examples" class="headerlink" title="Terraform Aliyun Monitor Examples"></a>Terraform Aliyun Monitor Examples</h1><p>Examples about using Terraform Alibaba Cloud Provider to manage alarm rules and monitor sites.</p>
<p>Github: <a href="https://github.com/CloudoLife/terraform-aliyun-monitor-examples">https://github.com/CloudoLife/terraform-aliyun-monitor-examples</a></p>
<a id="more"></a>

<h2 id="Prerequsites"><a href="#Prerequsites" class="headerlink" title="Prerequsites"></a>Prerequsites</h2><p>Your must have a Alibaba Cloud account with Access Key, and Terraform CLI have been installed.</p>
<h3 id="Aliyun-Account-and-Access-Key"><a href="#Aliyun-Account-and-Access-Key" class="headerlink" title="Aliyun Account and Access Key"></a>Aliyun Account and Access Key</h3><ul>
<li><p><a href="https://www.alibabacloud.com/help/doc-detail/50482.htm">Alibaba Cloud Document Center: Find the Documentation for Your Needs - Alibaba Cloud</a></p>
<p>  Before you purchase and use Alibaba Cloud products and services, you must have an Alibaba Cloud account. And then configure the account.</p>
</li>
<li><p><a href="https://www.alibabacloud.com/help/doc-detail/53045.htm">Create an AccessKey - General Reference| Alibaba Cloud Documentation Center</a></p>
<p>  An AccessKey is equivalent to a logon password, but they are used in different scenarios. AccessKeys are used to directly call APIs, while logon passwords are used to log on to the console. You must create an AccessKey only if you must call APIs.</p>
</li>
</ul>
<h3 id="Terrraform-and-Terrafrom-Aliyun-Provider"><a href="#Terrraform-and-Terrafrom-Aliyun-Provider" class="headerlink" title="Terrraform and Terrafrom Aliyun Provider"></a>Terrraform and Terrafrom Aliyun Provider</h3><ul>
<li><p><a href="https://www.terraform.io/">Terraform by HashiCorp</a></p>
<p>  Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service</p>
</li>
<li><p><a href="https://www.terraform.io/docs/providers/alicloud/index.html">Provider: alicloud - Terraform by HashiCorp</a></p>
<p>  The Alibaba Cloud provider is used to interact with the many resources supported by Alibaba Cloud. The provider needs to be configured with the proper credentials before it can be used.</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Profile-and-Region"><a href="#Profile-and-Region" class="headerlink" title="Profile and Region"></a>Profile and Region</h3><p>First, Specify your Aliyun(AliCloud - Alibaba Cloud) profile and region within <a href="./terraform.tfvars">terraform.tfvars</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># terraform.tfvars</span><br><span class="line"></span><br><span class="line">profile &#x3D; &quot;default&quot;</span><br><span class="line"></span><br><span class="line">region &#x3D; &quot;cn-shanghai&quot;</span><br></pre></td></tr></table></figure>

<h3 id="CMS-Alarm-Rules"><a href="#CMS-Alarm-Rules" class="headerlink" title="CMS Alarm Rules"></a>CMS Alarm Rules</h3><p>See more within <a href="./cms_alarm.tf">cms_alarm.tf</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Alicloud: alicloud_cms_alarm - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;alicloud&#x2F;r&#x2F;cms_alarm.html</span><br><span class="line">resource &quot;alicloud_cms_alarm&quot; &quot;cpu_total&quot; &#123;</span><br><span class="line">  name    &#x3D; &quot;cpu_total&quot;</span><br><span class="line">  project &#x3D; &quot;acs_ecs_dashboard&quot;</span><br><span class="line">  # Alibaba Cloud Document Center: Find the Documentation for Your Needs - Alibaba Cloud</span><br><span class="line">  # https:&#x2F;&#x2F;www.alibabacloud.com&#x2F;help&#x2F;zh&#x2F;doc-detail&#x2F;28619.htm   </span><br><span class="line">  metric  &#x3D; &quot;cpu_total&quot;</span><br><span class="line">  dimensions &#x3D; &#123;</span><br><span class="line">    # Remember to replace &lt;Your ECS instance id&gt;&quot;.</span><br><span class="line">    instanceId &#x3D; &quot;&lt;Your ECS instance id&gt;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  statistics      &#x3D; &quot;Maximum&quot;</span><br><span class="line">  period          &#x3D; 60</span><br><span class="line">  operator        &#x3D; &quot;&gt;&#x3D;&quot;</span><br><span class="line">  threshold       &#x3D; 70</span><br><span class="line">  triggered_count &#x3D; 1</span><br><span class="line">  contact_groups  &#x3D; [&quot;contact_groups&quot;]</span><br><span class="line">#   effective_interval &#x3D; &quot;00:00-23:59&quot;</span><br><span class="line">#   notify_type     &#x3D; 1</span><br><span class="line">#   enabled &#x3D; true</span><br><span class="line">#   webhook         &#x3D; &quot;https:&#x2F;&#x2F;$&#123;data.alicloud_account.current.id&#125;.eu-central-1.fc.aliyuncs.com&#x2F;2016-08-15&#x2F;proxy&#x2F;Terraform&#x2F;AlarmEndpointMock&#x2F;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="CMS-Site-Monitor"><a href="#CMS-Site-Monitor" class="headerlink" title="CMS Site Monitor"></a>CMS Site Monitor</h3><p>See more within <a href="./cms_site_monitor.tf">cms_site_monitor.tf</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Alicloud: alicloud_cms_site_monitor - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;alicloud&#x2F;r&#x2F;cms_site_monitor.html</span><br><span class="line">resource &quot;alicloud_cms_site_monitor&quot; &quot;site&quot; &#123;</span><br><span class="line">    address &#x3D; &quot;https:&#x2F;&#x2F;blog.cloudolife.com&quot;</span><br><span class="line">    task_name &#x3D; &quot;blog_cloudolife_com&quot;</span><br><span class="line">    task_type &#x3D; &quot;HTTP&quot;</span><br><span class="line">    interval &#x3D; 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><h3 id="Terraform-Init"><a href="#Terraform-Init" class="headerlink" title="Terraform Init"></a>Terraform Init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> terraform init</span></span><br></pre></td></tr></table></figure>

<p>It will download the Terraform Alibaba Cloud Provider binary.</p>
<h3 id="Terraform-apply"><a href="#Terraform-apply" class="headerlink" title="Terraform apply"></a>Terraform apply</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> terraform apply</span></span><br></pre></td></tr></table></figure>

<p>It will dispaly the execute plan and wait for your make yes or no.</p>
<h2 id="Known-issues"><a href="#Known-issues" class="headerlink" title="Known issues"></a>Known issues</h2><ul>
<li>alicloud_cms_alarm ‘notify_type’ has been removed from provider version 1.50.0. </li>
</ul>
<p>Because currently Terraform Alibaba Cloud Provider only supports the setting of Critical rules, other levels are not yet supported.</p>
<pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Error: &amp;quot;notify_type&amp;quot;: [REMOVED] Field &amp;#x27;notify_type&amp;#x27; has been removed from provider version 1.50.0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;on main.tf line 6, in resource &amp;quot;alicloud_cms_alarm&amp;quot; &amp;quot;basic&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6: resource &amp;quot;alicloud_cms_alarm&amp;quot; &amp;quot;basic&amp;quot; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre>
<ul>
<li><p>May auto create a new alarm rule while update the some alarm rules provided by Terrraform within AliCloud Web Console.</p>
</li>
<li><p>Config alarm rule within alicloud_cms_site_monitor is not supported.</p>
</li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>[1] <a href="https://www.terraform.io/docs/providers/alicloud/index.html">Provider: alicloud - Terraform by HashiCorp - https://www.terraform.io/docs/providers/alicloud/index.html</a></p>
<p>[2] <a href="https://github.com/terraform-providers/terraform-provider-alicloud">terraform-providers/terraform-provider-alicloud: This has moved to https://github.com/aliyun/terraform-provider-alicloud - https://github.com/terraform-providers/terraform-provider-alicloud</a></p>
<p>[3] <a href="https://help.aliyun.com/product/95817.html">Terraform-阿里云 - https://help.aliyun.com/product/95817.html</a></p>
<p>[4] <a href="https://api.aliyun.com/#/cli?tool=Terraform">OpenAPI Explorer - https://api.aliyun.com/#/cli?tool=Terraform</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Terraform</tag>
        <tag>Terraform Provider</tag>
        <tag>CloudoLife (CoL)</tag>
        <tag>Aliyun (AliCloud) / Alibaba Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>[Infrastructure as Code (IaC)] Terraform LDAP Examples about using Terraform LDAP Provider to manage ldap objects</title>
    <url>/2020/08/22/Infrastructure-as-Code-IaC/Terraform/Infrastructure-as-Code-IaC-Terraform-LDAP-Examples-about-using-Terraform-LDAP-Provider-to-manage-ldap-objects/</url>
    <content><![CDATA[<h1 id="Terraform-LDAP-Examples"><a href="#Terraform-LDAP-Examples" class="headerlink" title="Terraform LDAP Examples"></a>Terraform LDAP Examples</h1><p>Examples about using Terraform LDAP Provider to manage ldap objects.</p>
<p>Github: <a href="https://github.com/CloudoLife/terraform-ldap-examples">https://github.com/CloudoLife/terraform-ldap-examples</a></p>
<h2 id="Prerequsites"><a href="#Prerequsites" class="headerlink" title="Prerequsites"></a>Prerequsites</h2><p>Your must have a LDAP server with bind account and password, and Terraform CLI have been installed.</p>
<h3 id="LDAP-Server-with-Bind-Account-and-Password"><a href="#LDAP-Server-with-Bind-Account-and-Password" class="headerlink" title="LDAP Server with Bind Account and Password"></a>LDAP Server with Bind Account and Password</h3><p>Recommand use <a href="https://github.com/osixia/docker-openldap">osixia/docker-openldap: A docker image to run OpenLDAP 🐳 - https://github.com/osixia/docker-openldap</a> to run OpenLDAP server within container if you want to install the LDAP Server.</p>
<p>Thne, remember the admin account and bind password.</p>
<h3 id="Terrraform-and-Terrafrom-LDAP-Provider"><a href="#Terrraform-and-Terrafrom-LDAP-Provider" class="headerlink" title="Terrraform and Terrafrom LDAP Provider"></a>Terrraform and Terrafrom LDAP Provider</h3><ul>
<li><p><a href="https://www.terraform.io/">Terraform by HashiCorp</a></p>
<p>Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service</p>
</li>
<li><p><a href="https://github.com/CloudoLife/terraform-provider-ldap">CloudoLife/terraform-provider-ldap: LDAP provider for Terraform</a></p>
<p>The LDAP provider gives the ability to deploy and configure resources in a LDAP server.</p>
</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>First, install and config Terraform LDAP provider.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure>

<p>It will go get github.com/CloudoLife/terraform-provider-ldap and create or append these content to <a href="~/.terraformrc">~/.terraformrc</a> file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ~/.terraformrc</span></span><br><span class="line">providers &#123;</span><br><span class="line">    ldap = &quot;$&#123;GOPATH&#125;/bin/terraform-provider-ldap&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="LDAP-Provider-Variables"><a href="#LDAP-Provider-Variables" class="headerlink" title="LDAP Provider Variables"></a>LDAP Provider Variables</h3><p>First, Specify values for LDAP Provider variables within <a href="./terraform.tfvars">terraform.tfvars</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ldap_host &#x3D; &quot;localhost&quot;</span><br><span class="line"></span><br><span class="line">ldap_port &#x3D; 389</span><br><span class="line"></span><br><span class="line">use_tls &#x3D; false </span><br><span class="line"></span><br><span class="line">bind_user &#x3D; &quot;cn&#x3D;admin,dc&#x3D;&lt;Your Domain&gt;,dc&#x3D;com&quot;</span><br><span class="line"></span><br><span class="line">bind_password &#x3D; &quot;password&quot;</span><br></pre></td></tr></table></figure>

<h3 id="LDAP-Object"><a href="#LDAP-Object" class="headerlink" title="LDAP Object"></a>LDAP Object</h3><p>Config LDAP objects within <a href="./objects">./objects</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">resource &quot;ldap_object&quot; &quot;foo&quot; &#123;</span><br><span class="line">    # DN must be complete (no RDN!)</span><br><span class="line">    dn &#x3D; &quot;uid&#x3D;foo,dc&#x3D;example,dc&#x3D;com&quot;</span><br><span class="line"></span><br><span class="line">    # classes are specified as an array</span><br><span class="line">    object_classes &#x3D; [</span><br><span class="line">        &quot;inetOrgPerson&quot;,</span><br><span class="line">        &quot;posixAccount&quot;,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    # attributes are specified as a set of 1-element maps</span><br><span class="line">    attributes &#x3D; [</span><br><span class="line">        &#123; sn              &#x3D; &quot;10&quot; &#125;,</span><br><span class="line">        &#123; cn              &#x3D; &quot;bar&quot; &#125;,</span><br><span class="line">        &#123; uidNumber       &#x3D; &quot;1234&quot; &#125;,</span><br><span class="line">        &#123; gidNumber       &#x3D; &quot;1234&quot; &#125;,</span><br><span class="line">        &#123; homeDirectory   &#x3D; &quot;&#x2F;home&#x2F;billy&quot; &#125;,</span><br><span class="line">        &#123; loginShell      &#x3D; &quot;&#x2F;bin&#x2F;bash&quot; &#125;,</span><br><span class="line">        # when an attribute has multiple values, it must be specified multiple times</span><br><span class="line">        &#123; mail            &#x3D; &quot;billy@example.com&quot; &#125;,</span><br><span class="line">        &#123; mail            &#x3D; &quot;admin@example.com&quot; &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><h3 id="Terraform-Init"><a href="#Terraform-Init" class="headerlink" title="Terraform Init"></a>Terraform Init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform init</span><br></pre></td></tr></table></figure>

<p>It will download the Terraform LDAP Provider binary.</p>
<h3 id="Terraform-apply"><a href="#Terraform-apply" class="headerlink" title="Terraform apply"></a>Terraform apply</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform apply</span><br></pre></td></tr></table></figure>

<p>It will dispaly the execute plan and wait for your make yes or no.<br>Then yes to create ldap objects.</p>
<h2 id="Import"><a href="#Import" class="headerlink" title="Import"></a>Import</h2><p>Import and create .tf file by run <a href="./import.sh">./import.sh</a> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./import.sh uid=foo,dc=example,dc=com</span><br></pre></td></tr></table></figure>

<p>It will import LDAP object(uid=foo,dc=example,dc=com) to Terraform State(terraform.tfstate) and auto create the ldap_object.foo.tf file.</p>
<p>You can continue to maintain that file and run terraform apply command to manage the exist LDAP objects without copying &amp; pasting from Terraform State(terraform.tfstate).</p>
<h2 id="Inspire"><a href="#Inspire" class="headerlink" title="Inspire"></a>Inspire</h2><p>Inspired by <a href="https://github.com/Pryz/terraform-provider-ldap">Pryz/terraform-provider-ldap: LDAP provider for Terraform</a>.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[2] <a href="https://github.com/CloudoLife/terraform-provider-ldap">CloudoLife/terraform-provider-ldap: LDAP provider for Terraform</a></p>
<p>[2] <a href="https://www.terraform.io/">Terraform by HashiCorp - https://www.terraform.io/</a></p>
<p>[3] <a href="https://github.com/Pryz/terraform-provider-ldap">Pryz/terraform-provider-ldap: LDAP provider for Terraform</a></p>
<p>[4] <a href="https://github.com/osixia/docker-openldap">osixia/docker-openldap: A docker image to run OpenLDAP 🐳 - https://github.com/osixia/docker-openldap</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Terraform</tag>
        <tag>Terraform Provider</tag>
        <tag>CloudoLife (CoL)</tag>
        <tag>OpenLDAP</tag>
        <tag>LDAP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Infrastructure as Code (IaC)] Terraform GitHub Examples about using Terraform GitHub Provider to manage GitHub repositories and SSH keys</title>
    <url>/2020/08/15/Infrastructure-as-Code-IaC/Terraform/Infrastructure-as-Code-IaC-Terraform-Terraform-GitHub-Examples-about-using-Terraform-GitHub-Provider-to-manage-GitHub-repositories-and-SSH-keys/</url>
    <content><![CDATA[<h1 id="Terraform-GitHub-Examples"><a href="#Terraform-GitHub-Examples" class="headerlink" title="Terraform GitHub Examples"></a>Terraform GitHub Examples</h1><p>Examples about using Terraform GitHub Provider to manage repositories and SSH keys.</p>
<p>Github: <a href="https://github.com/CloudoLife/terraform-github-examples">https://github.com/CloudoLife/terraform-github-examples</a></p>
<a id="more"></a>

<h2 id="Prerequsites"><a href="#Prerequsites" class="headerlink" title="Prerequsites"></a>Prerequsites</h2><p>Your must have a GitHub account, api token and an organization, and Terraform CLI have been installed.</p>
<h3 id="GitHub-Account"><a href="#GitHub-Account" class="headerlink" title="GitHub Account"></a>GitHub Account</h3><ul>
<li><p>GitHub Account<br><a href="https://docs.github.com/en/github/getting-started-with-github/signing-up-for-github">Signing up for GitHub - GitHub Docs</a></p>
</li>
<li><p>GitHub API Token<br><a href="https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token">Creating a personal access token - GitHub Docs</a></p>
</li>
<li><p>GitHub Organization<br><a href="https://docs.github.com/en/enterprise/2.19/admin/user-management/creating-organizations">Creating organizations - GitHub Docs</a></p>
</li>
</ul>
<h3 id="SSH-Key"><a href="#SSH-Key" class="headerlink" title="SSH Key"></a>SSH Key</h3><p>Check out our guide to <a href="https://docs.github.com/articles/generating-an-ssh-key/">generating SSH keys</a> or troubleshoot common SSH Problems.</p>
<h3 id="Terrraform-and-Terrafrom-GitHub-Provider"><a href="#Terrraform-and-Terrafrom-GitHub-Provider" class="headerlink" title="Terrraform and Terrafrom GitHub Provider"></a>Terrraform and Terrafrom GitHub Provider</h3><ul>
<li><p><a href="https://www.terraform.io/">Terraform by HashiCorp</a></p>
<p>  Use Infrastructure as Code to provision and manage any cloud, infrastructure, or service</p>
</li>
<li><p><a href="https://www.terraform.io/docs/providers/github/index.html">Provider: GitHub - Terraform by HashiCorp</a></p>
<p>  The GitHub provider is used to interact with GitHub organization resources.</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="GitHub-Provider-Variables"><a href="#GitHub-Provider-Variables" class="headerlink" title="GitHub Provider Variables"></a>GitHub Provider Variables</h3><p>First, Specify values for GitHub Provider variables within <a href="./terraform.tfvars">terraform.tfvars</a>.</p>
<p>Remember to replace <Your GitHub Token>, <Your Organiztion>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github_token &#x3D; &quot;&lt;Your GitHub Token&gt;&quot;</span><br><span class="line">github_organization &#x3D; &quot;&lt;Your Organiztion&gt;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="SSH-key"><a href="#SSH-key" class="headerlink" title="SSH key"></a>SSH key</h3><p>Config github_user_ssh_keys within <a href="./ssh_keys">./ssh_keys</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GitHub: github_user_ssh_key - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;github&#x2F;r&#x2F;user_ssh_key.html</span><br><span class="line">resource &quot;github_user_ssh_key&quot; &quot;id_rsa&quot; &#123;</span><br><span class="line">  title &#x3D; &quot;id_rsa&quot;</span><br><span class="line">  key   &#x3D; file(&quot;~&#x2F;.ssh&#x2F;id_rsa.pub&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;github_user_ssh_key&quot; &quot;id_ed25519&quot; &#123;</span><br><span class="line">  title &#x3D; &quot;id_ed25519&quot;</span><br><span class="line">  key   &#x3D; file(&quot;~&#x2F;.ssh&#x2F;id_ed25519.pub&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><p>Config GitHub repositories within <a href="./repositories">./repositories</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GitHub: github_repository - Terraform by HashiCorp</span><br><span class="line"># https:&#x2F;&#x2F;www.terraform.io&#x2F;docs&#x2F;providers&#x2F;github&#x2F;r&#x2F;repository.html</span><br><span class="line">resource &quot;github_repository&quot; &quot;terraform-github-examples&quot; &#123;</span><br><span class="line">  name        &#x3D; &quot;terraform-github-examples&quot;</span><br><span class="line">  description &#x3D; &quot;Examples about Terraform GitHub Provider.&quot;</span><br><span class="line"></span><br><span class="line">  private &#x3D; false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><h3 id="Terraform-Init"><a href="#Terraform-Init" class="headerlink" title="Terraform Init"></a>Terraform Init</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform init</span><br></pre></td></tr></table></figure>

<p>It will download the Terraform GitHub Provider binary.</p>
<h3 id="Terraform-apply"><a href="#Terraform-apply" class="headerlink" title="Terraform apply"></a>Terraform apply</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">terraform apply</span><br></pre></td></tr></table></figure>

<p>It will dispaly the execute plan and wait for your make yes or no.<br>Then yes to create GitHub SSH keys and repositories.</p>
<h2 id="Known-issues"><a href="#Known-issues" class="headerlink" title="Known issues"></a>Known issues</h2><p>Currently only organizaiton repositories is supported.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://www.terraform.io/docs/providers/github/index.html">Provider: GitHub - Terraform by HashiCorp - https://www.terraform.io/docs/providers/github/index.html</a></p>
<p>[2] <a href="https://github.com/terraform-providers/terraform-provider-github">terraform-providers/terraform-provider-github: Terraform GitHub provider - https://github.com/terraform-providers/terraform-provider-github</a></p>
]]></content>
      <categories>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>Terraform</tag>
        <tag>Terraform Provider</tag>
        <tag>CloudoLife (CoL)</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>[Rocket.Chat] Use Rocket.Chat Incoming WebHook to receive message from external thirdparty system</title>
    <url>/2021/01/23/Instant-Messaging-IM/Rocket-Chat/Use-Rocket-Chat-Incoming-WebHook-to-receive-message-from-external-thirdparty-system/</url>
    <content><![CDATA[<h1 id="Webhooks"><a href="#Webhooks" class="headerlink" title="Webhooks"></a>Webhooks</h1><p>Rocket.Chat keep the workflow going by centralizing all your tools and touchpoints in one platform. Made for teamcollaboration, DevOps and customer engagement.</p>
<p>Rocket.Chat supports WebHooks to integrate tools and services you like into the platform. WebHooks are simple event-notifications via HTTP POST. This way any application implementing a WebHook is able to POST a message to a Rocket.Chat instance and much more.</p>
<a id="more"></a>

<p>With Scripts you can point any WebHook to Rocket.Chat and process the request to print customized messages, define the username and avatar of the user of the message and change the channel where the message will be posted or you can cancel the request to prevent undesired messages.</p>
<p>Available integrations:</p>
<ul>
<li><p>Incoming WebHook → Let an external service send a request to Rocket.Chat to be processed.</p>
</li>
<li><p>Outgoing WebHook → Let Rocket.Chat trigger and optionally send a request to an external service and process the response.</p>
</li>
</ul>
<p>By default the WebHooks is designed to post a message only. The message is part of a JSON structure, which has the same format as described in the API documentation on how to “Post a chat message”.</p>
<p>If you would like more power and control over various features of Rocket.Chat, aside from sending and receiving messages, take a look at Rocket.Chat Apps.</p>
<h2 id="Incoming-WebHook"><a href="#Incoming-WebHook" class="headerlink" title="Incoming WebHook"></a>Incoming WebHook</h2><p>Go to your Admin Panel -&gt; Integrations -&gt; Incoming, create a New Integration and select Incoming WebHook.</p>
<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>These are required attributes:</p>
<ul>
<li><p>Enabled</p>
<p>Enable or disable the webhook.</p>
</li>
<li><p>Name</p>
<p>You should name it to easily manage your integrations.</p>
</li>
<li><p>Post to Channel</p>
<p>Messages that are sent to the Incoming WebHook will be posted here.</p>
<p>Start with @ for user or # for channel. Eg: @john or #general</p>
</li>
<li><p>Post as</p>
<p>Choose the username that this integration will post as.</p>
<p>The user must already exist.</p>
</li>
</ul>
<p>You will get the Example payload and Curl example to check webhook work after save it.</p>
<h3 id="FAQs"><a href="#FAQs" class="headerlink" title="FAQs"></a>FAQs</h3><h4 id="Invalid-href-value-provided"><a href="#Invalid-href-value-provided" class="headerlink" title="Invalid href value provided"></a>Invalid href value provided</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -X POST -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> --data <span class="string">&#x27;&#123;&quot;text&quot;:&quot;Example message&quot;,&quot;attachments&quot;:[&#123;&quot;title&quot;:&quot;Rocket.Chat&quot;,&quot;title_link&quot;:&quot;https://rocketchat.examples.cloudolife.com/&quot;,&quot;text&quot;:&quot;Rocket.Chat, the best open source chat&quot;,&quot;image_url&quot;:&quot;/images/integration-attachment-example.png&quot;,&quot;color&quot;:&quot;#764FA5&quot;&#125;]&#125;&#x27;</span> https://rocketchat.examples.cloudolife.com/hooks/SCmiSiecyBSTt8xab/LsWiaaPv8LvcYnydsb6QcNAdybfiY2X59icdcKrRWKs2GhKn</span></span><br><span class="line">&#123;&quot;success&quot;:false,&quot;error&quot;:&quot;Invalid href value provided&quot;&#125;%</span><br></pre></td></tr></table></figure>

<p>After analysis error and retry, it turn out the image_url must be the valid and complete url. You can insert <a href="https://rocketchat.examples.cloudolife.com/">https://rocketchat.examples.cloudolife.com</a> into image_url, such as:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&quot;image_url&quot;:&quot;https://rocketchat.examples.cloudolife.com/images/integration-attachment-example.png&quot;,&quot;color&quot;:&quot;#764FA5&quot;</span><br></pre></td></tr></table></figure>

<p>Try it.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X POST -H &#x27;Content-Type: application/json&#x27; --data &#x27;&#123;&quot;text&quot;:&quot;Example message&quot;,&quot;attachments&quot;:[&#123;&quot;title&quot;:&quot;Rocket.Chat&quot;,&quot;title_link&quot;:&quot;https://rocket.chat&quot;,&quot;text&quot;:&quot;Rocket.Chat, the best open source chat&quot;,&quot;image_url&quot;:&quot;https://rocketchat.examples.cloudolife.com/images/integration-attachment-example.png&quot;,&quot;color&quot;:&quot;#764FA5&quot;&#125;]&#125;&#x27; https://rocketchat.examples.cloudolife.com/hooks/SCmiSiecyBSTt8xab/LsWiaaPv8LvcYnydsb6QcNAdybfiY2X59icdcKrRWKs2GhKn</span><br><span class="line">&#123;&quot;success&quot;:true&#125;</span><br></pre></td></tr></table></figure>

<!-- ## Outgoing WebHook

Go to your Admin Panel -> Integrations -> Outgoing, create a New Integration and select Outgoing WebHook. -->

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://docs.rocket.chat/guides/administrator-guides/integrations">Integrations WebHooks - Rocket.Chat Docs - https://docs.rocket.chat/guides/administrator-guides/integrations</a></p>
<p>[2] <a href="https://rocket.chat/">Rocket.Chat - The Ultimate Communication Platform - https://rocket.chat/</a></p>
]]></content>
      <categories>
        <category>Instant Messaging (IM)</category>
        <category>Rocket.Chat</category>
        <category>Chat Bot</category>
        <category>WebHook</category>
        <category>Incoming WebHook</category>
      </categories>
      <tags>
        <tag>Instant Messaging (IM)</tag>
        <tag>Rocket.Chat</tag>
        <tag>Chat Bot</tag>
        <tag>WebHook</tag>
        <tag>Incoming WebHook</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Alidns Webhook for cert-manager within Kubernetes (K8S)</title>
    <url>/2020/09/12/Kubernetes-K8S/Helm/Helm-install-Alidns-Webhook-for-Cert-Manager-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="helm-alidns-webhook-cert-manager-example"><a href="#helm-alidns-webhook-cert-manager-example" class="headerlink" title="helm-alidns-webhook-cert-manager-example"></a>helm-alidns-webhook-cert-manager-example</h1><p>Alidns-webhook-cert-manager is a cert-manager plugin to manage SSL certificates on Kubernetes. </p>
<p>Along with Nginx Ingress, you can configure HTTPS access to the website. With Let’s Encrypt provide free SSL certificates, all the free packs of cert-manager + Nginx Ingress + Let’s Encrypt are automatic generated. But cert-manager does not support Alidns(Alibaba Cloud’s DNS) by default. </p>
<p>You can modify it and use Alidns-webhook-cert-manager. There is some examplesabout installing it with Helm in the article.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
<li><p><a href="https://cert-manager.io/">cert-manager</a><br>  x509 certificate management for Kubernetes.</p>
</li>
<li><p><a href="https://www.alibabacloud.com/help/doc-detail/53045.htm">Create an AccessKey - General Reference| Alibaba Cloud Documentation Center</a></p>
<p>  An AccessKey is equivalent to a logon password, but they are used in different scenarios. AccessKeys are used to directly call APIs, while logon passwords are used to log on to the console. You must create an AccessKey only if you must call APIs.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> example and alidns-webhook-cert-manager.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> --recursive https://github.com/CloudoLife/helm-alidns-webhook-cert-manager-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> helm-alidns-webhook-cert-manager-example</span></span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Edit <a href="./values.yaml">values.yaml</a> in helm-alidns-webhook-cert-manager-example directory, and replace content within &lt; and &gt;.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cert-manager-webhook-alidns/values.yaml at master · CloudoLife/cert-manager-webhook-alidns</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/CloudoLife/cert-manager-webhook-alidns/blob/master/deploy/webhook-alidns/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The GroupName here is used to identify your company or business unit that</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> created this webhook.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example, this may be <span class="string">&quot;acme.mycompany.com&quot;</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This name will need to be referenced <span class="keyword">in</span> each Issuer<span class="string">&#x27;s `webhook` stanza to</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> inform cert-manager of <span class="built_in">where</span> to send ChallengePayload resources <span class="keyword">in</span> order to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> solve the DNS01 challenge.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This group name should be **unique**, hence using your own company<span class="string">&#x27;s domain</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> here is recommended.</span></span><br><span class="line">groupName: &lt;Your Company&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Alibaba Cloud Document Center: Find the Documentation <span class="keyword">for</span> Your Needs - Alibaba Cloud</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://www.alibabacloud.com/<span class="built_in">help</span>/doc-detail/50086.htm</span></span><br><span class="line">regionId: &lt;Your Alidns Region Id&gt;</span><br><span class="line">secrets:</span><br><span class="line">  accessKeyId: &lt;Your Alidns Access Key Id&gt;</span><br><span class="line">  accessKeySecret: &lt;Your Alidns Access Key Secret&gt;</span><br><span class="line"></span><br><span class="line">clusterIssuer:</span><br><span class="line">  enabled: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> staging: <span class="literal">false</span></span></span><br><span class="line">  email: &lt;Your email&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> https://cert-manager.io/docs/configuration/acme/<span class="comment">#adding-multiple-solver-types</span></span></span><br><span class="line">  selector:</span><br><span class="line">    dnsZones:</span><br><span class="line">      - &lt;Your domain&gt;</span><br><span class="line"></span><br><span class="line">image:</span><br><span class="line"><span class="meta">#</span><span class="bash">   repository: cloudolife/cert-manager-webhook-alidns</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or</span></span><br><span class="line">  repository: &lt;Your Repository&gt;/cert-manager-webhook-alidns</span><br><span class="line">  tag: latest</span><br><span class="line">  pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> nameOverride: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fullnameOverride: <span class="string">&quot;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> service:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">type</span>: ClusterIP</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   port: 443</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> resources: &#123;&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># limits:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  cpu: 100m</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  memory: 128Mi</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># requests:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  cpu: 100m</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  memory: 128Mi</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> nodeSelector: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tolerations: []</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> affinity: &#123;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install cert-manager-webhook-alidns within cert-manager namespace. Please create cert-manager namespace first if not exist.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace cert-manager</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install --name cert-manager-webhook-alidns --namespace=cert-manager ./cert-manager-webhook-alidns/deploy/webhook-alidns -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about cert-manager-webhook-alidns.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace cert-manager</span></span><br><span class="line">NAME                           NAMESPACE       REVISION    UPDATED                                   STATUS      CHART                                APP VERSION</span><br><span class="line">cert-manager-webhook-alidns    cert-manager    1           2020-09-12 12:57:30.168666 +0800 +0800    deployed    webhook-alidns-0.1.0                 1.0</span><br></pre></td></tr></table></figure>

<p>See pods about cert-manager-webhook-alidns.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n cert-manager</span></span><br><span class="line">NAME                                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">cert-manager-webhook-alidns-748956665b-ltxpj   1/1     Running   3          13d</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/helm-alidns-webhook-cert-manager-example">CloudoLife/helm-alidns-webhook-cert-manager-example: Examples about Helm install Alidns Webhook cert-manager. https://github.com/CloudoLife/helm-alidns-webhook-cert-manager-example - https://github.com/CloudoLife/helm-alidns-webhook-cert-manager-example</a></p>
<p>[2] <a href="https://github.com/CloudoLife/cert-manager-webhook-alidns">CloudoLife/cert-manager-webhook-alidns: Alidns webhook for cert-manager - https://github.com/CloudoLife/cert-manager-webhook-alidns</a></p>
<p>[3] <a href="https://cert-manager.io/">cert-manager - https://cert-manager.io/</a></p>
<p>[4] <a href="https://github.com/jetstack/cert-manager-webhook-example">jetstack/cert-manager-webhook-example: A cert-manager sample repository for creating an ACME DNS01 solver webhook - https://github.com/jetstack/cert-manager-webhook-example</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
<p>[7] <a href="https://www.alibabacloud.com/product/dns">Alibaba Cloud DNS_Intelligent DNS Management_Website Domain Name Management-Alibaba Cloud - https://www.alibabacloud.com/product/dns</a></p>
<p>[8]<a href="https://www.alibabacloud.com/help/doc-detail/53045.htm">Create an AccessKey - General Reference| Alibaba Cloud Documentation Center - https://www.alibabacloud.com/help/doc-detail/53045.htm</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Alidns</tag>
        <tag>cert-manager</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install AppCode Kubed to sync ConfigMaps/Secrets across Kubernetes (K8S) namespaces or Clusters</title>
    <url>/2020/10/31/Kubernetes-K8S/Helm/Helm-install-AppCode-Kubed-to-sync-ConfigMaps-Secrets-across-Kubernetes-K8S-namespaces-or-Clusters/</url>
    <content><![CDATA[<h1 id="helm-AppsCode-kubed-example"><a href="#helm-AppsCode-kubed-example" class="headerlink" title="helm-AppsCode-kubed-example"></a>helm-AppsCode-kubed-example</h1><h2 id="AppsCode-Kubed"><a href="#AppsCode-Kubed" class="headerlink" title="AppsCode Kubed"></a>AppsCode Kubed</h2><p>Kubed by AppsCode is a Kubernetes cluster manager daemon that can sync ConfigMaps/Secrets across Kubernetes namespaces or Clusters.</p>
<p>This article is about how to use Helm to install kubed on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><p>Helm install kubed into kube-system namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Add the Stable Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add appscode https://charts.appscode.com/stable/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install kubed appscode/kubed -n kube-system -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about kubed</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace kube-system</span></span><br><span class="line">NAME                           NAMESPACE                 REVISION    UPDATED                                    STATUS      CHART</span><br><span class="line">kubed                          kube-system               1           2020-10-31 11:19:51.65893 +0800 +0800      deployed    kubed-v0.12.0                        v0.12.0</span><br></pre></td></tr></table></figure>

<p>See pods about kubed.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n kube-system </span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system              kubed-559f7f5768-56bgr                                             1/1     Running                 0          6h3m</span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubed/values.yaml at v0.12.0 · appscode/kubed</span></span><br><span class="line"><span class="comment"># https://github.com/appscode/kubed/blob/v0.12.0/charts/kubed/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If true, sends usage analytics</span></span><br><span class="line"><span class="attr">enableAnalytics:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="Synchronize-ConfigMap-or-Secret"><a href="#Synchronize-ConfigMap-or-Secret" class="headerlink" title="Synchronize ConfigMap or Secret"></a>Synchronize ConfigMap or Secret</h2><h3 id="Synchronize-ConfigMap"><a href="#Synchronize-ConfigMap" class="headerlink" title="Synchronize ConfigMap"></a>Synchronize ConfigMap</h3><p>First, create a NameSpace called demo.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace demo</span></span><br><span class="line">namespace &quot;demo&quot; created</span><br></pre></td></tr></table></figure>

<p>Now, create a ConfigMap called omni in the demo namespace. This will be our source ConfigMap.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat demo-0.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">you:</span> <span class="string">only</span></span><br><span class="line">  <span class="attr">leave:</span> <span class="string">once</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">omni</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br></pre></td></tr></table></figure>

<p>Apply the demo-0.yaml to create ConfigMap.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f demo-0.yaml</span></span><br><span class="line">configmap &quot;omni&quot; created</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get configmaps --all-namespaces | grep omni</span></span><br><span class="line">demo          omni                                 2         7m</span><br></pre></td></tr></table></figure>

<p>Now, apply the kubed.appscode.com/sync: “” annotation to ConfigMap omni. Kubed operator will notice that and copy the ConfigMap in all namespaces.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl annotate configmap omni kubed.appscode.com/sync=<span class="string">&quot;&quot;</span> -n demo</span></span><br><span class="line">configmap &quot;omni&quot; annotated</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get configmaps --all-namespaces | grep omni</span></span><br><span class="line">default       omni                                 2         1m</span><br><span class="line">demo          omni                                 2         8m</span><br><span class="line">kube-public   omni                                 2         1m</span><br><span class="line">kube-system   omni                                 2         1m</span><br></pre></td></tr></table></figure>

<h3 id="Namespace-Selector"><a href="#Namespace-Selector" class="headerlink" title="Namespace Selector"></a>Namespace Selector</h3><p>Lets’ change annotation value of source ConfigMap omni.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl annotate configmap omni kubed.appscode.com/sync=<span class="string">&quot;app=kubed&quot;</span> -n demo --overwrite</span></span><br><span class="line">configmap &quot;omni&quot; annotated</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get configmaps --all-namespaces | grep omni</span></span><br><span class="line">demo          omni                                 2         8m</span><br></pre></td></tr></table></figure>

<p>Kubed operator removes the ConfigMap from all namespaces (except source) since no namespace matches the label-selector app=kubed. Now, lets’ apply app=kubed annotation to other namespace. Kubed operator will then sync the ConfigMap to other namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl label namespace other app=kubed</span></span><br><span class="line">namespace &quot;other&quot; labeled</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get configmaps --all-namespaces | grep omni</span></span><br><span class="line">demo          omni                                 2         8m</span><br><span class="line">other         omni                                 2         5m</span><br></pre></td></tr></table></figure>

<h3 id="Restricting-Source-Namespace"><a href="#Restricting-Source-Namespace" class="headerlink" title="Restricting Source Namespace"></a>Restricting Source Namespace</h3><p>By default, Kubed will watch all namespaces for configmaps and secrets with kubed.appscode.com/sync annotation. But you can restrict the source namespace for configmaps and secrets by passing config.configSourceNamespace value during installation.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm install kubed appscode/kubed \</span></span><br><span class="line">  --namespace=kube-system \</span><br><span class="line">  --set imagePullPolicy=Always \</span><br><span class="line">  --set config.configSourceNamespace=demo</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/appscode/kubed">appscode/kubed: 🛡️ A Kubernetes Cluster Daemon - https://github.com/appscode/kubed</a> </p>
<p>[2] <a href="https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/">Kubed by AppsCode - https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/</a></p>
<p>[3] <a href="https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/intra-cluster/"> - https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/intra-cluster/</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>AppCode Kubed</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install cert-manager within Kubernetes (K8S)</title>
    <url>/2020/09/12/Kubernetes-K8S/Helm/Helm-install-Cert-Manager-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="helm-cert-manager-example"><a href="#helm-cert-manager-example" class="headerlink" title="helm-cert-manager-example"></a>helm-cert-manager-example</h1><p>cert-manager is a native Kubernetes certificate management controller. It can help with issuing certificates from a variety of sources, such as Let’s Encrypt, HashiCorp Vault, Venafi, a simple signing key pair, or self signed.</p>
<p>You can modify it and use cert-manager. There is some examplesabout installing it with Helm in the article.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> example and cert-manager.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> --recursive https://github.com/CloudoLife/helm-cert-manager-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> helm-cert-manager-example</span></span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Edit <a href="./values.yaml">values.yaml</a> in helm-cert-manager-example directory, and replace content within &lt; and &gt;.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat values.yaml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cert-manager/values.yaml at master · jetstack/cert-manager</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/jetstack/cert-manager/blob/master/deploy/charts/cert-manager/values.yaml</span></span><br><span class="line"></span><br><span class="line">installCRDs: true</span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install cert-manager within cert-manager namespace. Please create cert-manager namespace first if not exist.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace cert-manager</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Jetstack Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add jetstack https://charts.jetstack.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace cert-manager</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install the cert-manager Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install cert-manager jetstack/cert-manager --namespace cert-manager -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about cert-manager.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace cert-manager</span></span><br><span class="line">NAME                           NAMESPACE       REVISION    UPDATED                                   STATUS      CHART                                APP VERSION</span><br><span class="line">cert-manager                   cert-manager    1           2020-09-12 11:24:36.704126 +0800 +0800    deployed    cert-manager-v1.0.2                  v1.0.2</span><br></pre></td></tr></table></figure>

<p>See pods about cert-manager.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n cert-manager</span></span><br><span class="line">NAME                                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">cert-manager-57b65b7fc-dczgc                   1/1     Running   5          13d</span><br><span class="line">cert-manager-cainjector-5f988f74c6-9ll6k       1/1     Running   5          13d</span><br><span class="line">cert-manager-webhook-7cf554f879-ktkmg          1/1     Running   3          13d</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/helm-cert-manager-example">CloudoLife/helm-cert-manager-example: Examples about Helm install cert-manager. https://github.com/CloudoLife/helm-cert-manager-example - https://github.com/CloudoLife/helm-cert-manager-example</a></p>
<p>[2] <a href="https://cert-manager.io/">cert-manager - https://cert-manager.io/</a></p>
<p>[3] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[4] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>cert-manager</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install DNSPod Webhook for Cert Manager within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-DNSPod-Webhook-for-Cert-Manager-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="helm-dnspod-webhook-cert-manager-example"><a href="#helm-dnspod-webhook-cert-manager-example" class="headerlink" title="helm-dnspod-webhook-cert-manager-example"></a>helm-dnspod-webhook-cert-manager-example</h1><p>dnspod-webhook-cert-manager is a cert-manager plugin to manage SSL certificates on Kubernetes. </p>
<p>Along with Nginx Ingress, you can configure HTTPS access to the website. With Let’s Encrypt provide free SSL certificates, all the free packs of cert-manager + Nginx Ingress + Let’s Encrypt are automatic generated. But cert-manager does not support dnspod by default. </p>
<p>You can modify it and use dnspod-webhook-cert-manager. There is some examplesabout installing it with Helm in the article.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a></p>
<p>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a></p>
<p>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
<li><p><a href="https://cert-manager.io/">cert-manager</a></p>
<p>  x509 certificate management for Kubernetes.</p>
</li>
<li><p><a href="https://support.dnspod.cn/account/5f2d466de8320f1a740d9ff3/">DNSPod</a> API ID and Token.</p>
<p>  DNSPod is the largest free DNS service provider in China.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> example and dnspod-webhook-cert-manager.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> --recursive https://github.com/CloudoLife/helm-dnspod-webhook-cert-manager-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> helm-dnspod-webhook-cert-manager-example</span></span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Edit <a href="./values.yaml">values.yaml</a> in helm-dnspod-webhook-cert-manager-example directory, and replace content within &lt; and &gt;.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cert-manager-webhook-dnspod/values.yaml at master · qqshfox/cert-manager-webhook-dnspod</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/qqshfox/cert-manager-webhook-dnspod/blob/master/deploy/cert-manager-webhook-dnspod/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> The GroupName here is used to identify your company or business unit that</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> created this webhook.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example, this may be <span class="string">&quot;acme.mycompany.com&quot;</span>.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This name will need to be referenced <span class="keyword">in</span> each Issuer<span class="string">&#x27;s `webhook` stanza to</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> inform cert-manager of <span class="built_in">where</span> to send ChallengePayload resources <span class="keyword">in</span> order to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> solve the DNS01 challenge.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This group name should be **unique**, hence using your own company<span class="string">&#x27;s domain</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> here is recommended.</span></span><br><span class="line">groupName: &lt;Your Company&gt;</span><br><span class="line"></span><br><span class="line">secrets:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 密钥管理 - DNSPod 官方帮助中心-技术支持-DNSPod-免费智能DNS解析服务商-电信_网通_教育网,智能DNS</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> https://support.dnspod.cn/account/5f2d466de8320f1a740d9ff3/</span></span><br><span class="line">  apiID: &lt;Your DNSPod API ID&gt;</span><br><span class="line">  apiToken:  &lt;Your DNSPod API Token&gt;</span><br><span class="line"></span><br><span class="line">clusterIssuer:</span><br><span class="line">  enabled: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> staging: <span class="literal">false</span></span></span><br><span class="line">  email: &lt;Your email&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> https://cert-manager.io/docs/configuration/acme/<span class="comment">#adding-multiple-solver-types</span></span></span><br><span class="line">  selector:</span><br><span class="line">    dnsZones:</span><br><span class="line">      - &lt;Your domain&gt;</span><br><span class="line"></span><br><span class="line">image:</span><br><span class="line"><span class="meta">#</span><span class="bash">   repository: qqshfox/cert-manager-webhook-dnspod</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   repository: cloudolife/cert-manager-webhook-dnspod</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or</span></span><br><span class="line">  repository: &lt;Your Repository&gt;/cert-manager-webhook-dnspod</span><br><span class="line">  tag: latest</span><br><span class="line">  pullPolicy: IfNotPresent</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> nameOverride: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fullnameOverride: <span class="string">&quot;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> service:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="built_in">type</span>: ClusterIP</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   port: 443</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> resources: &#123;&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># limits:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  cpu: 100m</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  memory: 128Mi</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment"># requests:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  cpu: 100m</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="comment">#  memory: 128Mi</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> nodeSelector: &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tolerations: []</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> affinity: &#123;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install cert-manager-webhook-dnspod within cert-manager namespace. Please create cert-manager namespace first if not exist.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace cert-manager</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install --name cert-manager-webhook-dnspod --namespace=cert-manager ./cert-manager-webhook-dnspod/deploy/webhook-dnspod -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about cert-manager-webhook-dnspod.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace cert-manager</span></span><br><span class="line">NAME                           NAMESPACE       REVISION    UPDATED                                   STATUS      CHART                                APP VERSION</span><br><span class="line">cert-manager-webhook-dnspod    cert-manager    1           2020-09-19 12:54:53.866675 +0800 +0800    deployed    cert-manager-webhook-dnspod-0.3.1    0.2.0</span><br></pre></td></tr></table></figure>

<p>See pods about cert-manager-webhook-dnspod.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n cert-manager</span></span><br><span class="line">NAME                                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">cert-manager-webhook-dnspod-84b9b7b886-q9dbj   1/1     Running   3          13d</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/helm-dnspod-webhook-cert-manager-example">CloudoLife/helm-dnspod-webhook-cert-manager-example: Examples about Helm install dnspod Webhook cert-manager. https://github.com/CloudoLife/helm-dnspod-webhook-cert-manager-example - https://github.com/CloudoLife/helm-dnspod-webhook-cert-manager-example</a></p>
<p>[2] <a href="https://github.com/qqshfox/cert-manager-webhook-dnspod">qqshfox/cert-manager-webhook-dnspod: DNSPod Webhook for Cert Manager - https://github.com/qqshfox/cert-manager-webhook-dnspod</a></p>
<p>[3] <a href="https://cert-manager.io/">cert-manager - https://cert-manager.io/</a></p>
<p>[4] <a href="https://github.com/jetstack/cert-manager-webhook-example">jetstack/cert-manager-webhook-example: A cert-manager sample repository for creating an ACME DNS01 solver webhook - https://github.com/jetstack/cert-manager-webhook-example</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
<p>[7] <a href="https://support.dnspod.cn/account/5f2d466de8320f1a740d9ff3/">密钥管理 - DNSPod 官方帮助中心-技术支持-DNSPod-免费智能DNS解析服务商-电信_网通_教育网,智能DNS - https://support.dnspod.cn/account/5f2d466de8320f1a740d9ff3/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>cert-manager</tag>
        <tag>DNSPod</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install GitLab Runner that works with GitLab CI/CD to run jobs in a pipeline within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-GitLab-Runner-that-works-with-GitLab-CI-CD-to-run-jobs-in-a-pipeline-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="GitLab-Runner"><a href="#GitLab-Runner" class="headerlink" title="GitLab Runner"></a>GitLab Runner</h1><p>GitLab Runner is an application that works with GitLab CI/CD to run jobs in a pipeline.</p>
<p>GitLab Runner has the following features.</p>
<ul>
<li><p>Run multiple jobs concurrently.</p>
</li>
<li><p>Use multiple tokens with multiple servers (even per-project).</p>
</li>
<li><p>Limit the number of concurrent jobs per-token.</p>
</li>
<li><p>Jobs can be run:</p>
<ul>
<li><p>Locally.</p>
</li>
<li><p>Using Docker containers.</p>
</li>
<li><p>Using Docker containers and executing job over SSH.</p>
</li>
<li><p>Using Docker containers with autoscaling on different clouds and virtualization hypervisors.</p>
</li>
<li><p>Connecting to a remote SSH server.</p>
</li>
</ul>
</li>
<li><p>Is written in Go and distributed as single binary without any other requirements.</p>
</li>
<li><p>Supports Bash and Windows PowerShell.</p>
</li>
<li><p>Works on GNU/Linux, macOS, and Windows (pretty much anywhere you can run Docker).</p>
</li>
<li><p>Allows customization of the job running environment.</p>
</li>
<li><p>Automatic configuration reload without restart.</p>
</li>
<li><p>Easy to use setup with support for Docker, Docker-SSH, Parallels, or SSH running environments.</p>
</li>
<li><p>Enables caching of Docker containers.</p>
</li>
<li><p>Easy installation as a service for GNU/Linux, macOS, and Windows.</p>
</li>
<li><p>Embedded Prometheus metrics HTTP server.</p>
</li>
<li><p>Referee workers to monitor and pass Prometheus metrics and other job-specific data to GitLab.</p>
</li>
</ul>
<p>This article is about how to use Helm to deploy GitLab Runner on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer values.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># values.yaml · master · GitLab.org / charts / GitLab Runner · GitLab</span></span><br><span class="line"><span class="comment"># https://gitlab.com/gitlab-org/charts/gitlab-runner/-/blob/master/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The GitLab Server URL (with protocol) that want to register the runner against</span></span><br><span class="line"><span class="comment">## ref: https://docs.gitlab.com/runner/commands/README.html#gitlab-runner-register</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">gitlabUrl:</span> &#123;&#123; <span class="string">.Values.gitlabUrl</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## The Registration Token for adding new Runners to the GitLab Server. This must</span></span><br><span class="line"><span class="comment">## be retrieved from your GitLab Instance.</span></span><br><span class="line"><span class="comment">## ref: https://docs.gitlab.com/ce/ci/runners/README.html</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">runnerRegistrationToken:</span> &#123;&#123; <span class="string">.Values.runnerRegistrationToken</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">runners:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">|</span></span><br><span class="line">    [[<span class="string">runners</span>]]</span><br><span class="line">      [<span class="string">runners.kubernetes</span>]</span><br><span class="line">        <span class="string">image</span> <span class="string">=</span> <span class="string">&quot;ubuntu:16.04&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Specify whether the runner should be locked to a specific project: true, false. Defaults to true.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment"># locked: true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Specify the tags associated with the runner. Comma-separated list of tags.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## ref: https://docs.gitlab.com/ce/ci/runners/#use-tags-to-limit-the-number-of-jobs-using-the-runner</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">tags:</span> &#123;&#123; <span class="string">.Values.runners.tags</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Specify the name for the runner.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="attr">name:</span> &#123;&#123; <span class="string">.Values.runners.name</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Specify whether the runner should only run protected branches.</span></span><br><span class="line">  <span class="comment">## Defaults to False.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## ref: https://docs.gitlab.com/ee/ci/runners/#prevent-runners-from-revealing-sensitive-information</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">protected:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If Gitlab is not reachable through $CI_SERVER_URL</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># DEPRECATED: See https://docs.gitlab.com/runner/install/kubernetes.html#additional-configuration</span></span><br><span class="line">  <span class="attr">cloneUrl:</span> &#123;&#123; <span class="string">.Values.runners.cloneUrl</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Run all containers with the privileged flag enabled</span></span><br><span class="line">  <span class="comment">## This will allow the docker:dind image to run if you need to run Docker</span></span><br><span class="line">  <span class="comment">## commands. Please read the docs before turning this on:</span></span><br><span class="line">  <span class="comment">## ref: https://docs.gitlab.com/runner/executors/kubernetes.html#using-dockerdind</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## DEPRECATED: See https://docs.gitlab.com/runner/install/kubernetes.html#additional-configuration</span></span><br><span class="line">  <span class="comment"># privileged: false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## For RBAC support:</span></span><br><span class="line"><span class="attr">rbac:</span></span><br><span class="line">  <span class="attr">create:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Run the gitlab-bastion container with the ability to deploy/manage containers of jobs</span></span><br><span class="line">  <span class="comment">## cluster-wide or only within namespace</span></span><br><span class="line">  <span class="attr">clusterWideAccess:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install gitlab-runner into gitlab-runner namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace gitlab-runner</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add gitlab https://charts.gitlab.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install gitlab-runner gitlab/gitlab-runner --namespace gitlab-runner -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about gitlab-runner.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace gitlab-runner</span></span><br><span class="line">NAME             NAMESPACE        REVISION    UPDATED                                   STATUS      CHART                   APP VERSION</span><br><span class="line">gitlab-runner    gitlab-runner    4           2020-09-19 09:30:53.392689 +0800 +0800    deployed    gitlab-runner-0.22.0    13.5.0</span><br></pre></td></tr></table></figure>

<p>See pods about gitlab-runner.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n gitlab-runner</span></span><br><span class="line">NAME                                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">gitlab-runner-gitlab-runner-66db9ddf6b-4pmqg   1/1     Running   0          12h</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://docs.gitlab.com/runner/install/kubernetes.html">GitLab Runner Helm Chart | GitLab - https://docs.gitlab.com/runner/install/kubernetes.html</a></p>
<p>[2] <a href="https://gitlab.com/gitlab-org/charts/gitlab-runner/-/blob/master/values.yaml">values.yaml · master · GitLab.org / charts / GitLab Runner · GitLab - https://gitlab.com/gitlab-org/charts/gitlab-runner/-/blob/master/values.yaml</a></p>
<p>[3] <a href="http://www.soolco.com/post/76550_1_1.html">GitLab Runner部署(kubernetes环境)-博客 - http://www.soolco.com/post/76550_1_1.html</a></p>
<p>[4] <a href="https://docs.gitlab.com/runner/">GitLab Runner | GitLab - https://docs.gitlab.com/runner/</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>GitLab</tag>
        <tag>Helm</tag>
        <tag>GitLab Runner</tag>
        <tag>CI / CD</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install GitLab for software development and deployment, and project management within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-GitLab-for-software-development-and-deployment-and-project-management-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h1><p>GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider.</p>
<p>GitLab is a fully integrated software development platform that enables your team to be transparent, fast, effective, and cohesive from discussion on a new idea to production, all on the same platform.</p>
<p>GitLab is a Git-based platform that integrates a great number of essential tools for software development and deployment, and project management:</p>
<ul>
<li><p>Hosting code in repositories with version control.</p>
</li>
<li><p>Tracking proposals for new implementations, bug reports, and feedback with a fully featured Issue Tracker.</p>
</li>
<li><p>Organizing and prioritizing with Issue Boards.</p>
</li>
<li><p>Reviewing code in Merge Requests with live-preview changes per branch with Review Apps.</p>
</li>
<li><p>Building, testing, and deploying with built-in Continuous Integration.</p>
</li>
<li><p>Deploying personal and professional static websites with GitLab Pages.</p>
</li>
<li><p>Integrating with Docker by using GitLab Container Registry.</p>
</li>
<li><p>Tracking the development lifecycle by using GitLab Value Stream Analytics.</p>
</li>
<li><p>Provide support with Service Desk.</p>
</li>
<li><p>Export issues as CSV.</p>
</li>
</ul>
<p>This article is about how to use Helm to deploy GitLab on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer values.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># values.yaml · master · GitLab.org / charts / GitLab Chart · GitLab</span></span><br><span class="line"><span class="comment"># https://gitlab.com/gitlab-org/charts/gitlab/-/blob/master/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment Guide | GitLab</span></span><br><span class="line"><span class="comment"># https://docs.gitlab.com/charts/installation/deployment.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## The global properties are used to configure multiple charts at once.</span></span><br><span class="line"><span class="comment">## Extended documenation at doc/charts/globals.md</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## doc/installation/deployment.md#deploy-the-community-edition</span></span><br><span class="line">  <span class="attr">edition:</span> <span class="string">ce</span> <span class="comment"># ce or ee</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="attr">https:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">domain:</span> &#123; <span class="string">.Values.global.hosts.domain</span> &#125;<span class="string">&#125;</span></span><br><span class="line">    <span class="comment"># gitlab:</span></span><br><span class="line">    <span class="comment">#   name: gitlab-&#123; .Values.global.hosts.domain &#125;&#125;</span></span><br><span class="line">    <span class="comment"># registry:</span></span><br><span class="line">    <span class="comment">#   name: registry-&#123; .Values.global.hosts.domain &#125;&#125;</span></span><br><span class="line">    <span class="comment"># minio:</span></span><br><span class="line">    <span class="comment">#   name: minio-gitlab-&#123; .Values.global.hosts.domain &#125;&#125;</span></span><br><span class="line">    <span class="comment"># smartcard:</span></span><br><span class="line">    <span class="comment">#   name: smartcard-gitlab-&#123; .Values.global.hosts.domain &#125;&#125;</span></span><br><span class="line">    <span class="comment"># kas:</span></span><br><span class="line">    <span class="comment">#   name: kas-gitlab-&#123; .Values.global.hosts.domain &#125;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">configureCertmanager:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">      <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">cert-manager.io/acme-challenge-type:</span> <span class="string">dns01</span></span><br><span class="line">      <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">secretName:</span> &#123; <span class="string">.Values.tls.secretName</span> &#125;<span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">gitlab:</span></span><br><span class="line">  <span class="attr">webservice:</span></span><br><span class="line">    <span class="attr">ingress:</span></span><br><span class="line">      <span class="attr">tls:</span></span><br><span class="line">        <span class="attr">secretName:</span> &#123; <span class="string">.Values.tls.secretName</span> &#125;<span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## doc/charts/nginx/index.md</span></span><br><span class="line"><span class="comment">## doc/architecture/decisions.md#nginx-ingress</span></span><br><span class="line"><span class="comment">## Installation &amp; configuration of charts/nginx</span></span><br><span class="line"><span class="attr">nginx-ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Installation &amp; configuration of jetstack/cert-manager</span></span><br><span class="line"><span class="comment">## See requirements.yaml for current version</span></span><br><span class="line"><span class="attr">certmanager:</span></span><br><span class="line">  <span class="attr">createCustomResource:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">install:</span> <span class="literal">false</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">registry:</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="attr">secretName:</span> &#123; <span class="string">.Values.tls.secretName</span> &#125;<span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install gitlab into gitlab namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace gitlab</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add gitlab https://charts.gitlab.io/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install gitlab gitlab/gitlab --namespace gitlab -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about gitlab.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace gitlab</span></span><br><span class="line">NAME         NAMESPACE    REVISION    UPDATED                                   STATUS      CHART           APP VERSION</span><br><span class="line">gitlab    gitlab    1           2020-09-19 14:01:49.120598 +0800 +0800    deployed    gitlab-4.5.4    13.5.4</span><br></pre></td></tr></table></figure>

<p>See pods about gitlab.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n gitlab</span></span><br><span class="line">NAME                                             READY   STATUS      RESTARTS   AGE</span><br><span class="line">gitlab-gitaly-0                               1/1     Running     0          8h</span><br><span class="line">gitlab-gitlab-exporter-b744ffb55-hbs9w        1/1     Running     0          8h</span><br><span class="line">gitlab-gitlab-runner-5d779f7ddd-cmdfx         1/1     Running     0          8h</span><br><span class="line">gitlab-gitlab-shell-6887b97cf6-f6bq4          1/1     Running     0          8h</span><br><span class="line">gitlab-gitlab-shell-6887b97cf6-k2f6f          1/1     Running     0          8h</span><br><span class="line">gitlab-migrations-1-fsz62                     0/1     Completed   0          8h</span><br><span class="line">gitlab-minio-6c8bc78596-7sxkd                 1/1     Running     0          8h</span><br><span class="line">gitlab-minio-create-buckets-1-j6pv4           0/1     Completed   0          8h</span><br><span class="line">gitlab-postgresql-0                           2/2     Running     0          8h</span><br><span class="line">gitlab-prometheus-server-77948f4459-f88bd     2/2     Running     0          8h</span><br><span class="line">gitlab-redis-master-0                         2/2     Running     0          8h</span><br><span class="line">gitlab-registry-767bf88497-js92p              1/1     Running     0          8h</span><br><span class="line">gitlab-registry-767bf88497-xrcn6              1/1     Running     0          8h</span><br><span class="line">gitlab-sidekiq-all-in-1-v1-5c6f8d57bc-rxdnk   0/1     Running     83         6h44m</span><br><span class="line">gitlab-task-runner-7f9f6566f9-clxmm           1/1     Running     0          8h</span><br><span class="line">gitlab-webservice-76cdb5d789-75p5d            2/2     Running     0          8h</span><br><span class="line">gitlab-webservice-76cdb5d789-td6k8            2/2     Running     0          8h</span><br></pre></td></tr></table></figure>

<p>Then, you can visit gitlab server with <code>https://gitlab-&#123; .Values.global.hosts.domain &#125;&#125;</code>.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://docs.gitlab.com/charts/">GitLab cloud native Helm Chart | GitLab - https://docs.gitlab.com/charts/</a></p>
<p>[2] <a href="https://docs.gitlab.com/charts/quickstart/index.html">Quick Start Guide | GitLab - https://docs.gitlab.com/charts/quickstart/index.html</a></p>
<p>[3] <a href="https://docs.gitlab.com/ce/README.html">GitLab Docs | GitLab - https://docs.gitlab.com/ce/README.html</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Grafana Loki to deploy a log aggregation system within Kubernetes (K8S)</title>
    <url>/2020/11/07/Kubernetes-K8S/Helm/Helm-install-Grafana-Loki-to-deploy-a-log-aggregation-system-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Loki-like-Prometheus-but-for-logs"><a href="#Loki-like-Prometheus-but-for-logs" class="headerlink" title="Loki: like Prometheus, but for logs"></a>Loki: like Prometheus, but for logs</h1><p>Loki is a horizontally-scalable, highly-available, multi-tenant log aggregation system inspired by Prometheus. It is designed to be very cost effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.</p>
<a id="more"></a>

<p>Compared to other log aggregation systems, Loki:</p>
<ul>
<li><p>does not do full text indexing on logs. By storing compressed, unstructured logs and only indexing metadata, Loki is simpler to operate and cheaper to run.</p>
</li>
<li><p>indexes and groups log streams using the same labels you’re already using with Prometheus, enabling you to seamlessly switch between metrics and logs using the same labels that you’re already using with Prometheus.</p>
</li>
<li><p>is an especially good fit for storing Kubernetes Pod logs. Metadata such as Pod labels is automatically scraped and indexed.<br>has native support in Grafana (needs Grafana v6.0).</p>
</li>
</ul>
<p>A Loki-based logging stack consists of 3 components:</p>
<ul>
<li><p>promtail is the agent, responsible for gathering logs and sending them to Loki.</p>
</li>
<li><p>loki is the main server, responsible for storing logs and processing queries.</p>
</li>
<li><p>Grafana for querying and displaying the logs.</p>
</li>
</ul>
<p>Loki is like Prometheus, but for logs: we prefer a multidimensional label-based approach to indexing, and want a single-binary, easy to operate system with no dependencies. Loki differs from Prometheus by focusing on logs instead of metrics, and delivering logs via push, instead of pull.</p>
<p>This article is about how to use Helm to deploy Loki Stack (Loki, Promtail, Grafana, Prometheus) on Kubernetes (K8S).</p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace <code>nfs</code> with your prefer storage class name.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># loki/values.yaml at master · grafana/loki</span></span><br><span class="line"><span class="comment"># https://github.com/grafana/loki/blob/master/production/helm/loki-stack/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deploy Loki Stack (Loki, Promtail, Grafana, Prometheus) with persistent volume claim</span></span><br><span class="line"><span class="comment"># https://grafana.com/docs/loki/latest/installation/helm/#deploy-loki-stack-loki-promtail-grafana-prometheus-with-persistent-volume-claim</span></span><br><span class="line"></span><br><span class="line"><span class="attr">grafana:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># helm-charts/values.yaml at main · grafana/helm-charts</span></span><br><span class="line">  <span class="comment"># https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Enable persistence using Persistent Volume Claims</span></span><br><span class="line">  <span class="comment">## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="comment"># type: pvc</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="string">enable</span></span><br><span class="line">    <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">    <span class="comment"># accessModes:</span></span><br><span class="line">    <span class="comment">#   - ReadWriteOnce</span></span><br><span class="line">    <span class="comment"># size: 10Gi</span></span><br><span class="line">    <span class="comment"># # annotations: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># finalizers:</span></span><br><span class="line">    <span class="comment">#   - kubernetes.io/pvc-protection</span></span><br><span class="line">    <span class="comment"># selectorLabels: &#123;&#125;</span></span><br><span class="line">    <span class="comment"># subPath: &quot;&quot;</span></span><br><span class="line">    <span class="comment"># existingClaim:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prometheus:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">alertmanager:</span></span><br><span class="line">    <span class="attr">persistentVolume:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      </span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">persistentVolume:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">loki:</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">    <span class="attr">size:</span> <span class="string">50Gi</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install loki-stack into loki-stack namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace loki-stack</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add loki https://grafana.github.io/loki/charts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install loki-stack loki/loki-stack -n loki-stack -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about loki-stack</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace loki-stack</span></span><br><span class="line">NAME          NAMESPACE     REVISION    UPDATED                                   STATUS      CHART               APP VERSION</span><br><span class="line">loki-stack    loki-stack    1           2020-11-07 16:01:20.573601 +0800 +0800    deployed    loki-stack-2.0.0    v2.0.0</span><br></pre></td></tr></table></figure>

<p>See pods about loki-stack.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n loki-stack</span></span><br><span class="line">NAME                                  READY   STATUS    RESTARTS   AGE</span><br><span class="line">loki-stack-0                          0/1     Running   2095       10d</span><br><span class="line">loki-stack-grafana-64d4d55957-5f7pv   1/1     Running   6          13d</span><br><span class="line">loki-stack-promtail-5f9fr             1/1     Running   7          10d</span><br></pre></td></tr></table></figure>

<h3 id="Run-Loki-behind-HTTPS-ingress"><a href="#Run-Loki-behind-HTTPS-ingress" class="headerlink" title="Run Loki behind HTTPS ingress"></a>Run Loki behind HTTPS ingress</h3><p>If Loki and Promtail are deployed on different clusters you can add an Ingress in front of Loki. By adding a certificate you create an HTTPS endpoint. For extra security you can also enable Basic Authentication on the Ingress.</p>
<h4 id="Promtail-enable-HTTPS"><a href="#Promtail-enable-HTTPS" class="headerlink" title="Promtail enable HTTPS"></a>Promtail enable HTTPS</h4><p>In Promtail, set the following values to communicate using HTTPS and basic authentication:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">loki:</span></span><br><span class="line">  <span class="attr">serviceScheme:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">pass</span></span><br></pre></td></tr></table></figure>

<h4 id="Sample-Helm-template-for-Ingress"><a href="#Sample-Helm-template-for-Ingress" class="headerlink" title="Sample Helm template for Ingress:"></a>Sample Helm template for Ingress:</h4><p>An Ingress example for loki-stack.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ingress.loki.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> &#123;&#123; <span class="string">.Values.ingress.class</span> &#125;&#125;</span><br><span class="line">    <span class="attr">ingress.kubernetes.io/auth-type:</span> <span class="string">&quot;basic&quot;</span></span><br><span class="line">    <span class="attr">ingress.kubernetes.io/auth-secret:</span> &#123;&#123; <span class="string">.Values.ingress.basic.secret</span> &#125;&#125;</span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki-stack</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">loki-stack</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">loki-stack</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">3100</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.ingress.cert</span> &#125;&#125;</span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>Then kubectl apply it.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f Ingress.loki.yaml</span></span><br></pre></td></tr></table></figure>

<p>An Ingress example for loki-stack-grafana.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ingress.loki-stack-grafana.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> &#123;&#123; <span class="string">.Values.ingress.class</span> &#125;&#125;</span><br><span class="line">    <span class="attr">kubernetes.io/tls-acme:</span> &#123;&#123; <span class="string">.Values.ingress.acme</span> &#125;&#125;</span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki-stack-grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">loki-stack</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">l&#123;&#123;</span> <span class="string">.Values.ingress.host</span> <span class="string">&#125;&#125;</span> </span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">loki-stack-grafana</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.ingress.cert</span> &#125;&#125;</span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>Then kubectl apply it.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f Ingress.loki.yaml</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://grafana.com/docs/loki/latest/installation/helm/">Helm | Grafana Labs - https://grafana.com/docs/loki/latest/installation/helm/</a></p>
<p>[2] <a href="https://artifacthub.io/packages/helm/loki/loki-stack">loki-stack 2.0.2 · helm/loki - https://artifacthub.io/packages/helm/loki/loki-stack</a></p>
<p>[3] <a href="https://github.com/grafana/loki">grafana/loki: Like Prometheus, but for logs. - https://github.com/grafana/loki</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Grafana Loki</tag>
        <tag>Log Aggregation System</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Ingress Nginx within Kubernetes (K8S)</title>
    <url>/2020/09/26/Kubernetes-K8S/Helm/Helm-install-Ingress-Nginx-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="helm-ingress-nginx-example"><a href="#helm-ingress-nginx-example" class="headerlink" title="helm-ingress-nginx-example"></a>helm-ingress-nginx-example</h1><p>ingress-nginx is an Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer.</p>
<p>You can modify it and use ingress-nginx. There is some examplesabout installing it with Helm in the article.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> example.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> --recursive https://github.com/CloudoLife/helm-ingress-nginx-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> helm-ingress-nginx-example</span></span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Edit <a href="./values.yaml">values.yaml</a> in helm-ingress-nginx-example directory, and replace content within &lt; and &gt;.</p>
<p>How to expose Ingress Nginx controller pod outside Kuberneters(K8S):</p>
<ul>
<li>use hostNetwork to expose Ingress Nginx controller pod.</li>
<li>run Ingress Nginx controller as a DaemonSet.</li>
<li>specify nodeSelector with Your Node Host Name or Label.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ingress-nginx/values.yaml at master · kubernetes/ingress-nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/kubernetes/ingress-nginx/blob/master/charts/ingress-nginx/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> helm install stable/ingress-nginx --<span class="built_in">set</span> controller.hostNetwork=<span class="literal">true</span>,controller.service.type=<span class="string">&quot;&quot;</span>,controller.kind=DaemonSet</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://medium.com/@craignewtondev/how-to-fix-kubernetes-namespace-deleting-stuck-in-terminating-state-5ed75792647e</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># nginx configuration</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#</span></span></span><br><span class="line">controller:</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Required <span class="keyword">for</span> use with CNI based kubernetes installations (such as ones <span class="built_in">set</span> up by kubeadm),</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> since CNI and hostport don<span class="string">&#x27;t mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> is merged</span></span><br><span class="line">  hostNetwork: true</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> DaemonSet or Deployment</span></span><br><span class="line"><span class="meta">  #</span></span><br><span class="line">  kind: DaemonSet</span><br><span class="line"></span><br><span class="line">  service:</span><br><span class="line"></span><br><span class="line">    type: &quot;ClusterIP&quot;</span><br><span class="line"></span><br><span class="line">  dnsPolicy: &quot;ClusterFirstWithHostNet&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="comment">## Node tolerations for server scheduling to nodes with taints</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="comment">## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="comment">##</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> tolerations:</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">   - operator: <span class="string">&quot;Exists&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Node labels <span class="keyword">for</span> default backend pod assignment</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Ref: https://kubernetes.io/docs/user-guide/node-selection/</span></span><br><span class="line"><span class="meta">  #</span></span><br><span class="line">  nodeSelector:</span><br><span class="line">    kubernetes.io/hostname: &lt;Your Node Host Name or Label&gt; </span><br><span class="line"></span><br><span class="line">  admissionWebhooks:</span><br><span class="line">    enabled: false</span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install ingress-nginx within ingress-nginx namespace. Please create ingress-nginx namespace first if not exist.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add stable https://kubernetes-charts.storage.googleapis.com</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install the ingress-nginx Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about ingress-nginx.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace ingress-nginx</span></span><br><span class="line">NAME             NAMESPACE        REVISION    UPDATED                                   STATUS      CHART                  APP VERSION</span><br><span class="line">ingress-nginx    ingress-nginx    2           2020-09-26 00:29:42.437531 +0800 +0800    deployed    ingress-nginx-3.3.0    0.35.0</span><br></pre></td></tr></table></figure>

<p>See pods about ingress-nginx.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n ingress-nginx</span></span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">ingress-nginx-controller-jz4ph   1/1     Running   4          13d</span><br></pre></td></tr></table></figure>

<h3 id="Common-Annotations"><a href="#Common-Annotations" class="headerlink" title="Common Annotations"></a>Common Annotations</h3><p>You can add these Kubernetes annotations to specific Ingress objects to customize their behavior.</p>
<h4 id="Custom-max-body-size¶"><a href="#Custom-max-body-size¶" class="headerlink" title="Custom max body size¶"></a>Custom max body size¶</h4><p>For NGINX, an 413 error will be returned to the client when the size in a request exceeds the maximum allowed size of the client request body. This size can be configured by the parameter client_max_body_size.</p>
<p>To configure this setting globally for all Ingress rules, the proxy-body-size value may be set in the NGINX ConfigMap. To use custom values in an Ingress rule define these annotation:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nginx.ingress.kubernetes.io/proxy-body-size:</span> <span class="string">8m</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/helm-ingress-nginx-example">CloudoLife/helm-ingress-nginx-example: Examples about Helm install Nginx Ingress. https://github.com/CloudoLife/helm-ingress-nginx-example - https://github.com/CloudoLife/helm-ingress-nginx-example</a></p>
<p>[2] <a href="https://kubernetes.github.io/ingress-nginx/">Welcome - NGINX Ingress Controller - https://kubernetes.github.io/ingress-nginx/</a></p>
<p>[3] <a href="https://github.com/kubernetes/ingress-nginx">kubernetes/ingress-nginx: NGINX Ingress Controller for Kubernetes - https://github.com/kubernetes/ingress-nginx</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
<p>[6] <a href="s://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations">Annotations - NGINX Ingress Controller - s://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations</a></p>
]]></content>
      <categories>
        <category>Kubernetes (K8S)</category>
        <category>Infrastructure as Code (IaC)</category>
      </categories>
      <tags>
        <tag>Infrastructure as Code (IaC)</tag>
        <tag>CloudoLife (CoL)</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Nginx</tag>
        <tag>Kubernetes (K8S) Ingress</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Jenkis to support building, deploying and automating any project within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-Jenkins-to-support-building-deploying-and-automating-any-project-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Jenkis"><a href="#Jenkis" class="headerlink" title="Jenkis"></a>Jenkis</h1><p>Jenkins is the leading open source automation server.</p>
<p>Jenkins provides hundreds of plugins to support building, deploying and automating any project.</p>
<p>Jenkins has the following features.</p>
<ul>
<li><p>Continuous Integration and Continuous Delivery</p>
</li>
<li><p>Easy installation</p>
</li>
<li><p>Easy configuration</p>
</li>
<li><p>Plugins</p>
</li>
<li><p>Extensible</p>
</li>
<li><p>Distributed</p>
</li>
</ul>
<p>This article is about how to use Helm to deploy Jenkins on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer values.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># helm-charts/values.yaml at main · jenkinsci/helm-charts</span></span><br><span class="line"><span class="comment"># https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">master:</span></span><br><span class="line">  <span class="attr">ingress:</span> </span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="comment"># kubernetes.io/ingress.class: &#123;&#123; .Values.ingress.class &#125;&#125; # &quot;nginx&quot;</span></span><br><span class="line">      <span class="comment"># kubernetes.io/tls-acme: &#123;&#123; .Values.ingress.acme &#125;&#125;  # &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># cert-manager.io/acme-challenge-type: dns01</span></span><br><span class="line">      <span class="comment"># cert-manager.io/cluster-issuer: cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">hostName:</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.ingress.tls.secretName</span> &#125;&#125;</span><br><span class="line">        <span class="attr">hosts:</span></span><br><span class="line">          <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install jenkins into jenkins namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace jenkins</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add jenkins https://charts.jenkins.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install jenkins jenkins/jenkins --namespace jenkins -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about jenkins.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace jenkins</span></span><br><span class="line">NAME       NAMESPACE    REVISION    UPDATED                                   STATUS    CHART             APP VERSION</span><br><span class="line">jenkins    jenkins      1           2020-09-19 16:48:00.965014 +0800 +0800    failed    jenkins-2.17.1    lts9</span><br></pre></td></tr></table></figure>

<p>See pods about jenkins.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n jenkins</span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">jenkins-5cd8c86944-mtc4l   2/2     Running   0          5h17m</span><br></pre></td></tr></table></figure>

<p>Then, you can visit jenkins server with <code>https://&#123;&#123; .Values.ingress.host &#125;&#125;</code>.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/jenkinsci/helm-charts">jenkinsci/helm-charts: Jenkins community Helm charts - https://github.com/jenkinsci/helm-charts</a></p>
<p>[2] <a href="https://www.jenkins.io/doc/book/installing/kubernetes/#install-jenkins-with-helm-v3">Install Jenkins with Helm v3 - https://www.jenkins.io/doc/book/installing/kubernetes/#install-jenkins-with-helm-v3</a></p>
<p>[3] <a href="https://www.jenkins.io/">Jenkins - https://www.jenkins.io/</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Jenkis</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install MetalLB to handle ServiceType Loadbalancer for bare metal within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-MetalLB-to-handle-ServiceType-Loadbalancer-for-bare-metal-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="MetalLB"><a href="#MetalLB" class="headerlink" title="MetalLB"></a>MetalLB</h1><p>MetalLB is an open source, rock solid LoadBalancer. It handles the ServiceType: Loadbalancer for bare metal Kubernetes clusters, using standard routing protocols.</p>
<p>This article is about how to use Helm to deploy MetalLB on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace the values within <code>&#123;&#123; &#125;&#125;</code>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># charts/values.yaml at master · bitnami/charts</span></span><br><span class="line"><span class="comment"># https://github.com/bitnami/charts/blob/master/bitnami/metallb/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## To configure MetalLB, you must specify ONE of the following two</span></span><br><span class="line"><span class="comment">## options.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## existingConfigMap specifies the name of an externally-defined</span></span><br><span class="line"><span class="comment">## ConfigMap to use as the configuration. Helm will not manage the</span></span><br><span class="line"><span class="comment">## contents of this ConfigMap, it is your responsibility to create it.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># existingConfigMap: metallb-config</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## configInline specifies MetalLB&#x27;s configuration directly, in yaml</span></span><br><span class="line"><span class="comment">## format. When configInline is used, Helm manages MetalLB&#x27;s</span></span><br><span class="line"><span class="comment">## configuration ConfigMap as part of the release, and</span></span><br><span class="line"><span class="comment">## existingConfigMap is ignored.</span></span><br><span class="line"><span class="comment">## Refer to https://metallb.universe.tf/configuration/ for</span></span><br><span class="line"><span class="comment">## available options.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="attr">configInline:</span> <span class="string">|</span></span><br><span class="line">    <span class="comment"># https://metallb.universe.tf/configuration/#layer-2-configuration</span></span><br><span class="line">    <span class="attr">address-pools:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">layer2</span></span><br><span class="line">      <span class="attr">addresses:</span></span><br><span class="line">      <span class="comment"># Replace with idle IP in the same subnet as the node IP.</span></span><br><span class="line">      <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.addresses</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install metallb into metallb namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace metallb-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add bitnami https://charts.bitnami.com/bitnami</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install metallb bitnami/metallb --namespace metallb-system -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about metallb.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace metallb-system</span></span><br><span class="line">NAME       NAMESPACE         REVISION    UPDATED                                   STATUS      CHART             APP VERSION</span><br><span class="line">metallb    metallb-system    4           2020-09-19 11:26:07.970123 +0800 +0800    deployed    metallb-0.1.24    0.9.3</span><br></pre></td></tr></table></figure>

<p>See pods about metallb.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n metallb-system</span></span><br><span class="line">NAME                                 READY   STATUS      RESTARTS   AGE</span><br><span class="line">metallb-controller-f899f5594-7d29x   1/1     Running     6          15d</span><br><span class="line">metallb-speaker-xkksl                1/1     Running     44         30d</span><br><span class="line">metallb-speaker-xsqgx                1/1     Running     35         30d</span><br></pre></td></tr></table></figure>

<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>Create Deployment and Service(LoadBalancer) for Nginx.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://raw.githubusercontent.com/metallb/metallb/main/manifests/tutorial-2.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Apply manifest file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f tutorial-2.yaml</span></span><br></pre></td></tr></table></figure>

<p>Then, check <code>svc</code> or <code>Service</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get svc</span></span><br><span class="line">NAME         TYPE           CLUSTER-IP    EXTERNAL-IP    PORT(S)        AGE</span><br><span class="line">nginx        LoadBalancer   10.105.4.74   &lt;Your addresse&gt;   80:32159/TCP   31d</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/bitnami/charts/tree/master/bitnami/metallb">charts/bitnami/metallb at master · bitnami/charts - https://github.com/bitnami/charts/tree/master/bitnami/metallb</a></p>
<p>[2] <a href="https://metallb.universe.tf/installation/">MetalLB, bare metal load-balancer for Kubernetes - https://metallb.universe.tf/installation/</a></p>
<p>[3] <a href="https://github.com/metallb/metallb"> - https://github.com/metallb/metallb</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
        <category>Loadbalancer</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>MetalLB</tag>
        <tag>Loadbalancer</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Minio distributed Object Storage compatible with Amazon S3 within Kubernetes (K8S)</title>
    <url>/2020/10/10/Kubernetes-K8S/Helm/Helm-install-Minio-distributed-Object-Storage-compatible-with-Amazon-S3-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="kube-prometheus-stack"><a href="#kube-prometheus-stack" class="headerlink" title="kube-prometheus stack"></a>kube-prometheus stack</h1><p>MinIO is a High Performance Object Storage released under Apache License v2.0. It is API compatible with Amazon S3 cloud storage service. Use MinIO to build high performance infrastructure for machine learning, analytics and application data workloads.</p>
<p>MinIO supports distributed mode. In distributed mode, you can pool multiple drives (even on different machines) into a single object storage server.</p>
<p>This article is about how to use Helm to deploy Minio on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace the content within &lt; &gt; with your info.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># charts/minio at master · minio/charts</span></span><br><span class="line"><span class="comment"># https://github.com/minio/charts/blob/master/minio/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## minio server mode, i.e. standalone or distributed.</span></span><br><span class="line"><span class="comment">## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">distributed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Enable persistence using Persistent Volume Claims</span></span><br><span class="line"><span class="comment">## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">persistence:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## minio data Persistent Volume Storage Class</span></span><br><span class="line">  <span class="comment">## If defined, storageClassName: &lt;storageClass&gt;</span></span><br><span class="line">  <span class="comment">## If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</span></span><br><span class="line">  <span class="comment">## If undefined (the default) or set to null, no storageClassName spec is</span></span><br><span class="line">  <span class="comment">##   set, choosing the default provisioner.  (gp2 on AWS, standard on</span></span><br><span class="line">  <span class="comment">##   GKE, AWS &amp; OpenStack)</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## Storage class of PV to bind. By default it looks for standard storage class.</span></span><br><span class="line">  <span class="comment">## If the PV uses a different storage class, specify that here.</span></span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&lt;Your</span> <span class="string">storageClassName&gt;</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">5Gi</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="comment"># kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line">    <span class="comment"># kubernetes.io/ingress.allow-http: &quot;false&quot;</span></span><br><span class="line">    <span class="comment"># kubernetes.io/ingress.global-static-ip-name: &quot;&quot;</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/secure-backends: &quot;true&quot;</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/backend-protocol: &quot;HTTPS&quot;</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Minio</span> <span class="string">Host&gt;</span> </span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">     <span class="attr">hosts:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Minio</span> <span class="string">Host&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">## Create a bucket after minio install</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">defaultBucket:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">## If enabled, must be a string with length &gt; 0</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">default-bucket</span></span><br><span class="line">  <span class="comment">## Can be one of none|download|upload|public</span></span><br><span class="line">  <span class="attr">policy:</span> <span class="string">none</span></span><br><span class="line">  <span class="comment">## Purge if bucket exists already</span></span><br><span class="line">  <span class="attr">purge:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">## set versioning for bucket true|false</span></span><br><span class="line">  <span class="comment"># versioning: false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Create multiple buckets after minio install</span></span><br><span class="line"><span class="comment">## Enabling `defaultBucket` will take priority over this list</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">buckets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">another-bucket</span></span><br><span class="line">    <span class="attr">policy:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">purge:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">versioning:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># - name: bucket2</span></span><br><span class="line">  <span class="comment">#   policy: none</span></span><br><span class="line">  <span class="comment">#   purge: false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line">  <span class="comment"># Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493</span></span><br><span class="line">  <span class="attr">serviceMonitor:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install minio into minio namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace minio</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add minio https://helm.min.io/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install minio minio/minio -n minio -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about minio.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace minio</span></span><br><span class="line">NAME                     NAMESPACE                REVISION    UPDATED                                   STATUS      CHART                           APP VERSION</span><br><span class="line">minio    minio        4           2020-10-10 16:44:15.426834 +0800 +0800    deployed    minio-8.0.2    master</span><br></pre></td></tr></table></figure>

<p>See pods about minio.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n kube-prometheus-stack</span></span><br><span class="line">NAME      READY   STATUS        RESTARTS   AGE</span><br><span class="line">minio-0   0/1     Running       0          4d10h</span><br><span class="line">minio-1   1/1     Running       0          2d18h</span><br><span class="line">minio-2   1/1     Running       0          2d18h</span><br><span class="line">minio-3   1/1     Running       0          2d18h</span><br></pre></td></tr></table></figure>

<p>Then, you can visit Minio with https://<Your Minio Host></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack">helm-charts/charts/kube-prometheus-stack at main · prometheus-community/helm-charts - https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack</a></p>
<p>[2] <a href="https://docs.min.io/docs/deploy-minio-on-kubernetes.html">Deploy MinIO on Kubernetes - https://docs.min.io/docs/deploy-minio-on-kubernetes.html</a></p>
<p>[3] <a href="https://min.io/">MinIO | High Performance, Kubernetes Native Object Storage - https://min.io/</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Minio</tag>
        <tag>Object Storage</tag>
        <tag>Amazon S3</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install PlantUML Server to generate UML diagrams on-the-fly within Kubernetes (K8S)</title>
    <url>/2020/09/19/Kubernetes-K8S/Helm/Helm-install-PlantUML-Server-to-generate-UML-diagrams-on-the-fly-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="PlantUML"><a href="#PlantUML" class="headerlink" title="PlantUML"></a>PlantUML</h1><p>PlantUML is an open-source tool allowing users to create diagrams from a plain text language that allows to quickly write :</p>
<ul>
<li><p>Sequence diagram</p>
</li>
<li><p>Usecase diagram</p>
</li>
<li><p>Class diagram</p>
</li>
<li><p>Activity diagram (here is the legacy syntax)</p>
</li>
<li><p>Component diagram</p>
</li>
<li><p>State diagram</p>
</li>
<li><p>Object diagram</p>
</li>
<li><p>Deployment diagram</p>
</li>
<li><p>Timing diagram</p>
</li>
</ul>
<p>PlantUML Server is a web application to generate UML diagrams on-the-fly.</p>
<p>This article is about how to use Helm to deploy PlantUML Server on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer values.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ingress: </span></span><br><span class="line"><span class="comment">#   enabled: true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   annotations:</span></span><br><span class="line"><span class="comment">#     kubernetes.io/ingress.class: &quot;nginx&quot;</span></span><br><span class="line"><span class="comment">#     kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#     cert-manager.io/acme-challenge-type: dns01</span></span><br><span class="line"><span class="comment">#     cert-manager.io/cluster-issuer: cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#   hostname: &#123;&#123; .Values.ingress.host &#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   tls:</span></span><br><span class="line"><span class="comment">#   - secretName: &#123;&#123; .Values.tls.secretName &#125;&#125;</span></span><br><span class="line"><span class="comment">#     hosts:</span></span><br><span class="line"><span class="comment">#       - &#123;&#123; .Values.ingress.host &#125;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install plantuml into plantuml namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace plantuml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add stevehipwell https://stevehipwell.github.io/helm-charts/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install plantuml stevehipwell/plantuml --namespace plantuml -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about plantuml.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace plantuml</span></span><br><span class="line">NAME        NAMESPACE    REVISION    UPDATED                                   STATUS      CHART             APP VERSION</span><br><span class="line">plantuml    plantuml     3           2020-09-19 05:47:51.671588 +0800 +0800    deployed    plantuml-1.2.0    1.2020.19</span><br></pre></td></tr></table></figure>

<p>See pods about plantuml.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n plantuml</span></span><br><span class="line">NAME                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">plantuml-84d86c9dc6-wrc6h   1/1     Running   0          14md</span><br></pre></td></tr></table></figure>

<h3 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h3><p>Create Ingress for plantuml. </p>
<p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer values.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ingress.plantuml.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># cert-manager.io/acme-challenge-type: dns01</span></span><br><span class="line">    <span class="comment"># cert-manager.io/cluster-issuer: cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ingress.kubernetes.io/auth-type: &quot;basic&quot;</span></span><br><span class="line">    <span class="comment"># ingress.kubernetes.io/auth-secret: &#123;&#123; .Values.ingress.basic.secret &#125;&#125;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">plantuml</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">plantuml</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125; </span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">plantuml</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.tls.secretName</span> &#125;&#125;</span><br><span class="line">      <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.host</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>Apply manifest file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f Ingress.plantuml.yaml</span></span><br></pre></td></tr></table></figure>

<p>Then, you can visit plantuml server with <code>https://&#123;&#123; .Values.ingress.host &#125;&#125;</code>.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://artifacthub.io/packages/helm/stevehipwell/plantuml/1.2.0">plantuml 1.2.0 · steve.hipwell/stevehipwell - https://artifacthub.io/packages/helm/stevehipwell/plantuml/1.2.0</a></p>
<p>[2] <a href="https://plantuml.com/">Open-source tool that uses simple textual descriptions to draw beautiful UML diagrams. - https://plantuml.com/</a></p>
<p>[3] <a href="https://github.com/plantuml/plantuml">plantuml/plantuml-server: PlantUML Online Server - https://github.com/plantuml/plantuml</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>PlantUML</tag>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install PostHog to provide product analytics stack within Kubernetes (K8S)</title>
    <url>/2021/01/16/Kubernetes-K8S/Helm/Helm-install-PostHog-to-collect-and-aggregate-crash-reporting-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="PostHog"><a href="#PostHog" class="headerlink" title="PostHog"></a>PostHog</h1><p>PostHog provides open-source product analytics, built for developers. Automate the collection of every event on your website or app, with no need to send data to 3rd parties. With just 1 click you can deploy on your own infrastructure, having full API/SQL access to the underlying data.</p>
<p>This article is about how to use Helm to install PostHog on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><p>Helm install posthog into posthog namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace posthog</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Stable Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add posthog https://posthog.github.io/charts/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install posthog posthog/posthog -n posthog -f .values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about posthog</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace posthog</span></span><br><span class="line">NAME                           NAMESPACE                 REVISION    UPDATED                                    STATUS      CHART</span><br><span class="line">posthog                          posthog               1           2021-01-23 11:19:51.65893 +0800 +0800      deployed    posthog-1.20.0                        v1.4.4</span><br></pre></td></tr></table></figure>

<p>See pods about posthog.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n posthog</span></span><br><span class="line">NAME                               READY   STATUS    RESTARTS   AGE</span><br><span class="line">posthog-beat-598b5654ff-n7f4p      1/1     Running   3          2d8h</span><br><span class="line">posthog-metrics-7d5469b975-mv5zw   1/1     Running   0          2d8h</span><br><span class="line">posthog-plugins-6fbbc5749d-dc9br   1/1     Running   0          2d8h</span><br><span class="line">posthog-plugins-6fbbc5749d-dcc28   1/1     Running   0          2d8h</span><br><span class="line">posthog-posthog-postgresql-0       1/1     Running   1          2d10h</span><br><span class="line">posthog-posthog-redis-master-0     1/1     Running   0          2d8h</span><br><span class="line">posthog-posthog-redis-slave-0      1/1     Running   0          2d8h</span><br><span class="line">posthog-posthog-redis-slave-1      1/1     Running   0          2d8h</span><br><span class="line">posthog-web-f5757799-sxfpm         1/1     Running   1          2d8h</span><br><span class="line">posthog-worker-587f698956-sn8lt    1/1     Running   0          2d8h</span><br><span class="line">posthog-worker-587f698956-xqrn9    1/1     Running   1          2d8h</span><br></pre></td></tr></table></figure>

<h3 id="Custom-values-yaml"><a href="#Custom-values-yaml" class="headerlink" title="Custom .values.yaml"></a>Custom .values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer value.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># charts/values.yaml at master · PostHog/charts</span></span><br><span class="line"><span class="comment"># https://github.com/PostHog/charts/blob/master/charts/posthog/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">posthogSecret:</span> &#123;&#123; <span class="string">.Values.posthogSecret</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Name of the service and what port to expose on the pod</span></span><br><span class="line"><span class="comment"># Don&#x27;t change these unless you know what you&#x27;re doing</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Configure ingress resource that allow you to access the</span></span><br><span class="line"><span class="comment">## PostHog installation. Set up the URL</span></span><br><span class="line"><span class="comment">## ref: http://kubernetes.io/docs/user-guide/ingress/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hostname:</span> &#123;&#123; <span class="string">.Values.ingress.hostname</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Ingress annotations</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="comment"># kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">certmanager.k8s.io/acme-challenge-type:</span> <span class="string">http01</span></span><br><span class="line">    <span class="attr">certmanager.k8s.io/cluster-issuer:</span> &#123;&#123; <span class="string">.Values.clusterIssuer</span> &#125;&#125;</span><br><span class="line">    <span class="comment"># cert-manager.io/acme-challenge-type: dns01</span></span><br><span class="line">    <span class="comment"># cert-manager.io/cluster-issuer: cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Ingress TLS configuration</span></span><br><span class="line">  <span class="comment">## Secrets must be manually created in the namespace</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.ingress.secretName</span> &#125;&#125;</span><br><span class="line">      <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.hostname</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Prometheus Exporter / Metrics</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="Web-UI"><a href="#Web-UI" class="headerlink" title="Web UI"></a>Web UI</h2><p>Then, you can visit <code>https://&#123;&#123; .Values.ingress.hostname &#125;&#125;</code> to access PostHog Web UI.</p>
<h2 id="FAQS"><a href="#FAQS" class="headerlink" title="FAQS"></a>FAQS</h2><h3 id="502-Bad-Gateway"><a href="#502-Bad-Gateway" class="headerlink" title="502 Bad Gateway"></a>502 Bad Gateway</h3><p>PostHog may fail to initialize or upgrade database since it will take too long. You can do it yoursef.</p>
<p>First, enter into Pod posthog-web bash.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl <span class="built_in">exec</span> -n posthog `kubectl get pods -n posthog | grep posthog-web | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>` -it -- bash</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>posthog upgrade</code> within container to run all migrations and create an admin account.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python manage.py migrate</span></span><br></pre></td></tr></table></figure>

<p>Finally, you can visit Web UI without any error.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://posthog.com/docs/deployment/deploy-kubernetes">Deploying with Helm Chart (Kubernetes) - PostHog Docs - https://posthog.com/docs/deployment/deploy-kubernetes</a></p>
<p>[2] <a href="https://github.com/PostHog/charts/blob/master/charts/posthog/values.yaml">charts/values.yaml at master · PostHog/charts - https://github.com/PostHog/charts/blob/master/charts/posthog/values.yaml</a></p>
<p>[3] <a href="https://posthog.com/">PostHog - Open-Source Product Analytics - https://posthog.com/</a></p>
<p>[4] <a href="https://github.com/PostHog/posthog">PostHog/posthog: 🦔 PostHog is developer-friendly, open-source product analytics. - https://github.com/PostHog/posthog</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
        <category>Site Reliability Engineering (SRE)</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>PostHog</tag>
        <tag>Site Reliability Engineering (SRE)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Rancher Container Management Platform for Kubernetes (K8S)</title>
    <url>/2020/10/03/Kubernetes-K8S/Helm/Helm-install-Rancher-Container-Management-Platform-for-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Rancher"><a href="#Rancher" class="headerlink" title="Rancher"></a>Rancher</h1><p>Rancher is a complete container management platform for Kubernetes, giving you the tools to successfully run Kubernetes anywhere.</p>
<p>Rancher can provision Kubernetes from a hosted provider, provision compute nodes and then install Kubernetes onto them, or import existing Kubernetes clusters running anywhere.</p>
<p>One Rancher server installation can manage thousands of Kubernetes clusters and thousands of nodes from the same user interface.</p>
<p>Rancher adds significant value on top of Kubernetes, first by centralizing authentication and role-based access control (RBAC) for all of the clusters, giving global admins the ability to control cluster access from one location.</p>
<p>It then enables detailed monitoring and alerting for clusters and their resources, ships logs to external providers, and integrates directly with Helm via the Application Catalog. If you have an external CI/CD system, you can plug it into Rancher, but if you don’t, Rancher even includes a pipeline engine to help you automatically deploy and upgrade workloads.</p>
<p>This article is about how to use Helm to deploy Rancher on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace the values within <code>&#123;&#123; &#125;&#125;</code>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rancher/values.yaml at master · rancher/rancher</span></span><br><span class="line"><span class="comment"># https://github.com/rancher/rancher/blob/master/chart/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Fully qualified name to reach your Rancher server</span></span><br><span class="line"><span class="attr">hostname:</span> &#123;&#123; <span class="string">.Values.hostname</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">### ingress ###</span></span><br><span class="line"><span class="comment"># Readme for details and instruction on adding tls secrets.</span></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="comment"># options: rancher, letsEncrypt, secret</span></span><br><span class="line">    <span class="attr">source:</span> &#123;&#123; <span class="string">.Values.ingress.tls.source</span> &#125;&#125; </span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install rancher into cattle-system namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace cattle-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add rancher-stable https://releases.rancher.com/server-charts/stable</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install rancher rancher-stable/rancher --namespace cattle-system -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about rancher.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace cattle-system</span></span><br><span class="line">NAME       NAMESPACE        REVISION    UPDATED                                   STATUS      CHART            APP VERSION</span><br><span class="line">rancher    cattle-system    1           2020-10-03 12:01:26.378354 +0800 +0800    deployed    rancher-2.4.8    v2.4.8</span><br></pre></td></tr></table></figure>

<p>See pods about rancher.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n cattle-system</span></span><br><span class="line">NAME                                    READY   STATUS              RESTARTS   AGE</span><br><span class="line">cattle-cluster-agent-77c768fc96-dvz7l   1/1     Running             11         11d</span><br><span class="line">cattle-node-agent-29pn6                 1/1     Running             12         11d</span><br><span class="line">rancher-6b78b4b7fd-79l2h                1/1     Running             2          5d10h</span><br><span class="line">rancher-6b78b4b7fd-fbpg2                1/1     Running             3          5d</span><br><span class="line">rancher-6b78b4b7fd-vdnhc                1/1     Running             2          5d10h</span><br></pre></td></tr></table></figure>

<p>Then, you can visit Rancher Web UI with https://<Your Rancher Hostname></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://rancher.com/docs/rancher/v2.x/en/installation/install-rancher-on-k8s/">Rancher Docs: Install Rancher on a Kubernetes Cluster - https://rancher.com/docs/rancher/v2.x/en/installation/install-rancher-on-k8s/</a></p>
<p>[2] <a href="https://rancher.com/docs/rancher/v2.x/en/">Rancher 2.x Docs: What is New? - https://rancher.com/docs/rancher/v2.x/en/</a></p>
<p>[3] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[4] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Rancher</tag>
        <tag>Rancher Labs</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Rancher Labs Longhorn Cloud Native distributed block storage for Kubernetes (K8S)</title>
    <url>/2020/10/03/Kubernetes-K8S/Helm/Helm-install-Rancher-Labs-Longhorn-Cloud-Native-distributed-block-storage-for-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Rancher-Labs-Longhorn"><a href="#Rancher-Labs-Longhorn" class="headerlink" title="Rancher Labs Longhorn"></a>Rancher Labs Longhorn</h1><p>Longhorn is a lightweight, reliable and easy-to-use Cloud native distributed block storage system for Kubernetes.</p>
<p>Longhorn is free, open source software. Originally developed by Rancher Labs, it is now being developed as a sandbox project of the Cloud Native Computing Foundation.</p>
<p>With Longhorn, you can:</p>
<ul>
<li><p>Use Longhorn volumes as persistent storage for the distributed stateful applications in your Kubernetes cluster</p>
</li>
<li><p>Partition your block storage into Longhorn volumes so that you can use Kubernetes volumes with or without a cloud provider<br>Replicate block storage across multiple nodes and data centers to increase availability</p>
</li>
<li><p>Store backup data in external storage such as NFS or AWS S3</p>
</li>
<li><p>Create cross-cluster disaster recovery volumes so that data from a primary Kubernetes cluster can be quickly recovered from backup in a second Kubernetes cluster</p>
</li>
<li><p>Schedule recurring snapshots of a volume, and schedule recurring backups to NFS or S3-compatible secondary storage<br>Restore volumes from backup</p>
</li>
<li><p>Upgrade Longhorn without disrupting persistent volumes</p>
</li>
<li><p>Manipulate Longhorn resources with kubectl</p>
</li>
</ul>
<p>This article is about how to use Helm to deploy Longhorn on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
<li><p><code>open-iscsi</code> is installed, and the iscsid daemon is running on all the nodes.<br>The Open-iSCSI project provides a high-performance, transport independent, implementation of RFC 3720 iSCSI for Linux. </p>
<p>You will get an error message without <code>open-iscsi</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">level=error msg=&quot;Failed environment check, please make sure you have iscsiadm/open-iscsi installed on the host&quot;</span><br></pre></td></tr></table></figure>

<p>For help installing open-iscsi: </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> For Debian and Ubuntu, use this <span class="built_in">command</span>:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install open-iscsi</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> For RHEL, CentOS, and EKS with EKS Kubernetes Worker AMI with AmazonLinux2 image, use this <span class="built_in">command</span>:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install iscsi-initiator-utils</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> start and <span class="built_in">enable</span> iscsid.service</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start iscsid &amp;&amp; sudo systemctl <span class="built_in">enable</span> iscsid</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl status iscsid</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install longhorn into longhorn-system namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace longhorn-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add longhorn https://charts.longhorn.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install longhorn longhorn/longhorn --namespace longhorn-system -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about longhorn.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace longhorn-system</span></span><br><span class="line">NAME        NAMESPACE          REVISION    UPDATED                                   STATUS      CHART             APP VERSION</span><br><span class="line">longhorn    longhorn-system    1           2020-10-03 14:17:30.890902 +0800 +0800    deployed    longhorn-1.0.2    v1.0.2</span><br></pre></td></tr></table></figure>

<p>See pods about longhorn.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n longhorn-system</span></span><br><span class="line">NAME                                        READY   STATUS              RESTARTS   AGE</span><br><span class="line">csi-attacher-7cb499df6-9rbd4                1/1     Running             8          14d</span><br><span class="line">csi-attacher-7cb499df6-tmmkn                1/1     Running             5          4d5h</span><br><span class="line">csi-attacher-7cb499df6-xk4hp                0/1     Running             5          13d</span><br><span class="line">csi-provisioner-67846b4b55-67c9z            0/1     Running             11         13d</span><br><span class="line">csi-provisioner-67846b4b55-ld5wc            1/1     Running             5          4d5h</span><br><span class="line">csi-provisioner-67846b4b55-vcz2g            1/1     Running             11         14d</span><br><span class="line">csi-resizer-5cb8df7db9-j54t4                1/1     Running             3          4d5h</span><br><span class="line">csi-resizer-5cb8df7db9-jvmsg                0/1     Running             6          13d</span><br><span class="line">csi-resizer-5cb8df7db9-pfwbh                1/1     Running             8          14d</span><br><span class="line">engine-image-ei-ee18f965-2pvzz              1/1     Running             5          10d</span><br><span class="line">engine-image-ei-ee18f965-5v78m              1/1     Running             7          10d</span><br><span class="line">engine-image-ei-ee18f965-kmfp2              0/1     Running             5          14d</span><br><span class="line">instance-manager-e-0ee5547d                 0/1     Running             0          3d22h</span><br><span class="line">instance-manager-e-898a68ba                 1/1     Running             0          2d22h</span><br><span class="line">instance-manager-e-9a24409b                 1/1     Running             0          2d22h</span><br><span class="line">longhorn-csi-plugin-4gfdx                   0/2     Running             13         14d</span><br><span class="line">longhorn-csi-plugin-6dllz                   2/2     Running             16         14d</span><br><span class="line">longhorn-csi-plugin-7x68l                   2/2     Running             22         10d</span><br><span class="line">longhorn-driver-deployer-658fdf45cc-rkh9s   1/1     Running             7          14d</span><br><span class="line">longhorn-manager-7pc2f                      1/1     Running             6          14d</span><br><span class="line">longhorn-manager-cgjtd                      1/1     Running             7          14d</span><br><span class="line">longhorn-manager-dzw5s                      1/1     Running             7          10d</span><br><span class="line">longhorn-ui-7788d4f485-qd9w8                0/1     Running               2          4d5h</span><br></pre></td></tr></table></figure>

<h2 id="Accessing-the-Longhorn-UI"><a href="#Accessing-the-Longhorn-UI" class="headerlink" title="Accessing the Longhorn UI"></a>Accessing the Longhorn UI</h2><p>Remember to replace the content within &lt; &gt; with your info.</p>
<h3 id="Basic-Authentication-Secret"><a href="#Basic-Authentication-Secret" class="headerlink" title="Basic Authentication Secret"></a>Basic Authentication Secret</h3><p>First, create a secret for Basic Authentication from <code>shell</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create ing-auth pass</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> htpasswd -c ./ing-auth admin</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> create secret</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create secret generic longhorn-auth --from-file ing-auth --namespace=longhorn-system</span></span><br></pre></td></tr></table></figure>

<p>Or by <code>kubectl apply</code> command.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Secret.longhorn-frontend.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Secrets | Kubernetes</span></span><br><span class="line"><span class="comment"># https://kubernetes.io/docs/concepts/configuration/secret/</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">longhorn-auth</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">longhorn-system</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">auth:</span> <span class="string">&lt;Your</span> <span class="string">UserName</span> <span class="string">and</span> <span class="string">Password</span> <span class="string">|</span> <span class="string">base64</span> <span class="string">&gt;</span></span><br></pre></td></tr></table></figure>

<p>Apply the yaml file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f Secret.longhorn-frontend.yaml</span></span><br></pre></td></tr></table></figure>

<h3 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ingress.longhorn-frontend.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Basic Authentication - NGINX Ingress Controller</span></span><br><span class="line">    <span class="comment"># https://kubernetes.github.io/ingress-nginx/examples/auth/basic/</span></span><br><span class="line">    <span class="comment"># type of authentication</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-type:</span> <span class="string">basic</span></span><br><span class="line">    <span class="comment"># name of the secret that contains the user/password definitions</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-secret:</span> <span class="string">longhorn-auth</span></span><br><span class="line">    <span class="comment"># message to display with an appropriate context why the authentication is required</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/auth-realm:</span> <span class="string">&#x27;Authentication Required - foo&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">name:</span> <span class="string">longhorn-frontend</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">longhorn-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">&lt;Your</span> <span class="string">longhorn-frontend</span> <span class="string">Host&gt;</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">longhorn-frontend</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">      <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">longhorn-frontend</span> <span class="string">Host&gt;</span></span><br></pre></td></tr></table></figure>

<p>Apply the yaml file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f Ingress.longhorn-frontend.yaml</span></span><br></pre></td></tr></table></figure>

<p>Then, you can visit Longhorn Front UI with https://<Your Longhorn Host></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://longhorn.io/docs/1.0.2/deploy/install/install-with-helm/">Install Longhorn with Helm - https://longhorn.io/docs/1.0.2/deploy/install/install-with-helm/</a></p>
<p>[2] <a href="https://longhorn.io/docs/1.0.2/deploy/accessing-the-ui/">Accessing the Longhorn UI - https://longhorn.io/docs/1.0.2/deploy/accessing-the-ui/</a></p>
<p>[3] <a href="https://longhorn.io/">Longhorn - Cloud native distributed block storage for Kubernetes - https://longhorn.io/</a></p>
<p>[4] <a href="http://www.open-iscsi.com/">Open-iSCSI by open-iscsi - http://www.open-iscsi.com/</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Rancher Labs</tag>
        <tag>Longhorn</tag>
        <tag>Block Storage</tag>
        <tag>open-iscsi</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install Sentry 9.x to collect and aggregate crash reporting within Kubernetes (K8S)</title>
    <url>/2021/01/23/Kubernetes-K8S/Helm/Helm-install-Sentry-9-x-to-collect-and-aggregate-crash-reporting-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="Sentry"><a href="#Sentry" class="headerlink" title="Sentry"></a>Sentry</h1><p>Sentry is a service that helps you monitor and fix crashes in realtime. The server is in Python, but it contains a full API for sending events from any language, in any application.</p>
<p>This article is about how to use Helm to install Sentry 9.x on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<hr>
<p>As of Nov 13, 2020, charts in this repo will no longer be updated. For more information, see the <a href="https://helm.sh/blog/charts-repo-deprecation/">Helm Charts Deprecation and Archive Notice</a>, and <a href="https://github.com/helm/charts#%EF%B8%8F-deprecation-and-archive-notice">Update</a>.</p>
<hr>
<p>You can use <a href="http://mirror.azure.cn/kubernetes/charts/">Azure Helm mirror - http://mirror.azure.cn/kubernetes/charts/</a> to replace <a href="https://kubernetes-charts.storage.googleapis.com/">https://kubernetes-charts.storage.googleapis.com</a></p>
<h2 id="How-to-Install"><a href="#How-to-Install" class="headerlink" title="How to Install"></a>How to Install</h2><p>Helm install sentry into sentry namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace sentry</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Stable Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add stable http://mirror.azure.cn/kubernetes/charts/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> (Deprecation) $ helm repo add stable https://kubernetes-charts.storage.googleapis.com</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install sentry stable/sentry -n sentry -f .values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about sentry</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace sentry</span></span><br><span class="line">NAME                           NAMESPACE                 REVISION    UPDATED                                    STATUS      CHART</span><br><span class="line">sentry                          sentry               1           2021-01-23 11:19:51.65893 +0800 +0800      deployed    sentry-v9.1.2                        v4.4.3</span><br></pre></td></tr></table></figure>

<p>See pods about sentry.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n sentry </span></span><br><span class="line">NAME                                     READY   STATUS              RESTARTS   AGE</span><br><span class="line">sentry-cron-6c46dd9547-nzxbq      1/1     Running             0          36m</span><br><span class="line">sentry-metrics-5ccd67487f-59j64   1/1     Running             0          36m</span><br><span class="line">sentry-sentry-postgresql-0        1/1     Running             0          36m</span><br><span class="line">sentry-sentry-redis-master-0      1/1     Running             0          36m</span><br><span class="line">sentry-sentry-redis-slave-0       1/1     Running             0          36m</span><br><span class="line">sentry-sentry-redis-slave-1       1/1     Running             0          15m</span><br><span class="line">sentry-web-5864cddf47-mmql9       1/1     Pending             0          36m</span><br><span class="line">sentry-worker-cf5967658-7zfs7     1/1     Running             0          11m</span><br><span class="line">sentry-worker-cf5967658-bmq9d     1/1     Running             0          11m</span><br></pre></td></tr></table></figure>

<h3 id="Custom-values-yaml"><a href="#Custom-values-yaml" class="headerlink" title="Custom .values.yaml"></a>Custom .values.yaml</h3><p>Remember to replace content within <code>&#123;&#123; &#125;&#125;</code> with your prefer value.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># charts/.Values.yaml at master · helm/charts</span></span><br><span class="line"><span class="comment"># https://github.com/helm/charts/blob/master/stable/sentry/.Values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Admin user to create</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="comment"># Indicated to create the admin user or not,</span></span><br><span class="line">  <span class="comment"># Default is true as the initial installation.</span></span><br><span class="line">  <span class="attr">create:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">email:</span> &#123;&#123; <span class="string">.Values.user.email</span> &#125;&#125;</span><br><span class="line">  <span class="attr">password:</span> &#123;&#123; <span class="string">.Values.user.password</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Name of the service and what port to expose on the pod</span></span><br><span class="line"><span class="comment"># Don&#x27;t change these unless you know what you&#x27;re doing</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure the location of Sentry artifacts</span></span><br><span class="line"><span class="attr">filestore:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">filesystem:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Enable persistence using Persistent Volume Claims</span></span><br><span class="line">    <span class="comment">## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">persistence:</span></span><br><span class="line">      <span class="comment"># enabled: true</span></span><br><span class="line">      <span class="comment"># database data Persistent Volume Storage Class</span></span><br><span class="line">      <span class="comment"># If defined, storageClassName: &lt;storageClass&gt;</span></span><br><span class="line">      <span class="comment"># If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</span></span><br><span class="line">      <span class="comment"># If undefined (the default) or set to null, no storageClassName spec is</span></span><br><span class="line">      <span class="comment">#   set, choosing the default provisioner.  (gp2 on AWS, standard on</span></span><br><span class="line">      <span class="comment">#   GKE, AWS &amp; OpenStack)</span></span><br><span class="line">      <span class="comment">#</span></span><br><span class="line">      <span class="attr">storageClass:</span> &#123;&#123; <span class="string">.Values.filestore.filesystem.persistence.storageClass</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Configure ingress resource that allow you to access the</span></span><br><span class="line"><span class="comment">## Sentry installation. Set up the URL</span></span><br><span class="line"><span class="comment">## ref: http://kubernetes.io/docs/user-guide/ingress/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">    <span class="comment"># kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">certmanager.k8s.io/acme-challenge-type:</span> <span class="string">http01</span></span><br><span class="line">    <span class="attr">certmanager.k8s.io/cluster-issuer:</span> &#123;&#123; <span class="string">.Values.clusterIssuer</span> &#125;&#125;</span><br><span class="line">    <span class="comment"># cert-manager.io/acme-challenge-type: dns01</span></span><br><span class="line">    <span class="comment"># cert-manager.io/cluster-issuer: cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">hostname:</span> &#123;&#123; <span class="string">.Values.ingress.hostname</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">secretName:</span> &#123;&#123; <span class="string">.Values.ingress.secretName</span> &#125;&#125;</span><br><span class="line">      <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> &#123;&#123; <span class="string">.Values.ingress.hostname</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">postgresql:</span></span><br><span class="line">  <span class="attr">password:</span> &#123;&#123; <span class="string">.Values.postgresql.password</span> &#125;&#125;</span><br><span class="line">  <span class="attr">postgresqlPassword:</span> &#123;&#123; <span class="string">.Values.postgresql.password</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">password:</span> &#123;&#123; <span class="string">.Values.redis.password</span> &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Prometheus Exporter / Metrics</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="Web-UI"><a href="#Web-UI" class="headerlink" title="Web UI"></a>Web UI</h2><p>Then, you can visit <code>https://&#123;&#123; .Values.ingress.hostname &#125;&#125;</code> to access Sentry Web UI.</p>
<h2 id="FAQS"><a href="#FAQS" class="headerlink" title="FAQS"></a>FAQS</h2><h3 id="502-Bad-Gateway"><a href="#502-Bad-Gateway" class="headerlink" title="502 Bad Gateway"></a>502 Bad Gateway</h3><p>Sentry may fail to initialize or upgrade database since it will take too long. You can do it yoursef.</p>
<p>First, enter into Pod sentry-web bash.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl <span class="built_in">exec</span> -n sentry `kubectl get pods -n sentry | grep sentry-web | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>` -it -- bash</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>sentry upgrade</code> within container to run all migrations and create an admin account.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sentry upgrade</span></span><br></pre></td></tr></table></figure>

<p>Finally, you can visit Web UI without any error.</p>
<h3 id="Update-PostgreSQL-database-password"><a href="#Update-PostgreSQL-database-password" class="headerlink" title="Update PostgreSQL database password"></a>Update PostgreSQL database password</h3><p>Sentry can’t update PostgreSQL database password automatic when you change password. You can do it yoursef too.</p>
<p>First, enter into Pod sentry-postgresql bash.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl <span class="built_in">exec</span> -n sentry `kubectl get pods -n sentry | grep sentry-postgresql | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>` -it -- bash</span></span><br></pre></td></tr></table></figure>

<p>Then, change database password within container.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Allow postgres login without password from <span class="built_in">local</span>.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sed -ibak <span class="string">&#x27;s/^\([^#]*\)md5/\1trust/g&#x27;</span> /opt/bitnami/postgresql/conf/pg_hba.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Relaod PostgreSQL configuration.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pg_ctl reload</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Show password</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="variable">$&#123;POSTGRES_PASSWORD&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Modify password. </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remember to replace &#123;&#123; POSTGRES_PASSWORD &#125;&#125; with your prefer password.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> psql -U postgres</span></span><br><span class="line">postgres=# alter user postgres with password &quot;&#123;&#123; POSTGRES_PASSWORD &#125;&#125;&quot;;</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/helm/charts/tree/master/stable/sentry">charts/stable/sentry at master · helm/charts - https://github.com/helm/charts/tree/master/stable/sentry</a></p>
<p>[2] <a href="http://mirror.azure.cn/kubernetes/charts/">Azure Helm mirror - http://mirror.azure.cn/kubernetes/charts/</a></p>
<p>[3] <a href="https://github.com/helm/charts/blob/master/stable/sentry/.Values.yaml">charts/.Values.yaml at master · helm/charts - https://github.com/helm/charts/blob/master/stable/sentry/.Values.yaml</a></p>
<p>[4] <a href="https://sentry.io/welcome/">Sentry | Error Tracking Software — JavaScript, Python, PHP, Ruby, more - https://sentry.io/welcome/</a></p>
<p>[5] <a href="https://github.com/getsentry/sentry">getsentry/sentry: Sentry is cross-platform application monitoring, with a focus on error reporting. - https://github.com/getsentry/sentry</a></p>
<p>[6] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[7] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
<p>[8] <a href="https://docs.bitnami.com/aws/infrastructure/postgresql/administration/change-reset-password/">Modify the default administrator password - https://docs.bitnami.com/aws/infrastructure/postgresql/administration/change-reset-password/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
        <category>Sentry</category>
        <category>Site Reliability Engineering (SRE)</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Site Reliability Engineering (SRE)</tag>
        <tag>Sentry</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install kube-prometheus stack with Grafana to collect logs within Kubernetes (K8S)</title>
    <url>/2020/10/31/Kubernetes-K8S/Helm/Helm-install-kube-prometheus-stack-with-Grafana-to-collect-logs-within-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="kube-prometheus-stack"><a href="#kube-prometheus-stack" class="headerlink" title="kube-prometheus stack"></a>kube-prometheus stack</h1><p>Installs the kube-prometheus stack, a collection of Kubernetes manifests, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.</p>
<p>This article is about how to use Helm to deploy kube-prometheus stack (Prometheus, Grafana) on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace the content within &lt; &gt; with your info.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># helm-charts/values.yaml at main · prometheus-community/helm-charts</span></span><br><span class="line"><span class="comment"># https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Configuration for alertmanager</span></span><br><span class="line"><span class="comment">## ref: https://prometheus.io/docs/alerting/alertmanager/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">alertmanager:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">cert-manager.io/acme-challenge-type:</span> <span class="string">dns01</span></span><br><span class="line">      <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress hostnames</span></span><br><span class="line">    <span class="comment">## Must be provided if Ingress is enabled</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Alertmanager</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress TLS configuration</span></span><br><span class="line">    <span class="comment">## Secrets must be manually created in the namespace</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">        <span class="attr">hosts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Alertmanager</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">grafana:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">adminPassword:</span> <span class="string">&lt;Your</span> <span class="string">Grafana</span> <span class="string">Password&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="comment">## If true, Kubernetes Dashboard Ingress will be created.</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">cert-manager.io/acme-challenge-type:</span> <span class="string">dns01</span></span><br><span class="line">      <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress hostnames</span></span><br><span class="line">    <span class="comment">## Must be provided if Ingress is enabled</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Grafana</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress TLS configuration</span></span><br><span class="line">    <span class="comment">## Secrets must be manually created in the namespace</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">        <span class="attr">hosts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Grafana</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Deploy a Prometheus instance</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">prometheus:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="comment">## If true, Kubernetes Dashboard Ingress will be created.</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">cert-manager.io/acme-challenge-type:</span> <span class="string">dns01</span></span><br><span class="line">      <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress hostnames</span></span><br><span class="line">    <span class="comment">## Must be provided if Ingress is enabled</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Prometheus</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Kubernetes Dashboard Ingress TLS configuration</span></span><br><span class="line">    <span class="comment">## Secrets must be manually created in the namespace</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">tls:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">        <span class="attr">hosts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">Prometheus</span> <span class="string">Host&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install kube-prometheus-stack into kube-prometheus-stack namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace kube-prometheus-stack</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add prometheus-community https://prometheus-community.github.io/helm-charts</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add stable https://charts.helm.sh/stable</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install kube-prometheus-stack prometheus-community/kube-prometheus-stack -n kube-prometheus-stack -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about kube-prometheus-stack.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace kube-prometheus-stack</span></span><br><span class="line">NAME                     NAMESPACE                REVISION    UPDATED                                   STATUS      CHART                           APP VERSION</span><br><span class="line">kube-prometheus-stack    kube-prometheus-stack    1           2020-10-31 17:22:26.958742 +0800 +0800    deployed    kube-prometheus-stack-10.3.1    0.42.1</span><br></pre></td></tr></table></figure>

<p>See pods about kube-prometheus-stack.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n kube-prometheus-stack</span></span><br><span class="line">NAME                                                        READY   STATUS              RESTARTS   AGE</span><br><span class="line">alertmanager-kube-prometheus-stack-alertmanager-0           2/2     Running             12         15d</span><br><span class="line">kube-prometheus-stack-grafana-7477779768-jgcm5              0/2     Completed           8          15d</span><br><span class="line">kube-prometheus-stack-kube-state-metrics-5cf575d8f8-kzdvk   0/1     Running             5          15d</span><br><span class="line">kube-prometheus-stack-operator-6b7fcccf89-ffb4q             2/2     Running             14         13d</span><br><span class="line">kube-prometheus-stack-prometheus-node-exporter-5jcjl        1/1     Running             6          15d</span><br><span class="line">prometheus-kube-prometheus-stack-prometheus-0               3/3     Running             10         4d</span><br></pre></td></tr></table></figure>

<p>Then, you can visit Grafana, Prometheus or Alertmanager:</p>
<ul>
<li><p>https://<Your Grafana Host></p>
</li>
<li><p>https://<Your Prometheus Host></p>
</li>
<li><p>https://<Your Alertmanager Host></p>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack">helm-charts/charts/kube-prometheus-stack at main · prometheus-community/helm-charts - https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack</a></p>
<p>[2] <a href="https://prometheus.io/">Prometheus - Monitoring system &amp; time series database - https://prometheus.io/</a></p>
<p>[3] <a href="https://grafana.com/">Grafana: The open observability platform | Grafana Labs - https://grafana.com/</a></p>
<p>[4] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[5] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Log Aggregation System</tag>
        <tag>Prometheus</tag>
        <tag>Grafana</tag>
        <tag>Metrics monitoring</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install kubernetes-dashboard for web-based UI for Kubernetes (K8S)</title>
    <url>/2020/10/03/Kubernetes-K8S/Helm/Helm-install-kubernetes-dashboard-for-web-based-UI-for-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="kubernetes-dashboard"><a href="#kubernetes-dashboard" class="headerlink" title="kubernetes-dashboard"></a>kubernetes-dashboard</h1><p>kubernetes-dashboard is a general purpose, web-based UI for Kubernetes clusters. It allows users to manage applications running in the cluster and troubleshoot them, as well as manage the cluster itself.</p>
<p>This article is about how to use Helm to deploy Longhorn on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>  Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
<p>  For more information about installing and using Kubernetes (K8s), see the <a href="https://kubernetes.io/docs/home/">Kubernetes (K8s) Docs</a>.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>  Helm is the best way to find, share, and use software built for Kubernetes.</p>
<p>  For more information about installing and using Helm, see the <a href="https://helm.sh/docs/">Helm Docs</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><p>Remember to replace the content within &lt; &gt; with your info.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dashboard/values.yaml at master · kubernetes/dashboard</span></span><br><span class="line"><span class="comment"># https://github.com/kubernetes/dashboard/blob/master/aio/deploy/helm-chart/kubernetes-dashboard/values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="comment">## If true, Kubernetes Dashboard Ingress will be created.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">kubernetes.io/tls-acme:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="attr">cert-manager.io/acme-challenge-type:</span> <span class="string">dns01</span></span><br><span class="line">    <span class="attr">cert-manager.io/cluster-issuer:</span> <span class="string">cert-manager-webhook-dnspod-cluster-issuer</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/backend-protocol: &quot;HTTPS&quot;</span></span><br><span class="line">    <span class="comment"># nginx.ingress.kubernetes.io/secure-backends: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Kubernetes Dashboard Ingress hostnames</span></span><br><span class="line">  <span class="comment">## Must be provided if Ingress is enabled</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">kubernetes-dashboard</span> <span class="string">Host&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Kubernetes Dashboard Ingress TLS configuration</span></span><br><span class="line">  <span class="comment">## Secrets must be manually created in the namespace</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">secretName:</span> <span class="string">cert-manager-webhook-dnspod-letsencrypt</span></span><br><span class="line">      <span class="attr">hosts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&lt;Your</span> <span class="string">kubernetes-dashboard</span> <span class="string">Host&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Helm"><a href="#Install-by-Helm" class="headerlink" title="Install by Helm"></a>Install by Helm</h3><p>Helm install kubernetes-dashboard into kubernetes-dashboard namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kubernetes-dashboard -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about kubernetes-dashboard.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace kubernetes-dashboard</span></span><br><span class="line">NAME                    NAMESPACE               REVISION    UPDATED                                   STATUS      CHART                         APP VERSION</span><br><span class="line">kubernetes-dashboard    kubernetes-dashboard    3           2020-10-03 20:48:11.915605 +0800 +0800    deployed    kubernetes-dashboard-2.7.1    2.0.4</span><br></pre></td></tr></table></figure>

<p>See pods about kubernetes-dashboard.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n kubernetes-dashboard</span></span><br><span class="line">NAME                                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">kubernetes-dashboard-5598bc4755-wc8kw   1/1     Running   6          14d</span><br></pre></td></tr></table></figure>

<p>Then, you can visit kubernetes-dashboard web-based UI with https://<Your kubernetes-dashboard Host></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/kubernetes/dashboard/tree/master/aio/deploy/helm-chart/kubernetes-dashboard">dashboard/aio/deploy/helm-chart/kubernetes-dashboard at master · kubernetes/dashboard · GitHub - https://github.com/kubernetes/dashboard/tree/master/aio/deploy/helm-chart/kubernetes-dashboard</a></p>
<p>[2] <a href="https://github.com/kubernetes/dashboard">kubernetes/dashboard: General-purpose web UI for Kubernetes clusters - https://github.com/kubernetes/dashboard</a></p>
<p>[3] <a href="https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard">kubernetes-dashboard 2.8.2 · helm/k8s-dashboard - https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard</a></p>
<p>[4] <a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md">dashboard/creating-sample-user.md at master · kubernetes/dashboard - https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md</a></p>
<p>[5] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[6] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>kubernetes-dashboard</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes (K8S)] Helm install helm-nfs-server-provisioner within Kubernetes (K8S)</title>
    <url>/2020/10/17/Kubernetes-K8S/Helm/Helm-install-nfs-server-provisioner-on-Kubernetes-K8S/</url>
    <content><![CDATA[<h1 id="helm-nfs-server-provisioner-example"><a href="#helm-nfs-server-provisioner-example" class="headerlink" title="helm-nfs-server-provisioner-example"></a>helm-nfs-server-provisioner-example</h1><h2 id="NFS-Server-Provisioner"><a href="#NFS-Server-Provisioner" class="headerlink" title="NFS Server Provisioner"></a>NFS Server Provisioner</h2><p>NFS Server Provisioner is an out-of-tree dynamic provisioner for Kubernetes. You can use it to quickly &amp; easily deploy shared storage that works almost anywhere throught Network File System (NFS).</p>
<p>This chart will deploy the Kubernetes nfs provisioner. This provisioner includes a built in NFS server, and is not intended for connecting to a pre-existing NFS server. If you have a pre-existing NFS Server, please consider using the <a href="https://github.com/helm/charts/tree/master/stable/nfs-client-provisioner">nfs-client-provisioner</a> instead.</p>
<p>This article is about how to use Helm to install nfs-server-provisioner on Kubernetes (K8S).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://kubernetes.io/">Kubernetes (K8S)</a><br>Kubernetes (K8s) is an open-source system for automating deployment, scaling, and management of containerized applications.</p>
</li>
<li><p><a href="https://helm.sh/">Helm</a><br>Helm is the best way to find, share, and use software built for Kubernetes.</p>
</li>
<li><p>NFS packages and rpcbind.service<br>A Network File System (NFS) allows remote hosts to mount file systems over a network and interact with those file systems as though they are mounted locally. </p>
<p>The rpcbind service uses TCP wrappers for access control, and access control rules for rpcbind affect all RPC-based services(Such as NFS). </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install NFS utils.</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install nfs-utils -y</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> start and <span class="built_in">enable</span> rpcbind.service</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start rpcbind &amp;&amp; sudo systemctl <span class="built_in">enable</span> rpcbind</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>Helm install nfs-server-provisioner into nfs-server-provisioner or your other namespace.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> crate namespace:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create namespace nfs-server-provisioner</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add the Stable Helm repository:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo add stable https://kubernetes-charts.storage.googleapis.com</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Update your <span class="built_in">local</span> Helm chart repository cache:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm repo update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> To install Helm chart:</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> helm install nfs-server-provisioner stable/nfs-server-provisioner --namespace nfs-server-provisioner -f values.yaml</span></span><br></pre></td></tr></table></figure>

<p>See Helm release about nfs-server-provisioner</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> helm list --namespace nfs-server-provisioner</span></span><br><span class="line">NAME                           NAMESPACE                 REVISION    UPDATED                                   STATUS      CHART                                APP VERSION</span><br><span class="line">nfs-server-provisioner         nfs-server-provisioner    1           2020-10-17 00:06:55.701473 +0800 +0800    deployed    nfs-server-provisioner-1.1.1         2.3.0</span><br></pre></td></tr></table></figure>

<p>See pods about nfs-server-provisioner.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods -n nfs-server-provisioner</span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">nfs-server-provisioner-0   1/1     Running   0          24h</span><br></pre></td></tr></table></figure>

<h3 id="Custom-Values-yaml"><a href="#Custom-Values-yaml" class="headerlink" title="Custom Values.yaml"></a>Custom Values.yaml</h3><h3 id="With-others-storage-class"><a href="#With-others-storage-class" class="headerlink" title="With others storage class."></a>With others storage class.</h3><p>On many clusters, the cloud provider integration will create a storage class which will create a volume (e.g. a Google Compute Engine Persistent Disk or Amazon EBS volume - gp) to provide persistence.</p>
<p>The following is a recommended configuration example when another storage class exists to provide persistence:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat values.yaml</span></span><br><span class="line"><span class="attr">persistence:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&quot;standard&quot;</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">200Gi</span></span><br><span class="line"><span class="attr">storageClass:</span></span><br><span class="line">  <span class="attr">defaultClass:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Without-others-storage-class"><a href="#Without-others-storage-class" class="headerlink" title="Without others storage class."></a>Without others storage class.</h3><p>The following is a recommended configration example for running on bare metal with a hostPath volume. Need to do:</p>
<ul>
<li>specify nodeSelector with Your Node Host Name or Label.</li>
<li>create a Persistence Volume manually.</li>
</ul>
<p>The following is a recommended configuration example when another storage class does not exist to provide persistence:</p>
<p>Edit <a href="./values.yaml">values.yaml</a> and replace content within &lt; and &gt;.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nfs-server-provisioner 1.1.1 · helm/helm-stable</span></span><br><span class="line"><span class="comment"># https://artifacthub.io/packages/helm/helm-stable/nfs-server-provisioner</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The following is a recommended configration example for running on bare metal or not exist the others StorageClass.</span></span><br><span class="line"><span class="attr">persistence:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="attr">storageClass:</span> <span class="string">&quot;-&quot;</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">200Gi</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storageClass:</span></span><br><span class="line">  <span class="attr">defaultClass:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nodeSelector:</span></span><br><span class="line">  <span class="comment"># Remember to replace &lt;Your Node Host Name or Label&gt;.</span></span><br><span class="line">  <span class="attr">kubernetes.io/hostname:</span> <span class="string">&lt;Your</span> <span class="string">Node</span> <span class="string">Host</span> <span class="string">Name</span> <span class="string">or</span> <span class="string">Label&gt;</span></span><br></pre></td></tr></table></figure>

<p>In this configuration, a PersistentVolume must be created for each replica to use. Installing the Helm chart, and then inspecting the PersistentVolumeClaim’s created will provide the necessary names for your PersistentVolume’s to bind to.</p>
<p>Otherwise Pod nfs-server-provisioner-0 will fail with error pod has unbound immediate PersistentVolumeClaims.</p>
<p>An example of the necessary PersistentVolume:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pv.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">data-nfs-server-provisioner-0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">20Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/srv/volumes/data-nfs-server-provisioner-0</span></span><br><span class="line">  <span class="attr">claimRef:</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">nfs-server-provisioner</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">data-nfs-server-provisioner-0</span></span><br></pre></td></tr></table></figure>

<p>Apply pv.yaml to creat a PersistentVolume.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f pv.yaml</span></span><br></pre></td></tr></table></figure>

<p>Then, check the PersistentVolume status.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pv data-nfs-server-provisioner-0 -o wide</span></span><br><span class="line">NAME                            CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                                  STORAGECLASS   REASON   AGE     VOLUMEMODE</span><br><span class="line">data-nfs-server-provisioner-0   200Gi      RWO            Retain           Bound    nfs-server-provisioner/data-nfs-server-provisioner-0                           7d23h   Filesystem</span><br></pre></td></tr></table></figure>

<h3 id="Dynamically-Provision-PersistentVolume"><a href="#Dynamically-Provision-PersistentVolume" class="headerlink" title="Dynamically Provision PersistentVolume"></a>Dynamically Provision PersistentVolume</h3><p>The following is a example about nfs-server-provisioner dynamically provision a PersistentVolume to the Deployment.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat nginx-deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1beta1</span> <span class="comment"># for versions before 1.8.0 use apps/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-pvc</span></span><br><span class="line">            <span class="attr">mountPath:</span> <span class="string">&quot;/usr/share/nginx/html&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-pvc</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">data-nfs-server-provisioner-0</span></span><br></pre></td></tr></table></figure>

<p>Apply nginx-deployment.yaml to create the Deployment.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl apply -f nginx-deploymentyaml</span></span><br></pre></td></tr></table></figure>

<p>Then, the Pod of the Deployment will mount a Volume from nfs-server-provisioner.</p>
<h4 id="rpcbind-service-not-start"><a href="#rpcbind-service-not-start" class="headerlink" title="rpcbind service not start"></a>rpcbind service not start</h4><p>if the nfs packages is not install or <code>rpcbind.service</code> is not started, the Pod can not mount pv with error(such as<br>Unable to attach or mount volumes: unmounted volumes=[storage], unattached volumes=[config storage nginx-deployment-token-fr5t7]: timed out waiting for the condition) .</p>
<p>You need to install nfs packages, then start and enable <code>rpcbind.service</code>. </p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://artifacthub.io/packages/helm/helm-stable/nfs-server-provisioner">nfs-server-provisioner 1.1.1 · helm/helm-stable - https://artifacthub.io/packages/helm/helm-stable/nfs-server-provisioner</a></p>
<p>[2] <a href="https://helm.sh/">Helm - https://helm.sh/</a></p>
<p>[3] <a href="https://kubernetes.io/">Kubernetes - https://kubernetes.io/</a></p>
<p>[4] <a href="https://github.com/helm/charts/tree/master/stable/nfs-client-provisioner">nfs-client-provisioner - https://github.com/helm/charts/tree/master/stable/nfs-client-provisioner</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Kubernetes (K8S)</category>
        <category>Helm</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Helm</tag>
        <tag>Network File System (NFS)</tag>
        <tag>nfs-server-provisioner</tag>
        <tag>nfs-client-provisioner</tag>
      </tags>
  </entry>
  <entry>
    <title>Go 1.16 is released</title>
    <url>/2021/02/17/Programming-Language/Golang/Go-1-16-is-released/</url>
    <content><![CDATA[<h1 id="Go-1-16"><a href="#Go-1-16" class="headerlink" title="Go 1.16"></a>Go 1.16</h1><p>Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.</p>
<p>The Go team is very happy to announce the release of Go 1.16 at 16 February 2021. You can get it from the download page <a href="https://golang.org/dl/">Downloads - The Go Programming Language - https://golang.org/dl/</a>.</p>
<a id="more"></a>

<p>Or upgrade.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> macOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew upgrade go</span></span><br></pre></td></tr></table></figure>

<h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><p>Here is the main feature within Go 1.16.</p>
<h3 id="embed-package"><a href="#embed-package" class="headerlink" title="embed package"></a>embed package</h3><p>The new embed package provides access to files embedded at compile time using the new //go:embed directive. Now it is easy to bundle supporting data files into your Go programs, making developing with Go even smoother. You can get started using the embed package documentation. Carl Johnson has also written a nice tutorial, “How to use Go embed”.</p>
<h3 id="macOS-ARM64-Apple-silicon-support"><a href="#macOS-ARM64-Apple-silicon-support" class="headerlink" title="macOS ARM64 (Apple silicon) support"></a>macOS ARM64 (Apple silicon) support</h3><p>Go 1.16 also adds macOS ARM64 support (also known as Apple silicon). Since Apple’s announcement of their new arm64 architecture, we have been working closely with them to ensure Go is fully supported; see our blog post “Go on ARM and Beyond” for more.</p>
<h3 id="Use-of-Go-modules-by-default"><a href="#Use-of-Go-modules-by-default" class="headerlink" title="Use of Go modules by default"></a>Use of Go modules by default</h3><p>Note that Go 1.16 requires use of Go modules by default, now that, according to our 2020 Go Developer Survey, 96% of Go developers have made the switch. We recently added official documentation for developing and publishing modules.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.golang.org/go1.16">Go 1.16 is released - The Go Blog - https://blog.golang.org/go1.16</a></p>
<p>[2] <a href="https://golang.org/doc/go1.16">Go 1.16 Release Notes - The Go Programming Language - https://golang.org/doc/go1.16</a></p>
<p>[3] <a href="https://golang.org/dl/">Downloads - The Go Programming Language - https://golang.org/dl/</a></p>
<p>[4] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Awesome Go</category>
      </categories>
      <tags>
        <tag>Programming language</tag>
        <tag>Golang (Go)</tag>
        <tag>//go:embed</tag>
        <tag>Go 1.16</tag>
        <tag>Awesome Go</tag>
      </tags>
  </entry>
  <entry>
    <title>Use //go:embed in Go 1.16</title>
    <url>/2021/02/17/Programming-Language/Golang/Use-go-embed-in-Go-1-16/</url>
    <content><![CDATA[<h1 id="go-embed"><a href="#go-embed" class="headerlink" title="//go:embed"></a>//go:embed</h1><p>Go 1.16 introduced a new <code>//go:embed</code> directive that allows you to include the contents of arbitrary files and directories in your Go application.</p>
<p>The basic idea of embedding is that by adding a special comment to your code, Go will know to include a file or files. The comment should look like <code>//go:embed FILENAME(S)</code> and be followed by a variable of the type you want to embed: <code>string</code> or <code>[]byte</code> for an individual file or <code>embed.FS</code> for a group of files. </p>
<p>The go:embed directive understands Go file globs, so patterns like files/<em>.html will also work (but not **/</em>.html recursive globbing).</p>
<p>You can read the official docs <a href="https://pkg.go.dev/embed">embed · pkg.go.dev - https://pkg.go.dev/embed</a> for a complete technical explanation, so here let’s take a look at some examples to see what’s possible.</p>
<a id="more"></a>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>A <code>//go:embed</code> directive above a variable declaration specifies which files to embed, using one or more path.Match patterns. </p>
<p>There are some rules or limits:</p>
<p>Like other directives, there can be no spaces between <code>//</code> and <code>go:embed</code>. (No error will be reported, but the instruction will be ignored by the compiler)</p>
<p>The directive must immediately precede a line containing the declaration of a single variable. Only blank lines and ‘//’ line comments are permitted between the directive and the declaration.</p>
<p>The type of the variable can only be <code>string</code>, <code>[]byte</code> or <code>embed.FS</code>, even the aliases of these three types will not work.</p>
<p>The patterns are interpreted relative to the package directory containing the source file. The path separator is a forward slash, even on Windows systems. </p>
<p>The <code>//go:embed</code> directive can be used with both exported and unexported variables, depending on whether the package wants to make the data available to other packages. It can only be used with global variables at package scope, not with local variables.</p>
<p>Patterns must not match files outside the package’s module, such as ‘.git/*’ or symbolic links. Matches for empty directories are ignored. After that, each pattern in a <code>//go:embed</code> line must match at least one file or non-empty directory.</p>
<p>If any patterns are invalid or have invalid matches, the build will fail.</p>
<h3 id="Embedding-one-file-into-a-string"><a href="#Embedding-one-file-into-a-string" class="headerlink" title="Embedding one file into a string:"></a>Embedding one file into a string:</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    _ <span class="string">&quot;embed&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed hello.txt</span></span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s is %s&quot;</span>, s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">s is s</span><br></pre></td></tr></table></figure>

<h3 id="Embedding-one-file-into-a-slice-of-bytes"><a href="#Embedding-one-file-into-a-slice-of-bytes" class="headerlink" title="Embedding one file into a slice of bytes"></a>Embedding one file into a slice of bytes</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    _ <span class="string">&quot;embed&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed hello.txt</span></span><br><span class="line"><span class="keyword">var</span> b []<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;b is %s&quot;</span>, b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">b is b</span><br></pre></td></tr></table></figure>

<h3 id="Embedded-one-or-more-files-into-a-file-system"><a href="#Embedded-one-or-more-files-into-a-file-system" class="headerlink" title="Embedded one or more files into a file system"></a>Embedded one or more files into a file system</h3><p>The FS type enables embedding a tree of files, such as a directory of static web server content, as in the example follow.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;embed&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed hello.txt</span></span><br><span class="line"><span class="keyword">var</span> f embed.FS</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;f is %s&quot;</span>, f)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">b is b</span><br></pre></td></tr></table></figure>

<p>The <code>//go:embed</code> directive accepts multiple space-separated patterns for brevity, but it can also be repeated, to avoid very long lines when there are many patterns. </p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// content holds our static web server content.</span></span><br><span class="line"><span class="comment">//go:embed image/* template/*</span></span><br><span class="line"><span class="comment">//go:embed html/index.html</span></span><br><span class="line"><span class="keyword">var</span> content embed.FS</span><br></pre></td></tr></table></figure>

<p>The variable in the above example is almost equivalent to:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// content is our static web server content.</span></span><br><span class="line"><span class="comment">//go:embed image template html/index.html</span></span><br><span class="line"><span class="keyword">var</span> content embed.FS</span><br></pre></td></tr></table></figure>

<p>Patterns may not contain ‘.’ or ‘..’ or empty path elements, nor may they begin or end with a slash. </p>
<p>To match everything in the current directory, use ‘*’ instead of ‘.’. To allow for naming files with spaces in their names, patterns can be written as Go double-quoted or back-quoted string literals.</p>
<p>For a directory, the directory will be the root, and all files and subdirectories will be embedded recursively.</p>
<h3 id="File-Systems"><a href="#File-Systems" class="headerlink" title="File Systems"></a>File Systems</h3><p>FS implements the io/fs package’s FS interface, so it can be used with any package that understands file systems, including net/http, text/template, and html/template.</p>
<p>For example, given the content variable in the example above, we can write:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;embed&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed static</span></span><br><span class="line"><span class="keyword">var</span> local embed.FS</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.Handle(<span class="string">&quot;/static/&quot;</span>, http.StripPrefix(<span class="string">&quot;/static/&quot;</span>, http.FileServer(http.FS(content))))</span><br><span class="line">    log.Fatal(http.ListenAndServe(<span class="string">&quot;:8989&quot;</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Or use with html/template.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">template.ParseFS(content, <span class="string">&quot;*.tmpl&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Gotchas"><a href="#Gotchas" class="headerlink" title="Gotchas"></a>Gotchas</h2><p>There are some gotchas with embedding to be aware of. </p>
<h3 id="Forget-to-import-the-embed-package"><a href="#Forget-to-import-the-embed-package" class="headerlink" title="Forget to import the embed package"></a>Forget to import the embed package</h3><p>First of all, you must import the embed package in any file that uses an embed directive. So a file like this won’t work:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// missing-embed.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:embed file.txt</span></span><br><span class="line"><span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Print(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>run missing-embed.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run missing-embed.go</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">command</span>-line-arguments</span></span><br><span class="line">./missing-embed.go:8:3: //go:embed only allowed in Go files that import &quot;embed&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Use-within-functions-or-methods"><a href="#Use-within-functions-or-methods" class="headerlink" title="Use within functions or methods"></a>Use within functions or methods</h3><p>Second, you can only use //go:embed for variables at the package level, not within functions or methods, so a program like this won’t compile:</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    _ <span class="string">&quot;embed&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//go:embed file.txt</span></span><br><span class="line">    <span class="keyword">var</span> s <span class="keyword">string</span></span><br><span class="line">    fmt.Print(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run bad-level.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run bad-level.go</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">command</span>-line-arguments</span></span><br><span class="line">./bad-level.go:9:4: go:embed cannot apply to var inside func</span><br></pre></td></tr></table></figure>

<h3 id="Ignore-some-files-by-default"><a href="#Ignore-some-files-by-default" class="headerlink" title="Ignore some files by default"></a>Ignore some files by default</h3><p>Third, when you include a directory, it won’t include files that start with . or _, but if you use a wildcard, like dir/*, it will include all files that match, even if they start with . or _. </p>
<p>Bear in mind that accidentally including Mac OS’s .DS_Store files may be a security problem in circumstances where you want to embed files in a webserver but not allow users to see a list of all the files. </p>
<p>For security reasons, Go also won’t follow symbolic links or go up a directory when embedding.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://pkg.go.dev/embed">embed · pkg.go.dev - https://pkg.go.dev/embed</a></p>
<p>[2] <a href="https://blog.carlmjohnson.net/post/2021/how-to-use-go-embed/">How to Use //go:embed · The Ethically-Trained Programmer - https://blog.carlmjohnson.net/post/2021/how-to-use-go-embed/</a></p>
<p>[3] <a href="https://blog.golang.org/go1.16">Go 1.16 is released - The Go Blog - https://blog.golang.org/go1.16</a></p>
<p>[4] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
<p>[5] <a href="https://polarisxu.studygolang.com/posts/go/dynamic/go-embed-try/">提前试用将在 Go1.16 中发布的内嵌静态资源功能 - https://polarisxu.studygolang.com/posts/go/dynamic/go-embed-try/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Exception Error Handling</category>
      </categories>
      <tags>
        <tag>Programming language</tag>
        <tag>Golang (Go)</tag>
        <tag>//go:embed</tag>
        <tag>Go 1.16</tag>
        <tag>Exception Error Handling</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Best practices about Rails Action Controller Overview</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Best-practices-about-Rails-Action-Controller-Overview/</url>
    <content><![CDATA[<h1 id="Best-practices-about-Rails-Action-Controller-Overview"><a href="#Best-practices-about-Rails-Action-Controller-Overview" class="headerlink" title="Best practices about Rails Action Controller Overview"></a>Best practices about Rails Action Controller Overview</h1><p>In this guide you will learn what is the best practices about controllers work and how they fit into the request cycle in your application.</p>
<a id="more"></a>

<h2 id="ActionDispatch-Request"><a href="#ActionDispatch-Request" class="headerlink" title="ActionDispatch::Request"></a>ActionDispatch::Request</h2><h3 id="Get-url-path-fullpath-from-request"><a href="#Get-url-path-fullpath-from-request" class="headerlink" title="Get url, path, fullpath from request."></a>Get url, path, fullpath from request.</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Full path with query string</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;  request.url</span></span><br><span class="line">=&gt; &quot;http://localhost:3000/ask-help.amp?hui=pizda&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Virtual path without query string</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;  request.path</span></span><br><span class="line">=&gt; &quot;/ask-help.amp&quot;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Virtual path with query string</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;  request.fullpath</span></span><br><span class="line">=&gt; &quot;/ask-help.amp?hui=pizda&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Pass-arrays-amp-objects-via-querystring"><a href="#Pass-arrays-amp-objects-via-querystring" class="headerlink" title="Pass arrays &amp; objects via querystring"></a>Pass arrays &amp; objects via querystring</h3><p>Rails has some great patterns for passing complex objects via querystring.</p>
<h4 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># QueryString: numbers[]=1&amp;numbers[]=2&amp;numbers[]=3</span></span><br><span class="line"><span class="comment"># rails</span></span><br><span class="line">params[<span class="symbol">:numbers</span>]</span><br><span class="line"><span class="comment"># Output: [1, 2, 3]</span></span><br></pre></td></tr></table></figure>

<h4 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># QueryString: user[id]=1&amp;user[name]=Nathan</span></span><br><span class="line"><span class="comment"># rails</span></span><br><span class="line">params[<span class="symbol">:user</span>]</span><br><span class="line"><span class="comment"># Output: </span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   id: 1, </span></span><br><span class="line"><span class="comment">#   name: &quot;Nathan&quot;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="Complex-Objects"><a href="#Complex-Objects" class="headerlink" title="Complex Objects"></a>Complex Objects</h4><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># QueryString: users[][id]=1&amp;users[][name]=Nathan&amp;users[][id]=2&amp;users[][name]=Emma</span></span><br><span class="line"><span class="comment"># rails</span></span><br><span class="line">params[<span class="symbol">:users</span>]</span><br><span class="line"><span class="comment"># Output:</span></span><br><span class="line"><span class="comment"># &#123; </span></span><br><span class="line"><span class="comment">#   users: [</span></span><br><span class="line"><span class="comment">#     &#123;</span></span><br><span class="line"><span class="comment">#       id: 1, </span></span><br><span class="line"><span class="comment">#       name: &quot;Nathan&quot;</span></span><br><span class="line"><span class="comment">#     &#125;, </span></span><br><span class="line"><span class="comment">#     &#123;</span></span><br><span class="line"><span class="comment">#       id: 2, </span></span><br><span class="line"><span class="comment">#       name: &quot;Emma&quot;</span></span><br><span class="line"><span class="comment">#     &#125;</span></span><br><span class="line"><span class="comment">#   ]</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="Try-It"><a href="#Try-It" class="headerlink" title="Try It"></a>Try It</h4><p>You can try all this out yourself from a Rails console.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rails c</span></span><br><span class="line">data = &#123; <span class="symbol">numbers:</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] &#125;</span><br><span class="line">CGI.unescape data.to_query</span><br><span class="line"><span class="comment"># Output: numbers[]=1&amp;numbers[]=2&amp;numbers[]=3</span></span><br></pre></td></tr></table></figure>

<p>See more to <a href="https://coderwall.com/p/uh8kiw/pass-arrays-objects-via-querystring-the-rack-rails-way">Pass arrays &amp; objects via querystring the Rack/Rails way (Example)</a></p>
<p>More to see <a href="https://edgeapi.rubyonrails.org/classes/ActionDispatch/Request.html">Ruby on Rails API - ActionDispatch::Request</a></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://guides.rubyonrails.org/action_controller_overview.html">Action Controller Overview — Ruby on Rails Guides - https://guides.rubyonrails.org/action_controller_overview.html</a></p>
<p>[2] <a href="https://medium.com/lightthefuse/rails-5-routes-cookbook-10-recipes-for-the-novice-rails-developer-and-beyond-9986f43064bc">Rails 5 Routing Cookbook: 10 recipes for the novice Rails developer and beyond | by Rui Freitas | Light the Fuse and Run | Medium- https://medium.com/lightthefuse/rails-5-routes-cookbook-10-recipes-for-the-novice-rails-developer-and-beyond-9986f43064bc</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Rails Action Controller</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Best practices about Rails Console</title>
    <url>/2020/05/30/Programming-Language/Ruby-on-Rails-RoR/Best-practices-about-Rails-Console/</url>
    <content><![CDATA[<h1 id="Best-practices-about-Rails-Console"><a href="#Best-practices-about-Rails-Console" class="headerlink" title="Best practices about Rails Console"></a>Best practices about Rails Console</h1><p>The <code>rails console</code> command lets you interact with your Rails application from the command line. On the underside, rails console uses IRB deault, so if you’ve ever used it, you’ll be right at home. This is useful for testing out quick ideas with code and changing data server-side without touching the website.</p>
<p>You can also use the alias “c” to invoke the console: <code>rails c</code>.</p>
<a id="more"></a>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><h3 id="Starting-Console"><a href="#Starting-Console" class="headerlink" title="Starting Console"></a>Starting Console</h3><p>Now, we can start rails console using the following command,</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ rails console</span><br><span class="line"></span><br><span class="line"><span class="comment"># or in shorthand </span></span><br><span class="line">$ rails c</span><br></pre></td></tr></table></figure>

<h3 id="Changing-Environment"><a href="#Changing-Environment" class="headerlink" title="Changing Environment"></a>Changing Environment</h3><p>By default when you run the rails console it fires up in development mode.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ rails c</span><br><span class="line">Running via Spring preloader <span class="keyword">in</span> process <span class="number">72785</span></span><br><span class="line">Loading development environment (Rails <span class="number">6.0</span>.<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>If you want to open Rails console in a specific environment, you can use <code>-e</code> option with the environment name.</p>
<p>For example, we want to open Rails console in production mode, Look below.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># production mode</span></span><br><span class="line">$ rails c -e production</span><br><span class="line">Running via Spring preloader <span class="keyword">in</span> process <span class="number">72924</span></span><br><span class="line">Loading production environment (Rails <span class="number">6.0</span>.<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>Loading production environment.</p>
<h3 id="Sandbox"><a href="#Sandbox" class="headerlink" title="Sandbox"></a>Sandbox</h3><p>Sandbox is a very good option for interacting rails application, especially in a production environment. It will roll back or revert all the changes we made in the database once we exit the console session.</p>
<p>If you wish to test out some code without changing any data, you can do that by invoking rails console –sandbox.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ rails c --sandbox</span><br><span class="line">Running via Spring preloader <span class="keyword">in</span> process <span class="number">79973</span></span><br><span class="line">Loading development environment <span class="keyword">in</span> sandbox (Rails <span class="number">6.0</span>.<span class="number">0</span>)</span><br><span class="line">Any modifications you make will be rolled back on exit</span><br><span class="line"><span class="meta">2.6.1 :001 &gt;</span> Product.destroy(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">Product Destroy (<span class="number">0</span>.<span class="number">7</span>ms)  DELETE FROM <span class="string">&quot;products&quot;</span> WHERE <span class="string">&quot;products&quot;</span>.<span class="string">&quot;id&quot;</span> = $1  [[<span class="string">&quot;id&quot;</span>, <span class="number">1</span>]]</span><br><span class="line"> </span><br><span class="line"><span class="meta">2.6.1 :002 &gt;</span> Product.find(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">ActiveRecord::RecordNotFound (Couldn<span class="string">&#x27;t find Product with &#x27;</span>id<span class="string">&#x27;=1)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&gt; exit</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">ROLLBACK</span></span><br></pre></td></tr></table></figure>

<p>For the above example, I have deleted a product, when you exit from console session all the database transactions are rollbacked. To start a new session and check it if the database transactions are actually rollbacked or not.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">$ rails c</span><br><span class="line">Running via Spring preloader <span class="keyword">in</span> process <span class="number">72785</span></span><br><span class="line">Loading development environment (Rails <span class="number">6.0</span>.<span class="number">0</span>)</span><br><span class="line"><span class="meta">2.6.1 :001 &gt;</span> </span><br><span class="line"><span class="meta">2.6.1 :001 &gt;</span> Product.find(<span class="number">1</span>)</span><br><span class="line">=&gt; #&lt;Product id: 1, name: &quot;Apple&quot;, ….&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Clearing-Console"><a href="#Clearing-Console" class="headerlink" title="Clearing Console"></a>Clearing Console</h3><p>Sometimes I loathe working at the bottom of the window or when having a huge output data above the space I am working. If you want to clear rails console you can use <code>ctrl + l</code> in a Linux environment or <code>command + k</code>  to clear in mac.</p>
<h3 id="Reloading-Console"><a href="#Reloading-Console" class="headerlink" title="Reloading Console"></a>Reloading Console</h3><p>Rails console is running default in the development environment, but it does not reload the new change. At the time of starting rails console, all the files are loaded and stored in a cache up to the end of Rails console. If you need new changes in rails console you can exit from the console and starting a new console session. But it is not a good idea when we frequently changing the code. Instead of this, we can use the following command to refresh new changes.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">2.6.1 :002 &gt;</span> reload!</span><br><span class="line">Reloading...</span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Tab-Autocomplete"><a href="#Tab-Autocomplete" class="headerlink" title="Tab Autocomplete"></a>Tab Autocomplete</h3><p>Rails console has default built-in autocomplete functionality. When start typing class name and press <code>TAB</code> once or two, it will autocomplete it or it will display the list of available options. It will work only for default Ruby and Rails built-in class.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ra with TAB</span></span><br><span class="line"><span class="meta">2.6.1 :001 &gt;</span> Ra</span><br><span class="line">Raabro                 Rack                   RailsSemanticLogger    RakeFileUtils          Range                  RangesIO               Rational               </span><br><span class="line">Racc                   Rails                  Rake                   Random                 RangeError             RangesIONonResizeable  Raven          </span><br><span class="line"></span><br><span class="line"><span class="comment"># Rail with TAB</span></span><br><span class="line"><span class="meta">2.6.1 :002 &gt;</span> Rails</span><br></pre></td></tr></table></figure>

<h3 id="Searching-Command-History"><a href="#Searching-Command-History" class="headerlink" title="Searching Command History"></a>Searching Command History</h3><p>Suppose we want to return the already used query or to modify the query and run, the console provides two options. </p>
<ol>
<li><p>We can use the up and down arrow, you should recall the previously used commands. Using up arrow &uarr; we can to go previously used code by using down arrow &darr; to go back.</p>
</li>
<li><p>suppose you have used a lot of queries in console, using up arrow to finding the query is taking more time. We can use Unix bash shell search command here. By using <code>Ctrl + r</code> we can search the previously used query in backward and return the first query matched on our search string.</p>
</li>
<li><p>in order to enable commands history on rails console or irb you can just add the following to your <code>~/.irbrc</code> file:</p>
</li>
</ol>
<p>Create, or edit your <code>~/.irbrc</code> file to include:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;irb/ext/save-history&#x27;</span></span><br><span class="line">IRB.conf[<span class="symbol">:SAVE_HISTORY</span>] = <span class="number">200</span></span><br><span class="line">IRB.conf[<span class="symbol">:HISTORY_FILE</span>] = <span class="string">&quot;<span class="subst">#&#123;ENV[<span class="string">&#x27;HOME&#x27;</span>]&#125;</span>/.irb-history&quot;</span></span><br><span class="line"></span><br><span class="line">IRB.conf[<span class="symbol">:SAVE_HISTORY</span>] = <span class="number">200</span></span><br><span class="line">IRB.conf[<span class="symbol">:HISTORY_FILE</span>] = <span class="string">&#x27;~/.irb-history&#x27;</span></span><br></pre></td></tr></table></figure>

<p>So if you close your rails console or irb the history is persisted. So next time just use the arrows UP &uarr; /DOWN &darr; to get your history back.</p>
<h3 id="Last-Expression"><a href="#Last-Expression" class="headerlink" title="Last Expression"></a>Last Expression</h3><p>Sometimes, having typed the query and press enter, it will return the result. Based on this result you can perform some operation. Let’s say, you forgot to assign the result in a variable. If this situation arises, just press the Up arrow and assign to variable and return it.</p>
<p>Rails console provides amazing functionality for this. It stores the last expression in <code>_</code>(underscore) variable. </p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">2.6.1 :001 &gt;</span> <span class="string">&#x27;Ruby On Rails&#x27;</span></span><br><span class="line"><span class="string">&quot;Ruby On Rails&quot;</span></span><br><span class="line"><span class="meta">2.6.1 :002 &gt;</span> <span class="number">_</span></span><br><span class="line"><span class="string">&quot;Ruby On Rails&quot;</span></span><br><span class="line"><span class="meta">2.6.1 :003 &gt;</span> str = <span class="number">_</span></span><br><span class="line"><span class="string">&quot;Ruby On Rails&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Extracting-frequent-statements-into-class-method"><a href="#Extracting-frequent-statements-into-class-method" class="headerlink" title="Extracting frequent statements into class method"></a>Extracting frequent statements into class method</h3><p>When you often need to execute multiple statements in the Rails Console to complete tasks, it is recommended to extract these statements into service or model class methods.</p>
<p>Then, call service or model class methods in the Rails Console.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://pragmaticstudio.com/tutorials/rails-console-shortcuts-tips-tricks">Rails Console Shortcuts, Tips, and Tricks - https://pragmaticstudio.com/tutorials/rails-console-shortcuts-tips-tricks</a></p>
<p>[2] <a href="https://www.agiratech.com/blog/rails-console-shortcuts-to-boost-productivity-ruby-on-rails-guide">10 Rails Console Tips &amp; Shortcuts To Boost The Productivity | ROR Guide - https://www.agiratech.com/blog/rails-console-shortcuts-to-boost-productivity-ruby-on-rails-guide</a></p>
<p>[3] <a href="https://guides.rubyonrails.org/command_line.html#rails-console">The Rails Command Line — Ruby on Rails Guides - https://guides.rubyonrails.org/command_line.html#rails-console</a></p>
<p>[4] <a href="https://til.hashrocket.com/posts/09139e5206-enable-commands-history-on-rails-console-and-irb">Enable commands history on rails console and irb - Today I Learned - https://til.hashrocket.com/posts/09139e5206-enable-commands-history-on-rails-console-and-irb</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Rails Console</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Difference between #==, #eql?, #equal?, #=== and #object_id in Ruby</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Difference-between-eql-equal-and-object-id-in-Ruby/</url>
    <content><![CDATA[<h1 id="eql-equal-and-object-id"><a href="#eql-equal-and-object-id" class="headerlink" title="#==, #eql?, #equal?, #=== and #object_id"></a>#==, #eql?, #equal?, #=== and #object_id</h1><p>Ruby provide few ways to check object value equality.</p>
<a id="more"></a>

<h2 id="Equality-operators-and"><a href="#Equality-operators-and" class="headerlink" title="Equality operators: == and !="></a>Equality operators: == and !=</h2><p>The == operator, also known as equality or double equal, will return true if both objects are equal and false if they are not.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">2.6.1 :017 &gt;</span> <span class="string">&quot;abc&quot;</span> == <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">2.6.1 :018 &gt;</span> <span class="string">&quot;abc&quot;</span> != <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="eql"><a href="#eql" class="headerlink" title="eql?"></a>eql?</h2><p>The <code>eql?</code> method returns true if obj and other refer to the same hash key. This is used by Hash to test members for equality. For objects of class Object, eql? is synonymous with ==. Subclasses normally continue this tradition by aliasing eql? to their overridden ==method, but there are exceptions. Numeric types, for example, perform type conversion across ==, but not across eql?, so:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="number">1.0</span>     <span class="comment">#=&gt; true</span></span><br><span class="line"><span class="number">1</span>.eql? <span class="number">1.0</span>   <span class="comment">#=&gt; false</span></span><br></pre></td></tr></table></figure>

<h2 id="equal"><a href="#equal" class="headerlink" title="equal?"></a>equal?</h2><p>Unlike the <code>==</code> operator which tests if both operands are equal, the <code>equal?</code> method checks if the two operands refer to the same object. This is the strictest form of equality in Ruby.</p>
<h2 id="Case-equality-operator"><a href="#Case-equality-operator" class="headerlink" title="Case equality operator: ==="></a>Case equality operator: ===</h2><p>Many of Ruby’s built-in classes, such as String, Range, and Regexp, provide their own implementations of the === operator, also known as case-equality, triple equals or threequals. Because it’s implemented differently in each class, it will behave differently depending on the type of object it was called on. Generally, it returns true if the object on the right “belongs to” or “is a member of” the object on the left. For instance, it can be used to test if an object is an instance of a class (or one of its subclasses)</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">String === <span class="string">&quot;zen&quot;</span>  <span class="comment"># Output: =&gt; true</span></span><br><span class="line">Range === (<span class="number">1</span>..<span class="number">2</span>)   <span class="comment"># Output: =&gt; true</span></span><br><span class="line">Array === [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]   <span class="comment"># Output: =&gt; true</span></span><br><span class="line">Integer === <span class="number">2</span>   <span class="comment"># Output: =&gt; true</span></span><br></pre></td></tr></table></figure>

<h2 id="object-id"><a href="#object-id" class="headerlink" title="object_id"></a>object_id</h2><p>Returns an integer identifier for obj.</p>
<p>The same number will be returned on all calls to object_id for a given object, and no two active objects will share an id.</p>
<p>Note: that some objects of builtin classes are reused for optimization. This is the case for immediate values and frozen string literals.</p>
<p>Immediate values are not passed by reference but are passed by value: nil, true, false, Fixnums, Symbols, and some Floats.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">Object.new.object_id  == Object.new.object_id  <span class="comment"># =&gt; false</span></span><br><span class="line">(<span class="number">21</span> * <span class="number">2</span>).object_id    == (<span class="number">21</span> * <span class="number">2</span>).object_id    <span class="comment"># =&gt; true</span></span><br><span class="line"><span class="string">&quot;hello&quot;</span>.object_id     == <span class="string">&quot;hello&quot;</span>.object_id     <span class="comment"># =&gt; false</span></span><br><span class="line"><span class="string">&quot;hi&quot;</span>.freeze.object_id == <span class="string">&quot;hi&quot;</span>.freeze.object_id <span class="comment"># =&gt; true</span></span><br></pre></td></tr></table></figure>

<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>I’d roughly summarize my approach to these methods like this:</p>
<ul>
<li><p>If just comparing the content is eqaul or not, use <code>eql?</code></p>
</li>
<li><p>If compare the same object, use <code>equal?</code> or <code>object_id</code></p>
</li>
</ul>
<p>See more exapmple:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># &quot;&quot; VS &quot;&quot;</span></span><br><span class="line"><span class="meta">2.6.1 :017 &gt;</span> <span class="string">&quot;&quot;</span> == <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :018 &gt;</span> <span class="string">&quot;&quot;</span> === <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :019 &gt;</span> <span class="string">&quot;&quot;</span>.eql? <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :020 &gt;</span> <span class="string">&quot;&quot;</span>.equal? <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 VS 1</span></span><br><span class="line"><span class="meta">2.6.1 :025 &gt;</span> <span class="number">1</span> == <span class="number">1</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :027 &gt;</span> <span class="number">1</span> === <span class="number">1</span> </span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :028 &gt;</span> <span class="number">1</span>.eql? <span class="number">1</span> </span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :029 &gt;</span> <span class="number">1</span>.equal? <span class="number">1</span> </span><br><span class="line"><span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.0 VS 1</span></span><br><span class="line"><span class="meta">2.6.1 :021 &gt;</span> <span class="number">1.0</span> == <span class="number">1</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :022 &gt;</span> <span class="number">1.0</span> === <span class="number">1</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="meta">2.6.1 :023 &gt;</span> <span class="number">1.0</span>.eql? <span class="number">1</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"><span class="meta">2.6.1 :024 &gt;</span> <span class="number">1.0</span>.equal? <span class="number">1</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;&quot;.object_id</span></span><br><span class="line"><span class="meta">2.6.1 :033 &gt;</span> <span class="string">&quot;&quot;</span>.object_id</span><br><span class="line"><span class="number">70281556450900</span></span><br><span class="line"><span class="meta">2.6.1 :034 &gt;</span> <span class="string">&quot;&quot;</span>.object_id</span><br><span class="line"><span class="number">70281556445200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.object_id</span></span><br><span class="line"><span class="meta">2.6.1 :035 &gt;</span> <span class="number">1</span>.object_id</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">2.6.1 :036 &gt;</span> <span class="number">1</span>.object_id</span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.0.object_id</span></span><br><span class="line"><span class="meta">2.6.1 :040 &gt;</span> <span class="number">1.0</span>.object_id</span><br><span class="line">-<span class="number">36028797018963966</span></span><br><span class="line"><span class="meta">2.6.1 :041 &gt;</span> <span class="number">1.0</span>.object_id</span><br><span class="line">-<span class="number">36028797018963966</span></span><br><span class="line"><span class="meta">2.6.1 :042 &gt;</span> <span class="number">1.00</span>.object_id</span><br><span class="line">-<span class="number">36028797018963966</span></span><br><span class="line"><span class="meta">2.6.1 :043 &gt;</span> <span class="number">1.000</span>.object_id</span><br><span class="line">-<span class="number">36028797018963966</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.001.object_id</span></span><br><span class="line"><span class="meta">2.6.1 :044 &gt;</span> <span class="number">1.001</span>.object_id</span><br><span class="line">-<span class="number">35992768221945006</span></span><br><span class="line"><span class="meta">2.6.1 :045 &gt;</span> <span class="number">1.001</span>.object_id</span><br><span class="line">-<span class="number">35992768221945006</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># :a.object_id, symbol#object_id always be same</span></span><br><span class="line"><span class="meta">2.6.1 :038 &gt;</span> <span class="symbol">:a</span>.object_id</span><br><span class="line"><span class="number">765468</span></span><br><span class="line"><span class="meta">2.6.1 :039 &gt;</span> <span class="symbol">:a</span>.object_id</span><br><span class="line"><span class="number">765468</span></span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://medium.com/@khalidh64/difference-between-eql-equal-in-ruby-2ffa7f073532">Difference Between ==, eql?, equal? in ruby | by Khalidh Sd | Medium - https://medium.com/@khalidh64/difference-between-eql-equal-in-ruby-2ffa7f073532</a></p>
<p>[2] <a href="https://batsov.com/articles/2011/11/28/ruby-tip-number-1-demystifying-the-difference-between-equals-equals-and-eql/">Ruby Tip #1: Demystifying the Difference Between == and eql? · (think) - https://batsov.com/articles/2011/11/28/ruby-tip-number-1-demystifying-the-difference-between-equals-equals-and-eql/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>==</tag>
        <tag>eql?</tag>
        <tag>equals?</tag>
        <tag>===</tag>
        <tag>object_id</tag>
        <tag>Equality</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Differences Between #nil?, #empty?, #blank?, and #present? in Ruby on Rails</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Differences-Between-nil-empty-blank-and-present-in-Ruby-on-Rails/</url>
    <content><![CDATA[<h1 id="nil-empty-blank-and-present"><a href="#nil-empty-blank-and-present" class="headerlink" title="#nil?, #empty?, #blank?, and #present?"></a>#nil?, #empty?, #blank?, and #present?</h1><p>Ruby and Rails have several methods that can be used to check for the existence of a value or the state of an object. Ruby provides <code>#nil?</code> and <code>#empty?</code>, and Rails’ ActiveSupport adds <code>#blank?</code> and <code>#present?</code>. All these work in their own way and it’s important to know how each evaluates data as using the wrong method in your code might cause unexpected results.</p>
<p>In this article, we’ll refresh your knowledge on these methods. We’ll (re)learn what conditions pass or fail when each is used as well as the type of objects each method can be used on. We’ll even throw in a handy cheat sheet at the end!</p>
<a id="more"></a>

<h2 id="nil"><a href="#nil" class="headerlink" title="#nil?"></a>#nil?</h2><p><code>#nil?</code> is a Ruby method on the Object class. Since all classes inherit from this class, <code>#nil?</code> can be used on any object. It returns true for nil (an instance of the class NilClass) and false for everything else.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="literal">nil</span>.<span class="literal">nil</span>?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="literal">true</span>.<span class="literal">nil</span>?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.<span class="literal">nil</span>?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span>.<span class="literal">nil</span>?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">[].<span class="literal">nil</span>?</span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<h2 id="empty"><a href="#empty" class="headerlink" title="#empty?"></a>#empty?</h2><p><code>#empty?</code> is a method that can be used on strings, arrays, hashes and sets. It returns true if the instance of the object has a length of zero.</p>
<p>When used on strings, it returns true for empty strings.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.empty?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>Note that whitespace characters are characters and so using <code>#empty?</code> on a string containing only whitespace will return false. Because of this, it might not be the best method to use when validating text. If you are only using this method to validate user input, for instance, you might end up processing input that only contains whitespace.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot; &quot;</span>.empty?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\t\n&quot;</span>.empty?</span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<p>For arrays, hashes and sets, it returns true if they have no elements.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">[].empty?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&#123;&#125;.empty?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;set&#x27;</span></span><br><span class="line">Set.new.empty?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>When <code>#empty?</code> is used on nil or any other class that doesn’t have the method, a NoMethodError exception will be raised. So to use it in checking your data, you have to put in place more checks to ensure your program never crashes.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> !my_var.<span class="literal">nil</span>? &amp;&amp; !my_var.empty?</span><br><span class="line"><span class="comment"># or if my_var&amp;.empty?</span></span><br><span class="line">  <span class="comment"># make use of my_var</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>A better method to use would be the Rails <code>#blank?</code> method, which we’ll now look at.</p>
<h2 id="blank"><a href="#blank" class="headerlink" title="#blank?"></a>#blank?</h2><p><code>#blank?</code> is a Rails method (in ActiveSupport). It operates on any object.</p>
<p>For strings, it will return true for empty strings as well as strings containing only whitespace characters.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; &quot;</span>.blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\n\t&quot;</span>.blank?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>For arrays, hashes and sets, it works just like <code>#empty?</code>, in that it returns true if they have no elements.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">[].blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&#123;&#125;.blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">Set.new.blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">[<span class="literal">nil</span>].blank?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">[<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>].blank?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">person = &#123;<span class="symbol">:firstName</span> =&gt; <span class="string">&quot;John&quot;</span>, <span class="symbol">:lastName</span> =&gt; <span class="string">&quot;Doe&quot;</span>&#125;</span><br><span class="line">person.blank?</span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<p>It returns false for true and true for any falsey conditions (i.e. nil and false).</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span>.blank?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span>.blank?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="literal">nil</span>.blank?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>As you can see, it is better to use <code>#blank?</code> rather than <code>#empty?</code> in validating data as it won’t cause NoMethodErrors when used on some objects since it is available for all objects. It also won’t pass for strings that only contain whitespace.</p>
<h2 id="present"><a href="#present" class="headerlink" title="#present?"></a>#present?</h2><p><code>#present?</code> is also a Rails method. It does the opposite of what #blank? does.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">!my_var.blank? == my_var.present?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>Here are some examples:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; &quot;</span>.present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">[].present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="literal">nil</span>.present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line"><span class="literal">true</span>.present?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span>.present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">&#123;&#125;.present?</span><br><span class="line">=&gt; false</span><br><span class="line"></span><br><span class="line">person = &#123;<span class="symbol">:firstName</span> =&gt; <span class="string">&quot;John&quot;</span>, <span class="symbol">:lastName</span> =&gt; <span class="string">&quot;Doe&quot;</span>&#125;</span><br><span class="line">person.present?</span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.present?</span><br><span class="line">=&gt; true</span><br></pre></td></tr></table></figure>

<p>This is also a better method for validation than <code>#empty?</code> for the same reasons we covered for <code>#blank?</code>.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>I’d roughly summarize my approach to these methods like this:</p>
<ul>
<li><p>As much as possible to use <code>blank?</code> or <code>present?</code> to check semantics <code>empty</code> or <code>not empty</code>.</p>
</li>
<li><p>Rarely use <code>nil?</code> or <code>empty?</code>.</p>
</li>
</ul>
<p>Since the naming of these methods tends to confuse, here’s a handy cheat sheet for you to bookmark.</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">#nil?</th>
<th align="center">#empty?</th>
<th align="center">#blank?</th>
<th align="center">#present?</th>
</tr>
</thead>
<tbody><tr>
<td align="center">5</td>
<td align="center">false</td>
<td align="center">NoMethodError</td>
<td align="center">false</td>
<td align="center">true</td>
</tr>
<tr>
<td align="center">“”</td>
<td align="center">false</td>
<td align="center">true</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">“</td>
<td align="center">“</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">true</td>
</tr>
<tr>
<td align="center">“\t\n”</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">false</td>
<td align="center">true</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">[“a”]</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">true</td>
</tr>
<tr>
<td align="center">{}</td>
<td align="center">false</td>
<td align="center">true</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">{a: “b”}</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">true</td>
</tr>
<tr>
<td align="center">Set.new</td>
<td align="center">false</td>
<td align="center">true</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">nil</td>
<td align="center">true</td>
<td align="center">NoMethodError</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
<tr>
<td align="center">true</td>
<td align="center">false</td>
<td align="center">NoMethodError</td>
<td align="center">false</td>
<td align="center">true</td>
</tr>
<tr>
<td align="center">false</td>
<td align="center">false</td>
<td align="center">NoMethodError</td>
<td align="center">true</td>
<td align="center">false</td>
</tr>
</tbody></table>
<p>As with everything, the choice between <code>#nil?</code>, <code>#empty?</code>, <code>#blank?</code> and <code>#present?</code> depends on the situation. For checking if a user has a name to address them with, <code>#present?</code> could be a good fit, for example. However <code>#blank?</code> and <code>#present</code> return a boolean for all objects, which might hide bugs in the code by not raising an error when a value is of the wrong type.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.appsignal.com/2018/09/11/differences-between-nil-empty-blank-and-present.html">Differences Between #nil?, #empty?, #blank?, and #present? | AppSignal Blog - https://blog.appsignal.com/2018/09/11/differences-between-nil-empty-blank-and-present.html</a></p>
<p>[2] <a href="https://mgleon08.github.io/blog/2015/12/16/ruby-on-rail-nil-empty-blank-present/">.nil? .empty? .blank? .present? 傻傻分不清楚？ - Leon’s Blogging - https://mgleon08.github.io/blog/2015/12/16/ruby-on-rail-nil-empty-blank-present/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>nil?</tag>
        <tag>empty?</tag>
        <tag>blank?</tag>
        <tag>present?</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Joins vs Preload vs Includes vs Eager load in Rails ActiveRecord</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Joins-vs-Preload-vs-Includes-vs-Eager-load-in-Rails-ActiveRecord/</url>
    <content><![CDATA[<h1 id="Joins-vs-Preload-vs-Includes-vs-Eager-load"><a href="#Joins-vs-Preload-vs-Includes-vs-Eager-load" class="headerlink" title="Joins vs Preload vs Includes vs Eager load"></a>Joins vs Preload vs Includes vs Eager load</h1><p>Rails ActiveRecord provide few ways to load associated data and before moving forward. </p>
<p>let’s consider one scenario as below, there is a User table that has a one-to-many association with the Post table.</p>
<a id="more"></a>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/models/user.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ApplicationRecord</span></span><br><span class="line">  has_many <span class="symbol">:posts</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/models/user.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> &lt; ApplicationRecord</span></span><br><span class="line">  belongs_to <span class="symbol">:user</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>With the scenario been set, let’s begin with our discussion.</p>
<h2 id="Joins"><a href="#Joins" class="headerlink" title="Joins"></a>Joins</h2><p>The Joins works perfectly fine for comparing and filtering data using associated data.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.joins(<span class="symbol">:posts</span>).where(<span class="string">&quot;posts.published = ?&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span> INNER JOIN <span class="string">&quot;posts&quot;</span> ON <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> = <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;ture&quot;</span></span><br></pre></td></tr></table></figure>

<p>The query will load all users with posts having published attribute value as true and we can do so only because of the magic of joins.</p>
<h3 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h3><ul>
<li>It uses <code>INNER JOIN</code> query to load associated data, as a result, associated data does not get impacted.</li>
</ul>
<p>ex. If the first user has a total of 12 posts(include 4 posts which published is true).</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">=&gt; users = User.joins(<span class="symbol">:posts</span>).where(“posts.published = ?”, true)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span> INNER JOIN <span class="string">&quot;posts&quot;</span> ON <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> = <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> AND <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">=&gt; users.first.posts.length <span class="comment"># it will ouptput 12, but not 4. Because it will load posts with another query statement.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;posts&quot;</span>.* FROM <span class="string">&quot;posts&quot;</span> WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h3><ul>
<li>It does not solve the (n+1) issue all alone, since it does not store associated data for future use. (Note: It can be solved by using joins+preload ex. </li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.joins(<span class="symbol">:posts</span>).where(“posts.published = ?”, <span class="literal">true</span>).preload(posts))</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span> INNER JOIN <span class="string">&quot;posts&quot;</span> ON <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> = <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> AND <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;ture&quot;</span></span><br><span class="line">SELECT <span class="string">&quot;posts&quot;</span>.* FROM <span class="string">&quot;posts&quot;</span> WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>By default, it loads data with two separate queries for loading user data and its associated post data.</p>
</li>
<li><p>It may give a duplicate record in a few cases. Solution over it is using select with it.<br>ex. Let’s consider that the total users are 4,</p>
</li>
</ul>
<p>To see it let’s create some sample data.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">setup</span></span></span><br><span class="line">  User.delete_all</span><br><span class="line">  Post.delete_all</span><br><span class="line"></span><br><span class="line">  u = User.create <span class="symbol">name:</span> <span class="string">&#x27;Neeraj&#x27;</span></span><br><span class="line">  u.posts.create! <span class="symbol">title:</span> <span class="string">&#x27;ruby&#x27;</span>, <span class="symbol">desc:</span> <span class="string">&#x27;ruby is awesome&#x27;</span></span><br><span class="line">  u.posts.create! <span class="symbol">title:</span> <span class="string">&#x27;rails&#x27;</span>, <span class="symbol">desc:</span> <span class="string">&#x27;rails is awesome&#x27;</span></span><br><span class="line">  u.posts.create! <span class="symbol">title:</span> <span class="string">&#x27;JavaScript&#x27;</span>, <span class="symbol">desc:</span> <span class="string">&#x27;JavaScript is awesome&#x27;</span></span><br><span class="line"></span><br><span class="line">  u = User.create <span class="symbol">name:</span> <span class="string">&#x27;Neil&#x27;</span></span><br><span class="line">  u.posts.create! <span class="symbol">title:</span> <span class="string">&#x27;JavaScript&#x27;</span>, <span class="symbol">desc:</span> <span class="string">&#x27;Javascript is awesome&#x27;</span></span><br><span class="line"></span><br><span class="line">  u = User.create <span class="symbol">name:</span> <span class="string">&#x27;Trisha&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>With the above sample data if we execute <code>User.joins(:posts)</code> then this is the result we get:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&lt;User id: 9, name: &quot;Neeraj&quot;&gt;</span></span><br><span class="line"><span class="comment">#&lt;User id: 9, name: &quot;Neeraj&quot;&gt;</span></span><br><span class="line"><span class="comment">#&lt;User id: 9, name: &quot;Neeraj&quot;&gt;</span></span><br><span class="line"><span class="comment">#&lt;User id: 10, name: &quot;Neil&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>We can avoid the duplication by using distinct .</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">User.joins(<span class="symbol">:posts</span>).distinct</span><br><span class="line"><span class="comment"># Or User.joins(:posts).select(&#x27;distinct users.*&#x27;).to_a</span></span><br></pre></td></tr></table></figure>

<p>then that is the result we get:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment">#&lt;User id: 9, name: &quot;Neeraj&quot;&gt;</span></span><br><span class="line"><span class="comment">#&lt;User id: 10, name: &quot;Neil&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<p>Extra : Joins with select example as below,</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">user = User.joins(<span class="symbol">:posts</span>).select(“users.id, posts.name as post_name, posts.published as published”).where(<span class="symbol">id:</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>It will give output of ActiveRecord array with post name, user id and post published for user with id as 1, so we can have all associated post name as user.map(&amp;:post_name)</p>
<hr>
<h2 id="Preload"><a href="#Preload" class="headerlink" title="Preload"></a>Preload</h2><p>The Preload works perfectly fine for loading associated data.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.preload(<span class="symbol">:posts</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span></span><br><span class="line">SELECT <span class="string">&quot;posts&quot;</span>.* FROM <span class="string">&quot;posts&quot;</span>  WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> IN (<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>The query will load and store all users with associated posts data.</p>
<h3 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros"></a>Pros</h3><p>It stores the associated data, as a result, it solves the (n+1) issue</p>
<h3 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons"></a>Cons</h3><ul>
<li>It by default loads data with two separate query for loading data and its associated posts data.</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">User.preload(<span class="symbol">:posts</span>).where(<span class="string">&quot;users.name=&#x27;Neeraj&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span>  WHERE (users.name=<span class="string">&#x27;Neeraj&#x27;</span>)</span><br><span class="line">SELECT <span class="string">&quot;posts&quot;</span>.* FROM <span class="string">&quot;posts&quot;</span>  WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> IN (<span class="number">3</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>It can not be used for comparing and filtering for associated data, such as where can not be used for associated data filtering in preload.</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">User.preload(<span class="symbol">:posts</span>).where(<span class="string">&quot;posts.desc=&#x27;ruby is awesome&#x27;&quot;</span>) <span class="comment"># It will throw an error.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SQLite3::<span class="symbol">SQLException:</span> no such <span class="symbol">column:</span> posts.<span class="symbol">desc:</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span>  WHERE (posts.desc=<span class="string">&#x27;ruby is awesome&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Includes"><a href="#Includes" class="headerlink" title="Includes"></a>Includes</h2><p>The Includes works perfectly fine for loading, comparing and filtering data with associated data.</p>
<p>By default Includes loads the association data in a separate query just like preload.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.includes(<span class="symbol">:posts</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT  <span class="string">&quot;users&quot;</span>.* FROM <span class="string">&quot;users&quot;</span></span><br><span class="line">SELECT <span class="string">&quot;posts&quot;</span>.* FROM <span class="string">&quot;posts&quot;</span> WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> IN (<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure>

<p>However it is smarter than preload. Whenever a WHERE clause is added with association, it switches from using two separate queries to single <code>LEFT OUTER JOIN</code> query to fetch the data and applies the supplied condition.</p>
<p>So includes changes from two queries to a single query in some cases. </p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.includes(<span class="symbol">:posts</span>).where(<span class="string">&quot;posts.published = ?&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> AS t0_r<span class="number">0</span>, <span class="string">&quot;users&quot;</span>.<span class="string">&quot;name&quot;</span> AS t0_r1, <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;id&quot;</span> AS t1_r<span class="number">0</span>,</span><br><span class="line">       <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;title&quot;</span> AS t1_r1,</span><br><span class="line">       <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> AS t1_r2, <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;desc&quot;</span> AS t1_r3</span><br><span class="line">FROM <span class="string">&quot;users&quot;</span> LEFT OUTER JOIN <span class="string">&quot;posts&quot;</span> ON <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> = <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> </span><br><span class="line">WHERE <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>The query will load all users with posts having published attribute value as true.</p>
<h3 id="Pros-2"><a href="#Pros-2" class="headerlink" title="Pros"></a>Pros</h3><ul>
<li><p>It uses <code>OUTER LEFT JOIN</code> query to load associated data.</p>
</li>
<li><p>It solves the (n+1) issue all alone, since it stores associated data for future use.</p>
</li>
<li><p>It is smart enough to load associated data with either single query for simple cases or with two separate query for other cases. In case, for some reason if query for includes needs to force into single query, then it can be performed with includes+references.<br>ex. </p>
</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">User.includes(<span class="symbol">:posts</span>).references(<span class="symbol">:posts</span>)</span><br></pre></td></tr></table></figure>

<h3 id="Cons-2"><a href="#Cons-2" class="headerlink" title="Cons"></a>Cons</h3><ul>
<li>It uses <code>OUTER LEFT JOIN</code> query to load associated data, as a result, associated data gets impacted.<br>ex. Let’s consider if the first user has a total of 12 posts,</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">=&gt; users = User.includes(<span class="symbol">:posts</span>).where(“posts.published = ?”, true)</span><br><span class="line"></span><br><span class="line">=&gt; users.first.posts.length <span class="comment"># it may ouptput less than 12 as ex.4</span></span><br></pre></td></tr></table></figure>

<h2 id="Eager-load"><a href="#Eager-load" class="headerlink" title="Eager load"></a>Eager load</h2><p>The Eager load works perfectly fine for loading, comparing and filtering data using associated data.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">users = User.eager_load(<span class="symbol">:posts</span>).where(<span class="string">&quot;posts.published = ?&quot;</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt;</span></span><br><span class="line">SELECT <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> AS t0_r<span class="number">0</span>, <span class="string">&quot;users&quot;</span>.<span class="string">&quot;name&quot;</span> AS t0_r1, <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;id&quot;</span> AS t1_r<span class="number">0</span>,</span><br><span class="line">       <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;title&quot;</span> AS t1_r1, <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> AS t1_r2, <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;desc&quot;</span> AS t1_r3</span><br><span class="line">FROM <span class="string">&quot;users&quot;</span> LEFT OUTER JOIN <span class="string">&quot;posts&quot;</span> ON <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;user_id&quot;</span> = <span class="string">&quot;users&quot;</span>.<span class="string">&quot;id&quot;</span> WHERE </span><br><span class="line">       <span class="string">&quot;posts&quot;</span>.<span class="string">&quot;published&quot;</span> = <span class="string">&quot;true&quot;</span></span><br></pre></td></tr></table></figure>

<p>The query will load all users with posts having published attribute value as true.</p>
<h3 id="Pros-3"><a href="#Pros-3" class="headerlink" title="Pros"></a>Pros</h3><ul>
<li><p>It uses <code>OUTER LEFT JOIN</code> query to load associated data.</p>
</li>
<li><p>It solves the (n+1) issue all alone, since it stores associated data for future use.</p>
</li>
<li><p>By default, it loads data with a single query for users and its associated post data.</p>
</li>
</ul>
<h3 id="Cons-3"><a href="#Cons-3" class="headerlink" title="Cons"></a>Cons</h3><ul>
<li>It uses <code>OUTER LEFT JOIN</code> query to load associated data, as a result, associated data gets impacted.<br>ex. If the first user has a total of 12 posts(include 4 posts which published is true).</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">=&gt; users = User.eager_load(<span class="symbol">:posts</span>).where(“posts.published = ?”, true)</span><br><span class="line"></span><br><span class="line">=&gt; users.first.posts.length <span class="comment"># it may ouptput less than 12 as ex.4</span></span><br></pre></td></tr></table></figure>

<hr>
<p>Extra: Since eager_load force data to load with a single query to load user and its associated post data, it takes comparatively more time to load a query than to load two separate query in most of the cases. So it depends more on the use-case to use joins/preload/includes/eager_load while loading/comparing/filtering associated data.</p>
<hr>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>I’d roughly summarize my approach to these methods like this:</p>
<ul>
<li><p>If just filtering, not accessing relationships, use joins.</p>
</li>
<li><p>If accessing relationships, start with eager_load.</p>
</li>
<li><p>If eager_load is slow using single query, will use includes to try two separate queries and compare performance.</p>
</li>
</ul>
<p>Hopefully this is enough to prevent some of the more basic performance deadends when using joins, includes, preload, and eager_load.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://scoutapm.com/blog/activerecord-includes-vs-joins-vs-preload-vs-eager_load-when-and-where">Making sense of ActiveRecord joins, includes, preload, and eager_load | Scout APM Blog - https://scoutapm.com/blog/activerecord-includes-vs-joins-vs-preload-vs-eager_load-when-and-where</a></p>
<p>[2] <a href="https://medium.com/@tadhao/joins-vs-preload-vs-includes-vs-eager-load-in-rails-5f721c44b3a9">Joins vs Preload vs Includes vs Eager load in Rails | by Tushar Adhao | Medium - https://medium.com/@tadhao/joins-vs-preload-vs-includes-vs-eager-load-in-rails-5f721c44b3a9</a></p>
<p>[3] <a href="https://bigbinary.com/blog/preload-vs-eager-load-vs-joins-vs-includes">Preload, Eagerload, Includes and Joins | BigBinary Blog - https://bigbinary.com/blog/preload-vs-eager-load-vs-joins-vs-includes</a></p>
<p>[4] <a href="https://blazarblogs.wordpress.com/2019/08/09/joins-vs-includes-vs-preload-vs-eagerload/">Joins vs Includes vs Preload vs Eagerload - https://blazarblogs.wordpress.com/2019/08/09/joins-vs-includes-vs-preload-vs-eagerload/</a></p>
<p>[5] <a href="https://guides.rubyonrails.org/active_record_querying.html">Active Record Query Interface — Ruby on Rails Guides - https://guides.rubyonrails.org/active_record_querying.html</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>joins</tag>
        <tag>preload</tag>
        <tag>includes</tag>
        <tag>eager_load</tag>
        <tag>Rails ActiveRecord</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Rails Naming Conventions and Magic Column names</title>
    <url>/2020/06/06/Programming-Language/Ruby-on-Rails-RoR/Rails-Naming-Conventions-and-Magic-Column-names/</url>
    <content><![CDATA[<h2 id="Naming-Conventions"><a href="#Naming-Conventions" class="headerlink" title="Naming Conventions"></a>Naming Conventions</h2><p>By default, Active Record uses some naming conventions to find out how the mapping between models and database tables should be created. Rails will pluralize your class names to find the respective database table. So, for a class Book, you should have a database table called books. The Rails pluralization mechanisms are very powerful, being capable of pluralizing (and singularizing) both regular and irregular words. When using class names composed of two or more words, the model class name should follow the Ruby conventions, using the CamelCase form, while the table name must contain the words separated by underscores. Examples:</p>
<ul>
<li><p>Model Class - Singular with the first letter of each word capitalized (e.g., BookClub).</p>
</li>
<li><p>Database Table - Plural with underscores separating words (e.g., book_clubs).</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>Model / Class</th>
<th>Table / Schema</th>
</tr>
</thead>
<tbody><tr>
<td>Article</td>
<td>articles</td>
</tr>
<tr>
<td>LineItem</td>
<td>line_items</td>
</tr>
<tr>
<td>Deer</td>
<td>deers</td>
</tr>
<tr>
<td>Mouse</td>
<td>mice</td>
</tr>
<tr>
<td>Person</td>
<td>people</td>
</tr>
</tbody></table>
<h3 id="Schema-Conventions"><a href="#Schema-Conventions" class="headerlink" title="Schema Conventions"></a>Schema Conventions</h3><p>Active Record uses naming conventions for the columns in database tables, depending on the purpose of these columns.</p>
<ul>
<li><p>Foreign keys - These fields should be named following the pattern singularized_table_name_id (e.g., item_id, order_id). These are the fields that Active Record will look for when you create associations between your models.</p>
</li>
<li><p>Primary keys - By default, Active Record will use an integer column named id as the table’s primary key (bigint for PostgreSQL and MySQL, integer for SQLite). When using Active Record Migrations to create your tables, this column will be automatically created.</p>
</li>
</ul>
<p>There are also some optional column names that will add additional features to Active Record instances:</p>
<ul>
<li><p>created_at - Automatically gets set to the current date and time when the record is first created.</p>
</li>
<li><p>updated_at - Automatically gets set to the current date and time whenever the record is created or updated.</p>
</li>
<li><p>lock_version - Adds optimistic locking to a model.</p>
</li>
<li><p>type - Specifies that the model uses Single Table Inheritance.</p>
</li>
<li><p>(association_name)_type - Stores the type for polymorphic associations.</p>
</li>
<li><p>(table_name)_count - Used to cache the number of belonging objects on associations. For example, a comments_count column in an Article class that has many instances of Comment will cache the number of existent comments for each article.</p>
</li>
</ul>
<p>There are also some optional column names that will add additional features to Active Record instances by other gems:</p>
<ul>
<li><p>position - Represents the position of the record in a list. Use by <code>acts_as_list</code> gem.</p>
</li>
<li><p>parent_id - Represents the parent id of the record. Use by <code>closure_tree</code> gem.</p>
</li>
<li><p>deleted_at - Automatically set to the current date and time whenever the record is deleted. Use by <code>acts_as_paranoid</code> gem.</p>
</li>
</ul>
<p>There are also some optional tables names that will add additional features to Active Record by other gems:</p>
<ul>
<li>versions - Automatically insert to the an version record whenever the traget record is created, updated, or deleted. Use by <code>papertrail</code> gem.</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://edgeguides.rubyonrails.org/active_record_basics.html#schema-conventions">Active Record Basics — Ruby on Rails Guides - https://edgeguides.rubyonrails.org/active_record_basics.html#schema-conventions</a></p>
<p>[2] <a href="https://gist.github.com/iangreenleaf/b206d09c587e8fc6399e">Rails naming conventions - https://gist.github.com/iangreenleaf/b206d09c587e8fc6399e</a></p>
<p>[3] <a href="https://github.com/brendon/acts_as_list">brendon/acts_as_list: An ActiveRecord plugin for managing lists. - https://github.com/brendon/acts_as_list</a></p>
<p>[4] <a href="https://github.com/ActsAsParanoid/acts_as_paranoid">ActsAsParanoid/acts_as_paranoid: ActiveRecord plugin allowing you to hide and restore records without actually deleting them. - https://github.com/ActsAsParanoid/acts_as_paranoid</a></p>
<p>[5] <a href="https://github.com/paper-trail-gem/paper_trail">paper-trail-gem/paper_trail: Track changes to your rails models - https://github.com/paper-trail-gem/paper_trail</a></p>
<p>[6] <a href="https://github.com/ClosureTree/closure_tree">ClosureTree/closure_tree: Easily and efficiently make your ActiveRecord models support hierarchies - https://github.com/ClosureTree/closure_tree</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Naming Conventions</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Speed Up Your Rails App RESTful API by cache</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Speed-Up-Your-Rails-App-RESTful-API-by-cache/</url>
    <content><![CDATA[<h1 id="Rails-Cache"><a href="#Rails-Cache" class="headerlink" title="Rails Cache"></a>Rails Cache</h1><p>Caching means to store content generated during the request-response cycle and to reuse it when responding to similar requests.</p>
<p>Caching is often the most effective way to boost an application’s performance. Through caching, web sites running on a single server with a single database can sustain a load of thousands of concurrent users.</p>
<p>Rails provides a set of caching features out of the box. This guide will teach you the scope and purpose of each one of them. Master these techniques and your Rails applications can serve millions of views without exorbitant response times or server bills.</p>
<a id="more"></a>

<h2 id="Enable-caching"><a href="#Enable-caching" class="headerlink" title="Enable caching"></a>Enable caching</h2><p>By default, caching is only enabled in your production environment. To play around with caching locally you’ll want to enable caching in your local environment by setting config.action_controller.perform_caching to true in the relevant config/environments/*.rb file:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">config.action_controller.perform_caching = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<hr>
<p>Changing the value of config.action_controller.perform_caching will only have an effect on the caching provided by the Action Controller component. For instance, it will not impact low-level caching, that we address below.</p>
<hr>
<h2 id="Fragment-caching"><a href="#Fragment-caching" class="headerlink" title="Fragment caching"></a>Fragment caching</h2><p>Fragment caching is supported within <a href="https://github.com/rails/jbuilder">rails/jbuilder: Jbuilder: generate JSON objects with a Builder-style DSL - https://github.com/rails/jbuilder</a>, it uses Rails.cache and works like caching in HTML templates:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache! [<span class="string">&#x27;v1&#x27;</span>, @person], <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span></span><br><span class="line">  json.extract! @person, <span class="symbol">:name</span>, <span class="symbol">:age</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>You can also conditionally cache a block by using cache_if! like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache_if! !admin?, [<span class="string">&#x27;v1&#x27;</span>, @person], <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span></span><br><span class="line">  json.extract! @person, <span class="symbol">:name</span>, <span class="symbol">:age</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>If you are rendering fragments for a collection of objects, have a look at <a href="https://github.com/yonahforst/jbuilder_cache_multi">yonahforst/jbuilder_cache_multi - https://github.com/yonahforst/jbuilder_cache_multi</a> gem. It uses fetch_multi (&gt;= Rails 4.1) to fetch multiple keys at once.</p>
<p>Renders the given block for each item in the collection. Accepts optional ‘key’ attribute in options (e.g. key: ‘v1’).</p>
<p>Note: At the moment, does not accept the partial name as an argument (#todo)</p>
<p>Examples:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or with optional key</span></span><br><span class="line"></span><br><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes, <span class="symbol">key:</span> <span class="string">&#x27;v1&#x27;</span> <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or with a proc as a key </span></span><br><span class="line"></span><br><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes, <span class="symbol">key:</span> proc &#123;<span class="params">|person|</span> person.last_posted_at &#125; <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Last thing: If you are using a collection for the cache key, may I recommend the ‘scope_cache_key’ gem? (check out my fork for a Rails 4 version: <a href="https://github.com/joshblour/scope_cache_key">https://github.com/joshblour/scope_cache_key</a>). It very quickly calculates a hash for all items in the collection (MD5 hash of updated_at + IDs).</p>
<p>You can also conditionally cache a block by using cache_collection_if! like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache_collection_if! do_cache?, @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="Low-Level-Caching"><a href="#Low-Level-Caching" class="headerlink" title="Low-Level Caching"></a>Low-Level Caching</h2><p>Sometimes you need to cache a particular value or query result instead of caching json or view fragments. Rails’ caching mechanism works great for storing any kind of information.</p>
<p>The most efficient way to implement low-level caching is using the Rails.cache.fetch method. This method does both reading and writing to the cache. When passed only a single argument, the key is fetched and value from the cache is returned. If a block is passed, that block will be executed in the event of a cache miss. The return value of the block will be written to the cache under the given cache key, and that return value will be returned. In case of cache hit, the cached value will be returned without executing the block.</p>
<p>Consider the following example. An application has a Product model with an instance method that looks up the product’s price on a competing website. The data returned by this method would be perfect for low-level caching:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/models/product.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> &lt; ApplicationRecord</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">competing_price</span></span></span><br><span class="line">    Rails.cache.fetch(<span class="string">&quot;<span class="subst">#&#123;cache_key_with_version&#125;</span>/competing_price&quot;</span>, <span class="symbol">expires_in:</span> <span class="number">12</span>.hours) <span class="keyword">do</span></span><br><span class="line">      Competitor::API.find_price(id)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="SQL-Caching"><a href="#SQL-Caching" class="headerlink" title="SQL Caching"></a>SQL Caching</h2><p>Query caching is a Rails feature that caches the result set returned by each query. If Rails encounters the same query again for that request, it will use the cached result set as opposed to running the query against the database again.</p>
<p>For example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/controllers/product_controller.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductsController</span> &lt; ApplicationController</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">    <span class="comment"># Run a find query</span></span><br><span class="line">    @products = Product.all</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Run the same query again</span></span><br><span class="line">    @products = Product.all</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>The second time the same query is run against the database, it’s not actually going to hit the database. The first time the result is returned from the query it is stored in the query cache (in memory) and the second time it’s pulled from memory.</p>
<p>However, it’s important to note that query caches are created at the start of an action and destroyed at the end of that action and thus persist only for the duration of the action. If you’d like to store query results in a more persistent fashion, you can with low level caching.</p>
<h2 id="Cache-Stores"><a href="#Cache-Stores" class="headerlink" title="Cache Stores"></a>Cache Stores</h2><p>Rails provides different stores for the cached data (apart from SQL and page caching).</p>
<ul>
<li><p>ActiveSupport::Cache::MemoryStore</p>
</li>
<li><p>ActiveSupport::Cache::FileStore</p>
</li>
<li><p>ActiveSupport::Cache::MemCacheStore</p>
</li>
<li><p>ActiveSupport::Cache::RedisCacheStore</p>
</li>
<li><p>ActiveSupport::Cache::NullStore</p>
</li>
<li><p>Or Custom ActiveSupport::Cache</p>
</li>
</ul>
<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>You can set up your application’s default cache store by setting the config.cache_store configuration option. Other parameters can be passed as arguments to the cache store’s constructor:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/environment.rb or config/environments/*.rb</span></span><br><span class="line"></span><br><span class="line">config.cache_store = <span class="symbol">:memory_store</span>, &#123; <span class="symbol">size:</span> <span class="number">64</span>.megabytes &#125;</span><br></pre></td></tr></table></figure>

<p>Alternatively, you can call ActionController::Base.cache_store outside of a configuration block.</p>
<h3 id="ActiveSupport-Cache-Store"><a href="#ActiveSupport-Cache-Store" class="headerlink" title="ActiveSupport::Cache::Store"></a>ActiveSupport::Cache::Store</h3><p>This class provides the foundation for interacting with the cache in Rails. This is an abstract class and you cannot use it on its own. Rather you must use a concrete implementation of the class tied to a storage engine. Rails ships with several implementations documented below.</p>
<p>The main methods to call are read, write, delete, exist?, and fetch. The fetch method takes a block and will either return an existing value from the cache, or evaluate the block and write the result to the cache if no value exists.</p>
<p>There are some common options that can be used by all cache implementations. These can be passed to the constructor or the various methods to interact with entries.</p>
<ul>
<li><p>:namespace - This option can be used to create a namespace within the cache store. It is especially useful if your application shares a cache with other applications.</p>
</li>
<li><p>:compress - Enabled by default. Compresses cache entries so more data can be stored in the same memory footprint, leading to fewer cache evictions and higher hit rates.</p>
</li>
<li><p>:compress_threshold - Defaults to 1kB. Cache entries larger than this threshold, specified in bytes, are compressed.</p>
</li>
<li><p>:expires_in - This option sets an expiration time in seconds for the cache entry, if the cache store supports it, when it will be automatically removed from the cache.</p>
</li>
<li><p>:race_condition_ttl - This option is used in conjunction with the :expires_in option. It will prevent race conditions when cache entries expire by preventing multiple processes from simultaneously regenerating the same entry (also known as the dog pile effect). This option sets the number of seconds that an expired entry can be reused while a new value is being regenerated. It’s a good practice to set this value if you use the :expires_in option.</p>
</li>
</ul>
<h4 id="Connection-Pool-Options"><a href="#Connection-Pool-Options" class="headerlink" title="Connection Pool Options"></a>Connection Pool Options</h4><p>By default the MemCacheStore and RedisCacheStore use a single connection per process. This means that if you’re using Puma, or another threaded server, you can have multiple threads waiting for the connection to become available. To increase the number of available connections you can enable connection pooling.</p>
<p>First, add the connection_pool gem to your Gemfile:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;connection_pool&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Next, pass the :pool_size and/or :pool_timeout options when configuring the cache store:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">config.cache_store = <span class="symbol">:mem_cache_store</span>, <span class="string">&quot;cache.example.com&quot;</span>, &#123; <span class="symbol">pool_size:</span> <span class="number">5</span>, <span class="symbol">pool_timeout:</span> <span class="number">5</span> &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>:pool_size - This option sets the number of connections per process (defaults to 5).</p>
</li>
<li><p>:pool_timeout - This option sets the number of seconds to wait for a connection (defaults to 5). If no connection is available within the timeout, a Timeout::Error will be raised.</p>
</li>
</ul>
<h4 id="Custom-Cache-Stores"><a href="#Custom-Cache-Stores" class="headerlink" title="Custom Cache Stores"></a>Custom Cache Stores</h4><p>You can create your own custom cache store by simply extending ActiveSupport::Cache::Store and implementing the appropriate methods. This way, you can swap in any number of caching technologies into your Rails application.</p>
<p>To use a custom cache store, simply set the cache store to a new instance of your custom class.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">config.cache_store = MyCacheStore.new</span><br></pre></td></tr></table></figure>

<h3 id="ActiveSupport-Cache-RedisCacheStore"><a href="#ActiveSupport-Cache-RedisCacheStore" class="headerlink" title="ActiveSupport::Cache::RedisCacheStore"></a>ActiveSupport::Cache::RedisCacheStore</h3><p>The Redis cache store takes advantage of Redis support for automatic eviction when it reaches max memory, allowing it to behave much like a Memcached cache server.</p>
<hr>
<p>Deployment note: Redis doesn’t expire keys by default, so take care to use a dedicated Redis cache server. Don’t fill up your persistent-Redis server with volatile cache data! Read the Redis cache server setup guide in detail.</p>
<hr>
<p>For a cache-only Redis server, set maxmemory-policy to one of the variants of allkeys. Redis 4+ supports least-frequently-used eviction (allkeys-lfu), an excellent default choice. Redis 3 and earlier should use least-recently-used eviction (allkeys-lru).</p>
<p>Set cache read and write timeouts relatively low. Regenerating a cached value is often faster than waiting more than a second to retrieve it. Both read and write timeouts default to 1 second, but may be set lower if your network is consistently low-latency.</p>
<p>By default, the cache store will not attempt to reconnect to Redis if the connection fails during a request. If you experience frequent disconnects you may wish to enable reconnect attempts.</p>
<p>Cache reads and writes never raise exceptions; they just return nil instead, behaving as if there was nothing in the cache. To gauge whether your cache is hitting exceptions, you may provide an error_handler to report to an exception gathering service. It must accept three keyword arguments: method, the cache store method that was originally called; returning, the value that was returned to the user, typically nil; and exception, the exception that was rescued.</p>
<p>To get started, add the redis gem to your Gemfile:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;redis&#x27;</span></span><br></pre></td></tr></table></figure>

<p>You can enable support for the faster hiredis connection library by additionally adding its ruby wrapper to your Gemfile:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;hiredis&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Redis cache store will automatically require &amp; use hiredis if available. No further configuration is needed.</p>
<p>Finally, add the configuration in the config/environment.rb or relevant config/environments/*.rb file:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">config.cache_store = <span class="symbol">:redis_cache_store</span>, &#123; <span class="symbol">url:</span> ENV[<span class="string">&#x27;REDIS_URL&#x27;</span>] &#125;</span><br></pre></td></tr></table></figure>

<p>A more complex, production Redis cache store may look something like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/environment.rb or config/environments/*.rb</span></span><br><span class="line"></span><br><span class="line">cache_servers = <span class="string">%w(redis://cache-01:6379/0 redis://cache-02:6379/0)</span></span><br><span class="line">config.cache_store = <span class="symbol">:redis_cache_store</span>, &#123; <span class="symbol">url:</span> cache_servers,</span><br><span class="line"></span><br><span class="line">  <span class="symbol">connect_timeout:</span>    <span class="number">30</span>,  <span class="comment"># Defaults to 20 seconds</span></span><br><span class="line">  <span class="symbol">read_timeout:</span>       <span class="number">0</span>.<span class="number">2</span>, <span class="comment"># Defaults to 1 second</span></span><br><span class="line">  <span class="symbol">write_timeout:</span>      <span class="number">0</span>.<span class="number">2</span>, <span class="comment"># Defaults to 1 second</span></span><br><span class="line">  <span class="symbol">reconnect_attempts:</span> <span class="number">1</span>,   <span class="comment"># Defaults to 0</span></span><br><span class="line"></span><br><span class="line">  <span class="symbol">error_handler:</span> -&gt; (<span class="symbol">method:</span>, <span class="symbol">returning:</span>, <span class="symbol">exception:</span>) &#123;</span><br><span class="line">    <span class="comment"># Report errors to Sentry as warnings</span></span><br><span class="line">    Raven.capture_exception exception, <span class="symbol">level:</span> <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">      <span class="symbol">tags:</span> &#123; <span class="symbol">method:</span> method, <span class="symbol">returning:</span> returning &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ActiveSupport-Cache-NullStore"><a href="#ActiveSupport-Cache-NullStore" class="headerlink" title="ActiveSupport::Cache::NullStore"></a>ActiveSupport::Cache::NullStore</h3><p>This cache store implementation is meant to be used only in development or test environments and it never stores anything. This can be very useful in development when you have code that interacts directly with Rails.cache but caching may interfere with being able to see the results of code changes. With this cache store, all fetch and read operations will result in a miss.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">config.cache_store = <span class="symbol">:null_store</span></span><br></pre></td></tr></table></figure>

<h2 id="Cache-Keys"><a href="#Cache-Keys" class="headerlink" title="Cache Keys"></a>Cache Keys</h2><p>The keys used in a cache can be any object that responds to either cache_key or to_param. You can implement the cache_key method on your classes if you need to generate custom keys. Active Record will generate keys based on the class name and record id.</p>
<p>You can use Hashes and Arrays of values as cache keys.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This is a legal cache key</span></span><br><span class="line">Rails.cache.read(<span class="symbol">site:</span> <span class="string">&quot;mysite&quot;</span>, <span class="symbol">owners:</span> [owner_1, owner_2])</span><br></pre></td></tr></table></figure>

<hr>
<p>The keys you use on Rails.cache will not be the same as those actually used with the storage engine. They may be modified with a namespace or altered to fit technology backend constraints. This means, for instance, that you can’t save values with Rails.cache and then try to pull them out with the dalli gem. However, you also don’t need to worry about exceeding the memcached size limit or violating syntax rules.</p>
<hr>
<p>See <a href="https://guides.rubyonrails.org/caching_with_rails.html">Caching with Rails: An Overview — Ruby on Rails Guides - https://guides.rubyonrails.org/caching_with_rails.html</a> to learn more about Rails caching.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://guides.rubyonrails.org/caching_with_rails.html">Caching with Rails: An Overview — Ruby on Rails Guides - https://guides.rubyonrails.org/caching_with_rails.html</a></p>
<p>[2] <a href="https://scotch.io/tutorials/how-to-improve-website-performance-with-caching-in-rails">How to Improve Website Performance With Caching in Rails ― Scotch.io - https://scotch.io/tutorials/how-to-improve-website-performance-with-caching-in-rails</a></p>
<p>[3] <a href="https://github.com/rails/jbuilder">rails/jbuilder: Jbuilder: generate JSON objects with a Builder-style DSL - https://github.com/rails/jbuilder</a></p>
<p>[4] <a href="https://github.com/yonahforst/jbuilder_cache_multi">yonahforst/jbuilder_cache_multi - https://github.com/yonahforst/jbuilder_cache_multi</a></p>
<p>[5] <a href="https://github.com/yonahforst/scope_cache_key">yonahforst/scope_cache_key: Add cache_key functionality to ActiveRecord scopes - https://github.com/yonahforst/scope_cache_key - https://github.com/yonahforst/scope_cache_key</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Cache</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] The Ruby on Rails (RoR) Style Guide</title>
    <url>/2020/05/30/Programming-Language/Ruby-on-Rails-RoR/The-Ruby-on-Rails-RoR-Style-Guide/</url>
    <content><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><blockquote>
<p>Role models are important.</p>
<p> — Officer Alex J. Murphy / RoboCop</p>
</blockquote>
<p>The goal of this guide is to present a set of best practices and style prescriptions for Ruby on Rails 4 development. It’s a complementary guide to the already existing community-driven Ruby coding style guide.</p>
<p>This Rails style guide recommends best practices so that real-world Rails programmers can write code that can be maintained by other real-world Rails programmers. A style guide that reflects real-world usage gets used, and a style guide that holds to an ideal that has been rejected by the people it is supposed to help risks not getting used at all - no matter how good it is.</p>
<p>The guide is separated into several sections of related rules. I’ve tried to add the rationale behind the rules (if it’s omitted I’ve assumed it’s pretty obvious).</p>
<a id="more"></a>

<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://rails.rubystyle.guide/">The Rails Style Guide - https://rails.rubystyle.guide/</a></p>
<p>[2] <a href="https://github.com/rubocop-hq/rubocop-rails">rubocop-hq/rubocop-rails: A RuboCop extension focused on enforcing Rails best practices and coding conventions. - https://github.com/rubocop-hq/rubocop-rails</a></p>
<p>[3] <a href="https://github.com/rubocop-hq/rails-style-guide">rubocop-hq/rails-style-guide: A community-driven Ruby on Rails style guide - https://github.com/rubocop-hq/rails-style-guide</a></p>
<p>[4] <a href="https://github.com/rubocop-hq/ruby-style-guide">rubocop-hq/ruby-style-guide: A community-driven Ruby coding style guide - https://github.com/rubocop-hq/ruby-style-guide</a></p>
<p>[5] <a href="https://docs.gitlab.com/ee/development/contributing/style_guides.html">Style guides | GitLab - https://docs.gitlab.com/ee/development/contributing/style_guides.html</a></p>
<p>[6] <a href="https://shopify.github.io/ruby-style-guide/">Ruby Style Guide - https://shopify.github.io/ruby-style-guide/</a></p>
<p>[7] <a href="https://github.com/airbnb/ruby">airbnb/ruby: Ruby Style Guide - https://github.com/airbnb/ruby</a></p>
<p>[8] <a href="https://guides.github.com/">GitHub Guides - https://guides.github.com/</a></p>
<p>[9] <a href="https://12factor.net/">The Twelve-Factor App - https://12factor.net/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Style Guide</tag>
        <tag>12factor</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Upgrade to Ruby 3 and Rails 6.1</title>
    <url>/2021/01/09/Programming-Language/Ruby-on-Rails-RoR/Upgrade-to-Ruby-3-and-Rails-6-1/</url>
    <content><![CDATA[<h1 id="Ruby-3-and-Rails-6-1"><a href="#Ruby-3-and-Rails-6-1" class="headerlink" title="Ruby 3 and Rails 6.1"></a>Ruby 3 and Rails 6.1</h1><p>Ruby 3, whose goal is performance, concurrency, and Typing. Especially about performance, Matz stated “Ruby3 will be 3 times faster than Ruby2” a.k.a. Ruby 3x3.</p>
<p>Rails 6.1 has been released and wow does it have a lot of great stuff! It have implemented improvements to multiple databases, adding support for destroying associations in jobs instead of in-memory, turning errors into objects, and so much more.</p>
<h2 id="Ruby-3-0-0"><a href="#Ruby-3-0-0" class="headerlink" title="Ruby 3.0.0"></a>Ruby 3.0.0</h2><p>Ruby 3.0.0 covers those goals by:</p>
<ul>
<li><p>Performance</p>
<ul>
<li>MJIT</li>
</ul>
</li>
<li><p>Concurrency</p>
<ul>
<li><p>Ractor</p>
</li>
<li><p>Fiber Scheduler</p>
</li>
</ul>
</li>
<li><p>Typing (Static Analysis)</p>
<ul>
<li><p>RBS</p>
</li>
<li><p>TypeProf</p>
</li>
</ul>
</li>
</ul>
<h2 id="Rails-6-1"><a href="#Rails-6-1" class="headerlink" title="Rails 6.1"></a>Rails 6.1</h2><p>Rails 6.1 have some of the new functionality:</p>
<ul>
<li><p>Multi-DB Improvements</p>
</li>
<li><p>Strict Loading Associations</p>
</li>
<li><p>Delegated Types</p>
</li>
<li><p>Destroy Associations Async</p>
</li>
<li><p>Error Objects</p>
</li>
<li><p>Active Storage Improvements</p>
</li>
<li><p>Disallowed Deprecation Support</p>
</li>
<li><p>Performance Improvements and Bug Fixes!</p>
</li>
<li><p>The classic Autoloader is Deprecated</p>
</li>
</ul>
<h2 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h2><p>Upgrade <code>rvm</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rvm get head</span></span><br></pre></td></tr></table></figure>

<p>Install Ruby 3.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rvm install 3.0.0</span></span><br></pre></td></tr></table></figure>

<p>Edit the file <code>Gemfile</code>.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">ruby <span class="string">&#x27;3.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;rails&#x27;</span>, <span class="string">&#x27;~&gt; 6.1.0&#x27;</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;bundler&#x27;</span>, <span class="string">&#x27;2.2.8&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle update</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle update</span></span><br></pre></td></tr></table></figure>

<p>The upgrade process will be completed after solving some gem version dependency compatibility issues.</p>
<h2 id="Docker-Docker-Compose-Kubernetes-K8S"><a href="#Docker-Docker-Compose-Kubernetes-K8S" class="headerlink" title="Docker, Docker Compose, Kubernetes (K8S)"></a>Docker, Docker Compose, Kubernetes (K8S)</h2><p>Remember to change ruby version to 3.0.0 if you use Dockerfile.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Dockerfile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> RUBY_VERSION=<span class="number">3.0</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> ruby:$&#123;RUBY_VERSION&#125;</span><br></pre></td></tr></table></figure>

<h2 id="FAQs"><a href="#FAQs" class="headerlink" title="FAQs"></a>FAQs</h2><p>There may have some gems about version dependency compatibility. </p>
<h3 id="Bundler-You-must-use-Bundler-2-or-greater-with-this-lockfile"><a href="#Bundler-You-must-use-Bundler-2-or-greater-with-this-lockfile" class="headerlink" title="Bundler: You must use Bundler 2 or greater with this lockfile"></a>Bundler: You must use Bundler 2 or greater with this lockfile</h3><p>The issue was with gemfile.lock because our local bundle version and project bundle version was not matching!</p>
<p>You must upgrade gem ‘bundler’ to 2.2.8+.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem update --system</span></span><br></pre></td></tr></table></figure>

<h3 id="Exception-ArgumentError-wrong-number-of-arguments-given-4-expected-3-on-marginalia-1-8-0"><a href="#Exception-ArgumentError-wrong-number-of-arguments-given-4-expected-3-on-marginalia-1-8-0" class="headerlink" title="Exception: ArgumentError: wrong number of arguments (given 4, expected 3) on marginalia-1.8.0"></a>Exception: ArgumentError: wrong number of arguments (given 4, expected 3) on marginalia-1.8.0</h3><p>You must upgrade gem ‘marginalia’ to 1.10.0+.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Attach comments to ActiveRecord&#x27;s SQL queries</span></span><br><span class="line"><span class="comment"># https://github.com/basecamp/marginalia</span></span><br><span class="line">gem <span class="string">&#x27;marginalia&#x27;</span>, <span class="string">&#x27;1.10.0&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="RuntimeError-Couldn’t-find-Active-Storage-configuration-in-config-storage-yml"><a href="#RuntimeError-Couldn’t-find-Active-Storage-configuration-in-config-storage-yml" class="headerlink" title="RuntimeError: Couldn’t find Active Storage configuration in config/storage.yml"></a>RuntimeError: Couldn’t find Active Storage configuration in config/storage.yml</h3><p>We need to create the file <code>config/storage.yml</code> manually, if the file does not exist.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/storage.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Active Storage Overview — Ruby on Rails Guides</span></span><br><span class="line"><span class="comment"># https://edgeguides.rubyonrails.org/active_storage_overview.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">local:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">Disk</span></span><br><span class="line">  <span class="attr">root:</span> &lt;%=<span class="ruby"> Rails.root.join(<span class="string">&quot;storage&quot;</span>) </span>%&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">Disk</span></span><br><span class="line">  <span class="attr">root:</span> &lt;%=<span class="ruby"> Rails.root.join(<span class="string">&quot;tmp/storage&quot;</span>) </span>%&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Object-doesn’t-support-ai"><a href="#Object-doesn’t-support-ai" class="headerlink" title="(Object doesn’t support #ai)"></a>(Object doesn’t support #ai)</h3><p>It may be the XXX_print that cause this problem.</p>
<ul>
<li><p>[amazing-print/amazing_print: Pretty print your Ruby objects with style – in full color and with proper indentation - <a href="https://github.com/amazing-print/amazing_print]">https://github.com/amazing-print/amazing_print]</a></p>
</li>
<li><p><a href="https://github.com/awesome-print/awesome_print">awesome-print/awesome_print: Pretty print your Ruby objects with style – in full color and with proper indentation - https://github.com/awesome-print/awesome_print</a></p>
</li>
</ul>
<p>You cant try to disable them by comment the relevant codes.</p>
<h3 id="NoMethodError-undefined-method-encode’-for-URI-Module"><a href="#NoMethodError-undefined-method-encode’-for-URI-Module" class="headerlink" title="NoMethodError (undefined method `encode’ for URI:Module)"></a>NoMethodError (undefined method `encode’ for URI:Module)</h3><p>gem ‘carrierwave-aliyun’ old version use `URI#encode’ which have been removed from Ruby 3.</p>
<p>You must upgrade gem ‘carrierwave-aliyun’ to 1.2.3+.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># huacnlee/carrierwave-aliyun: 阿里云 OSS Ruby 上传组件，基于 Carrierwave</span></span><br><span class="line"><span class="comment"># https://github.com/huacnlee/carrierwave-aliyun</span></span><br><span class="line">gem <span class="string">&#x27;carrierwave-aliyun&#x27;</span>, <span class="string">&#x27;1.2.3&#x27;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/huacnlee/carrierwave-aliyun/commit/36c03af0762eb30fe4baac690441c30ed8651520">Merge branch ‘encode_url’ · huacnlee/carrierwave-aliyun@36c03af - https://github.com/huacnlee/carrierwave-aliyun/commit/36c03af0762eb30fe4baac690441c30ed8651520</a></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/">Ruby 3.0.0 Released - https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/</a></p>
<p>[2] <a href="https://weblog.rubyonrails.org/2020/12/9/Rails-6-1-0-release/">Rails 6.1: Horizontal Sharding, Multi-DB Improvements, Strict Loading, Destroy Associations in Background, Error Objects, and more! | Riding Rails - https://weblog.rubyonrails.org/2020/12/9/Rails-6-1-0-release/</a></p>
<p>[3] <a href="https://edgeguides.rubyonrails.org/active_storage_overview.html">Active Storage Overview — Ruby on Rails Guides - https://edgeguides.rubyonrails.org/active_storage_overview.html</a></p>
<p>[4] <a href="https://stackoverflow.com/questions/53231667/bundler-you-must-use-bundler-2-or-greater-with-this-lockfile">ruby on rails - Bundler: You must use Bundler 2 or greater with this lockfile - Stack Overflow - https://stackoverflow.com/questions/53231667/bundler-you-must-use-bundler-2-or-greater-with-this-lockfile</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Ruby</tag>
        <tag>Kubernetes (K8S)</tag>
        <tag>Docker</tag>
        <tag>Docker Compose</tag>
        <tag>Programming language</tag>
        <tag>Ruby 3</tag>
        <tag>Rails 6.1</tag>
        <tag>Dockerfile</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use #before? and #after? to compare Date, DateTime, Time or ActiveSupport::TimeWithZone in Rails 6</title>
    <url>/2021/01/09/Programming-Language/Ruby-on-Rails-RoR/Use-before-and-after-to-compare-Date-DateTime-Time-or-ActiveSupport-TimeWithZone-in-Rails-6/</url>
    <content><![CDATA[<h1 id="before-and-after"><a href="#before-and-after" class="headerlink" title="#before? and #after?"></a>#before? and #after?</h1><p><code>Date</code>, <code>DateTime</code>, <code>Time</code> and <code>ActiveSupport::TimeWithZone</code> objects using before? and after? in Rails 6.</p>
<p><code>before?</code> and <code>after?</code> are aliases to &lt; (less than) and &gt; (greater than) methods respectively.</p>
<h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&gt; &gt; Date.new(<span class="number">2019</span>, <span class="number">3</span>, <span class="number">31</span>).before?(Date.new(<span class="number">2019</span>, <span class="number">4</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&gt; &gt; Date.new(<span class="number">2019</span>, <span class="number">3</span>, <span class="number">31</span>).after?(Date.new(<span class="number">2019</span>, <span class="number">4</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<h2 id="DateTime"><a href="#DateTime" class="headerlink" title="DateTime"></a>DateTime</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&gt; &gt; DateTime.parse(<span class="string">&#x27;2019-03-31&#x27;</span>).before?(DateTime.parse(<span class="string">&#x27;2019-04-01&#x27;</span>))</span><br><span class="line"></span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&gt; &gt; DateTime.parse(<span class="string">&#x27;2019-03-31&#x27;</span>).after?(DateTime.parse(<span class="string">&#x27;2019-04-01&#x27;</span>))</span><br><span class="line"></span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<h2 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&gt; &gt; Time.parse(<span class="string">&#x27;2019-03-31&#x27;</span>).before?(Time.parse(<span class="string">&#x27;2019-04-01&#x27;</span>))</span><br><span class="line"></span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&gt; &gt; Time.parse(<span class="string">&#x27;2019-03-31&#x27;</span>).after?(Time.parse(<span class="string">&#x27;2019-04-01&#x27;</span>))</span><br><span class="line"></span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<h2 id="ActiveSupport-TimeWithZone"><a href="#ActiveSupport-TimeWithZone" class="headerlink" title="ActiveSupport::TimeWithZone"></a>ActiveSupport::TimeWithZone</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&gt; &gt; ActiveSupport::TimeWithZone.new(Time.utc(<span class="number">2019</span>, <span class="number">3</span>, <span class="number">31</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>), ActiveSupport::TimeZone[<span class="string">&quot;Eastern Time (US &amp; Canada)&quot;</span>]).before?(ActiveSupport::TimeWithZone.new(Time.utc(<span class="number">2019</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>), ActiveSupport::TimeZone[<span class="string">&quot;Eastern Time (US &amp; Canada)&quot;</span>]))</span><br><span class="line"></span><br><span class="line">=&gt; true</span><br><span class="line"></span><br><span class="line">&gt; &gt; ActiveSupport::TimeWithZone.new(Time.utc(<span class="number">2019</span>, <span class="number">3</span>, <span class="number">31</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>), ActiveSupport::TimeZone[<span class="string">&quot;Eastern Time (US &amp; Canada)&quot;</span>]).after?(ActiveSupport::TimeWithZone.new(Time.utc(<span class="number">2019</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>), ActiveSupport::TimeZone[<span class="string">&quot;Eastern Time (US &amp; Canada)&quot;</span>]))</span><br><span class="line"></span><br><span class="line">=&gt; false</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://bigbinary.com/blog/rails-6-adds-before-and-after-to-date-and-time">Rails 6 adds before? and after? to Date and Time | BigBinary Blog - https://bigbinary.com/blog/rails-6-adds-before-and-after-to-date-and-time</a></p>
<p>[2] <a href="https://api.rubyonrails.org/v6.1.0/classes/ActiveSupport/TimeWithZone.html">ActiveSupport::TimeWithZone - https://api.rubyonrails.org/v6.1.0/classes/ActiveSupport/TimeWithZone.html</a></p>
<p>[3] <a href="https://ruby-doc.org/stdlib-3.0.0/libdoc/date/rdoc/Date.html">Class: Date (Ruby 3.0.0) - https://ruby-doc.org/stdlib-3.0.0/libdoc/date/rdoc/Date.html</a></p>
<p>[4] <a href="https://ruby-doc.org/stdlib-2.6.1/libdoc/date/rdoc/DateTime.html">Class: DateTime (Ruby 2.6.1) - https://ruby-doc.org/stdlib-2.6.1/libdoc/date/rdoc/DateTime.html</a></p>
<p>[5] <a href="https://ruby-doc.org/core-3.0.0/Time.html">Class: Time (Ruby 3.0.0) - https://ruby-doc.org/core-3.0.0/Time.html</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Date</tag>
        <tag>DateTime</tag>
        <tag>Time</tag>
        <tag>ActiveSupport::TimeWithZone</tag>
        <tag>Rails 6</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use rails jbuilder to generate JSON objects with a Builder-style DSL </title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Use-rails-jbuilder-to-generate-JSON-objects-with-a-Builder-style-DSL/</url>
    <content><![CDATA[<h1 id="jbuilder"><a href="#jbuilder" class="headerlink" title="jbuilder"></a>jbuilder</h1><p>Jbuilder gives you a simple DSL for declaring JSON structures that beats manipulating giant hash structures. This is particularly helpful when the generation process is fraught with conditionals and loops. JSON objects can be use in RESTful API or composing objects.</p>
<a id="more"></a>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>Here’s a simple example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/views/messages/show.json.jbuilder</span></span><br><span class="line"></span><br><span class="line">json.content format_content(@message.content)</span><br><span class="line"><span class="comment"># You can use the call syntax instead of an explicit extract! call:</span></span><br><span class="line">json.extract! @message, <span class="symbol">:created_at</span>, <span class="symbol">:updated_at</span></span><br><span class="line">json.(@message, <span class="symbol">:created_at</span>, <span class="symbol">:updated_at</span>)</span><br><span class="line"></span><br><span class="line">json.author <span class="keyword">do</span></span><br><span class="line">  json.name @message.creator.name.familiar</span><br><span class="line">  json.email_address @message.creator.email_address_with_name</span><br><span class="line">  json.url url_for(@message.creator, <span class="symbol">format:</span> <span class="symbol">:json</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> current_user.admin?</span><br><span class="line">  json.visitors calculate_visitors(@message)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">json.comments @message.comments, <span class="symbol">:content</span>, <span class="symbol">:created_at</span></span><br><span class="line"></span><br><span class="line">json.attachments @message.attachments <span class="keyword">do</span> <span class="params">|attachment|</span></span><br><span class="line">  json.filename attachment.filename</span><br><span class="line">  json.url url_for(attachment)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>This will build the following structure:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;&lt;p&gt;This is &lt;i&gt;serious&lt;/i&gt; monkey business&lt;/p&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;created_at&quot;</span>: <span class="string">&quot;2011-10-29T20:45:28-05:00&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;updated_at&quot;</span>: <span class="string">&quot;2011-10-29T20:45:28-05:00&quot;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;David H.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;email_address&quot;</span>: <span class="string">&quot;&#x27;David Heinemeier Hansson&#x27; &lt;david@heinemeierhansson.com&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://example.com/users/1-david.json&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;visitors&quot;</span>: <span class="number">15</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;comments&quot;</span>: [</span><br><span class="line">    &#123; <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;Hello everyone!&quot;</span>, <span class="attr">&quot;created_at&quot;</span>: <span class="string">&quot;2011-10-29T20:45:28-05:00&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;To you my good sir!&quot;</span>, <span class="attr">&quot;created_at&quot;</span>: <span class="string">&quot;2011-10-29T20:47:28-05:00&quot;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;attachments&quot;</span>: [</span><br><span class="line">    &#123; <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;forecast.xls&quot;</span>, <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://example.com/downloads/forecast.xls&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;presentation.pdf&quot;</span>, <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://example.com/downloads/presentation.pdf&quot;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Dynamical-Attribute"><a href="#Dynamical-Attribute" class="headerlink" title="Dynamical Attribute"></a>Dynamical Attribute</h2><p>To define attribute and structure names dynamically, use the set! method:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.set! <span class="symbol">:author</span> <span class="keyword">do</span></span><br><span class="line">  json.set! <span class="symbol">:name</span>, <span class="string">&#x27;David&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &#123;&quot;author&quot;: &#123; &quot;name&quot;: &quot;David&quot; &#125;&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Attribute-Merge"><a href="#Attribute-Merge" class="headerlink" title="Attribute Merge"></a>Attribute Merge</h2><p>To merge existing hash or array to current context:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">hash = &#123; <span class="symbol">author:</span> &#123; <span class="symbol">name:</span> <span class="string">&quot;David&quot;</span> &#125; &#125;</span><br><span class="line">json.post <span class="keyword">do</span></span><br><span class="line">  json.title <span class="string">&quot;Merge HOWTO&quot;</span></span><br><span class="line">  json.merge! hash</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &quot;post&quot;: &#123; &quot;title&quot;: &quot;Merge HOWTO&quot;, &quot;author&quot;: &#123; &quot;name&quot;: &quot;David&quot; &#125; &#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><p>Top level arrays can be handled directly. Useful for index and other collection actions.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@comments</span> = <span class="doctag">@post</span>.comments</span></span><br><span class="line"></span><br><span class="line">json.array! @comments <span class="keyword">do</span> <span class="params">|comment|</span></span><br><span class="line">  <span class="keyword">next</span> <span class="keyword">if</span> comment.marked_as_spam_by?(current_user)</span><br><span class="line"></span><br><span class="line">  json.body comment.body</span><br><span class="line">  json.author <span class="keyword">do</span></span><br><span class="line">    json.first_name comment.author.first_name</span><br><span class="line">    json.last_name comment.author.last_name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; [ &#123; &quot;body&quot;: &quot;great post...&quot;, &quot;author&quot;: &#123; &quot;first_name&quot;: &quot;Joe&quot;, &quot;last_name&quot;: &quot;Bloe&quot; &#125;&#125; ]</span></span><br></pre></td></tr></table></figure>

<p>You can also extract attributes from array directly.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@people</span> = People.all</span></span><br><span class="line"></span><br><span class="line">json.array! @people, <span class="symbol">:id</span>, <span class="symbol">:name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; [ &#123; &quot;id&quot;: 1, &quot;name&quot;: &quot;David&quot; &#125;, &#123; &quot;id&quot;: 2, &quot;name&quot;: &quot;Jamie&quot; &#125; ]</span></span><br></pre></td></tr></table></figure>

<h2 id="Jbuilder-Object"><a href="#Jbuilder-Object" class="headerlink" title="Jbuilder Object"></a>Jbuilder Object</h2><p>Jbuilder objects can be directly nested inside each other. Useful for composing objects.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/jbuilder/person_jbuilder.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line">  <span class="comment"># ... Class Definition ... #</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">to_builder</span></span></span><br><span class="line">    Jbuilder.new <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">      person.(<span class="keyword">self</span>, <span class="symbol">:name</span>, <span class="symbol">:age</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Company</span></span></span><br><span class="line">  <span class="comment"># ... Class Definition ... #</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">to_builder</span></span></span><br><span class="line">    Jbuilder.new <span class="keyword">do</span> <span class="params">|company|</span></span><br><span class="line">      company.name name</span><br><span class="line">      company.president president.to_builder</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">company = Company.new(<span class="string">&#x27;Doodle Corp&#x27;</span>, Person.new(<span class="string">&#x27;John Stobs&#x27;</span>, <span class="number">58</span>))</span><br><span class="line">company.to_builder.target!</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &#123;&quot;name&quot;:&quot;Doodle Corp&quot;,&quot;president&quot;:&#123;&quot;name&quot;:&quot;John Stobs&quot;,&quot;age&quot;:58&#125;&#125;</span></span><br></pre></td></tr></table></figure>

<p>You can either use Jbuilder stand-alone or directly as an ActionView template language. When required in Rails, you can create views a la show.json.jbuilder (the json is already yielded):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Any helpers available to views are available to the builder</span></span><br><span class="line">json.content format_content(@message.content)</span><br><span class="line">json.(@message, <span class="symbol">:created_at</span>, <span class="symbol">:updated_at</span>)</span><br><span class="line"></span><br><span class="line">json.author <span class="keyword">do</span></span><br><span class="line">  json.name @message.creator.name.familiar</span><br><span class="line">  json.email_address @message.creator.email_address_with_name</span><br><span class="line">  json.url url_for(@message.creator, <span class="symbol">format:</span> <span class="symbol">:json</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> current_user.admin?</span><br><span class="line">  json.visitors calculate_visitors(@message)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="Partial-Render"><a href="#Partial-Render" class="headerlink" title="Partial Render"></a>Partial Render</h2><p>You can use partials as well. The following will render the file views/comments/_comments.json.jbuilder, and set a local variable comments with all this message’s comments, which you can use inside the partial.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.partial! <span class="string">&#x27;comments/comments&#x27;</span>, <span class="symbol">comments:</span> @message.comments</span><br></pre></td></tr></table></figure>

<p>It’s also possible to render collections of partials:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.array! @posts, <span class="symbol">partial:</span> <span class="string">&#x27;posts/post&#x27;</span>, <span class="symbol">as:</span> <span class="symbol">:post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">json.partial! <span class="string">&#x27;posts/post&#x27;</span>, <span class="symbol">collection:</span> @posts, <span class="symbol">as:</span> <span class="symbol">:post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">json.partial! <span class="symbol">partial:</span> <span class="string">&#x27;posts/post&#x27;</span>, <span class="symbol">collection:</span> @posts, <span class="symbol">as:</span> <span class="symbol">:post</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">json.comments @post.comments, <span class="symbol">partial:</span> <span class="string">&#x27;comments/comment&#x27;</span>, <span class="symbol">as:</span> <span class="symbol">:comment</span></span><br></pre></td></tr></table></figure>

<p>The as: :some_symbol is used with partials. It will take care of mapping the passed in object to a variable for the partial. If the value is a collection (either implicitly or explicitly by using the collection: option, then each value of the collection is passed to the partial as the variable some_symbol. If the value is a singular object, then the object is passed to the partial as the variable some_symbol.</p>
<p>Be sure not to confuse the as: option to mean nesting of the partial. For example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># Use the default `views/comments/_comment.json.jbuilder`, putting <span class="doctag">@comment</span> as the comment local variable.</span></span><br><span class="line"> <span class="comment"># Note, `comment` attributes are &quot;inlined&quot;.</span></span><br><span class="line"> json.partial! @comment, <span class="symbol">as:</span> <span class="symbol">:comment</span></span><br><span class="line">is quite different <span class="symbol">than:</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># comment attributes are nested under a &quot;comment&quot; property</span></span><br><span class="line">json.comment <span class="keyword">do</span></span><br><span class="line">  json.partial! <span class="string">&quot;/comments/comment.json.jbuilder&quot;</span>, <span class="symbol">comment:</span> @comment</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>You can pass any objects into partial templates with or without :locals option.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.partial! <span class="string">&#x27;sub_template&#x27;</span>, <span class="symbol">locals:</span> &#123; <span class="symbol">user:</span> user &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">json.partial! <span class="string">&#x27;sub_template&#x27;</span>, <span class="symbol">user:</span> user</span><br></pre></td></tr></table></figure>

<p>You can explicitly make Jbuilder object return null if you want:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.extract! @post, <span class="symbol">:id</span>, <span class="symbol">:title</span>, <span class="symbol">:content</span>, <span class="symbol">:published_at</span></span><br><span class="line">json.author <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> @post.anonymous?</span><br><span class="line">    json.null! <span class="comment"># or json.nil!</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    json.first_name @post.author_first_name</span><br><span class="line">    json.last_name @post.author_last_name</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>To prevent Jbuilder from including null values in the output, you can use the ignore_nil! method:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.ignore_nil!</span><br><span class="line">json.foo <span class="literal">nil</span></span><br><span class="line">json.bar <span class="string">&quot;bar&quot;</span></span><br><span class="line"><span class="comment"># =&gt; &#123; &quot;bar&quot;: &quot;bar&quot; &#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Fragment-caching"><a href="#Fragment-caching" class="headerlink" title="Fragment caching"></a>Fragment caching</h2><p>Fragment caching is supported within <a href="https://github.com/rails/jbuilder">rails/jbuilder: Jbuilder: generate JSON objects with a Builder-style DSL - https://github.com/rails/jbuilder</a>, it uses Rails.cache and works like caching in HTML templates:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache! [<span class="string">&#x27;v1&#x27;</span>, @person], <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span></span><br><span class="line">  json.extract! @person, <span class="symbol">:name</span>, <span class="symbol">:age</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>You can also conditionally cache a block by using cache_if! like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache_if! !admin?, [<span class="string">&#x27;v1&#x27;</span>, @person], <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span></span><br><span class="line">  json.extract! @person, <span class="symbol">:name</span>, <span class="symbol">:age</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>If you are rendering fragments for a collection of objects, have a look at <a href="https://github.com/yonahforst/jbuilder_cache_multi">yonahforst/jbuilder_cache_multi - https://github.com/yonahforst/jbuilder_cache_multi</a> gem. It uses fetch_multi (&gt;= Rails 4.1) to fetch multiple keys at once.</p>
<p>Renders the given block for each item in the collection. Accepts optional ‘key’ attribute in options (e.g. key: ‘v1’).</p>
<p>Note: At the moment, does not accept the partial name as an argument (#todo)</p>
<p>Examples:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or with optional key</span></span><br><span class="line"></span><br><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes, <span class="symbol">key:</span> <span class="string">&#x27;v1&#x27;</span> <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Or with a proc as a key </span></span><br><span class="line"></span><br><span class="line">json.cache_collection! @people, <span class="symbol">expires_in:</span> <span class="number">10</span>.minutes, <span class="symbol">key:</span> proc &#123;<span class="params">|person|</span> person.last_posted_at &#125; <span class="keyword">do</span> <span class="params">|person|</span></span><br><span class="line">  json.partial! <span class="string">&#x27;person&#x27;</span>, <span class="symbol">:person</span> =&gt; person</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Last thing: If you are using a collection for the cache key, may I recommend the ‘scope_cache_key’ gem? (check out my fork for a Rails 4 version: <a href="https://github.com/joshblour/scope_cache_key">https://github.com/joshblour/scope_cache_key</a>). It very quickly calculates a hash for all items in the collection (MD5 hash of updated_at + IDs).</p>
<p>You can also conditionally cache a block by using cache_collection_if! like this:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">json.cache_collection_if! do_cache?, @people, expires_in: 10.minutes do |person|</span><br><span class="line">  json.partial! &#39;person&#39;, :person &#x3D;&gt; person</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<h2 id="Key-Format"><a href="#Key-Format" class="headerlink" title="Key Format"></a>Key Format</h2><p>Keys can be auto formatted using key_format!. Specifies formatting to be applied to the key. Passing in a name of a function will cause that function to be called on the key.  So :upcase will upper case the key.  You can also pass in lambdas for more complex transformations.</p>
<p>Example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.key_format! <span class="symbol">:upcase</span></span><br><span class="line">json.author <span class="keyword">do</span></span><br><span class="line">    json.name <span class="string">&quot;David&quot;</span></span><br><span class="line">    json.age <span class="number">32</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &#123; &quot;AUTHOR&quot;: &#123; &quot;NAME&quot;: &quot;David&quot;, &quot;AGE&quot;: 32 &#125; &#125;</span></span><br></pre></td></tr></table></figure>

<p>You can pass parameters to the method using a hash pair.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.key_format! <span class="symbol">camelize:</span> <span class="symbol">:lower</span></span><br><span class="line">json.first_name <span class="string">&quot;David&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &#123; &quot;firstName&quot;: &quot;David&quot; &#125;</span></span><br></pre></td></tr></table></figure>

<p>Lambdas can also be used.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">json.key_format! -&gt;(key)&#123; <span class="string">&quot;_&quot;</span> + key &#125;</span><br><span class="line">json.first_name <span class="string">&quot;David&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; &#123; &quot;_first_name&quot;: &quot;David&quot; &#125;</span></span><br></pre></td></tr></table></figure>

<p>You can set this globally with the class method key_format (from inside your config/initializers/jbuilder.rb or environment.rb for example):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/initializers/jbuilder.rb</span></span><br><span class="line"></span><br><span class="line">Jbuilder.key_format <span class="symbol">camelize:</span> <span class="symbol">:lower</span></span><br></pre></td></tr></table></figure>

<p>See <a href="https://github.com/rails/jbuilder/blob/07d31ca6b8791b1767f9186a372ae3d3cbf16cf5/lib/jbuilder.rb">lib/jbuilder.rb</a> to learn more usages.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/rails/jbuilder">rails/jbuilder: Jbuilder: generate JSON objects with a Builder-style DSL - https://github.com/rails/jbuilder</a></p>
<p>[2] <a href="https://github.com/rails/jbuilder/blob/07d31ca6b8791b1767f9186a372ae3d3cbf16cf5/lib/jbuilder.rb">jbuilder/jbuilder.rb at 07d31ca6b8791b1767f9186a372ae3d3cbf16cf5 · rails/jbuilder - https://github.com/rails/jbuilder/blob/07d31ca6b8791b1767f9186a372ae3d3cbf16cf5/lib/jbuilder.rb</a></p>
<p>[3] <a href="https://github.com/yonahforst/jbuilder_cache_multi">yonahforst/jbuilder_cache_multi - https://github.com/yonahforst/jbuilder_cache_multi</a></p>
<p>[4] <a href="https://github.com/yonahforst/scope_cache_key">yonahforst/scope_cache_key: Add cache_key functionality to ActiveRecord scopes - https://github.com/yonahforst/scope_cache_key - https://github.com/yonahforst/scope_cache_key</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>jbuilder</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>RESTful API</tag>
        <tag>JavaScript Object Notation (JSON)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] #distance_of_time_in_words, #time_ago_in_words in ActionView::Helpers::DateHelper</title>
    <url>/2020/01/04/Programming-Language/Ruby-on-Rails-RoR/distance_of_time_in_words-time_ago_in_words-in-ActionView-Helpers-DateHelper/</url>
    <content><![CDATA[<h1 id="ActionView-Helpers-DateHelper"><a href="#ActionView-Helpers-DateHelper" class="headerlink" title="ActionView::Helpers::DateHelper"></a>ActionView::Helpers::DateHelper</h1><p>The Date Helper primarily creates select/option tags for different kinds of dates and times or date and time elements. All of the select-type methods share a number of common options that are as follows:</p>
<a id="more"></a>

<p>First, include <code>ActionView::Helpers::DateHelper</code> module.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="meta">2.6.1 :007 &gt;</span> include ActionView::Helpers::DateHelper</span><br></pre></td></tr></table></figure>

<h3 id="distance-of-time-in-words-from-time-to-time-0-options"><a href="#distance-of-time-in-words-from-time-to-time-0-options" class="headerlink" title="distance_of_time_in_words(from_time, to_time = 0, options = {})"></a>distance_of_time_in_words(from_time, to_time = 0, options = {})</h3><p>Reports the approximate distance in time between two Time, Date or DateTime objects or integers as seconds. Pass <code>include_seconds: true</code> if you want more detailed approximations when distance &lt; 1 min, 29 secs. Distances are reported based on the following table:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> &lt;-&gt; <span class="number">29</span> secs                                                             <span class="comment"># =&gt; less than a minute</span></span><br><span class="line"><span class="number">30</span> secs &lt;-&gt; <span class="number">1</span> min, <span class="number">29</span> secs                                                <span class="comment"># =&gt; 1 minute</span></span><br><span class="line"><span class="number">1</span> min, <span class="number">30</span> secs &lt;-&gt; <span class="number">44</span> mins, <span class="number">29</span> secs                                       <span class="comment"># =&gt; [2..44] minutes</span></span><br><span class="line"><span class="number">44</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">89</span> mins, <span class="number">29</span> secs                                     <span class="comment"># =&gt; about 1 hour</span></span><br><span class="line"><span class="number">89</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">29</span> secs                             <span class="comment"># =&gt; about [2..24] hours</span></span><br><span class="line"><span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">41</span> hrs, <span class="number">59</span> mins, <span class="number">29</span> secs                     <span class="comment"># =&gt; 1 day</span></span><br><span class="line"><span class="number">41</span> hrs, <span class="number">59</span> mins, <span class="number">30</span> secs  &lt;-&gt; <span class="number">29</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">29</span> secs           <span class="comment"># =&gt; [2..29] days</span></span><br><span class="line"><span class="number">29</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">44</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">29</span> secs   <span class="comment"># =&gt; about 1 month</span></span><br><span class="line"><span class="number">44</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">59</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">29</span> secs   <span class="comment"># =&gt; about 2 months</span></span><br><span class="line"><span class="number">59</span> days, <span class="number">23</span> hrs, <span class="number">59</span> mins, <span class="number">30</span> secs &lt;-&gt; <span class="number">1</span> yr minus <span class="number">1</span> sec                    <span class="comment"># =&gt; [2..12] months</span></span><br><span class="line"><span class="number">1</span> yr &lt;-&gt; <span class="number">1</span> yr, <span class="number">3</span> months                                                   <span class="comment"># =&gt; about 1 year</span></span><br><span class="line"><span class="number">1</span> yr, <span class="number">3</span> months &lt;-&gt; <span class="number">1</span> yr, <span class="number">9</span> months                                         <span class="comment"># =&gt; over 1 year</span></span><br><span class="line"><span class="number">1</span> yr, <span class="number">9</span> months &lt;-&gt; <span class="number">2</span> yr minus <span class="number">1</span> sec                                       <span class="comment"># =&gt; almost 2 years</span></span><br><span class="line"><span class="number">2</span> yrs &lt;-&gt; max time <span class="keyword">or</span> date                                                <span class="comment"># =&gt; (same rules as 1 yr)</span></span><br></pre></td></tr></table></figure>

<p>With <code>include_seconds: true</code> and the difference &lt; 1 minute 29 seconds:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>-<span class="number">4</span>   secs      <span class="comment"># =&gt; less than 5 seconds</span></span><br><span class="line"><span class="number">5</span>-<span class="number">9</span>   secs      <span class="comment"># =&gt; less than 10 seconds</span></span><br><span class="line"><span class="number">10</span>-<span class="number">19</span> secs      <span class="comment"># =&gt; less than 20 seconds</span></span><br><span class="line"><span class="number">20</span>-<span class="number">39</span> secs      <span class="comment"># =&gt; half a minute</span></span><br><span class="line"><span class="number">40</span>-<span class="number">59</span> secs      <span class="comment"># =&gt; less than a minute</span></span><br><span class="line"><span class="number">60</span>-<span class="number">89</span> secs      <span class="comment"># =&gt; 1 minute</span></span><br></pre></td></tr></table></figure>

<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">from_time = Time.now</span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">50</span>.minutes)                                <span class="comment"># =&gt; about 1 hour</span></span><br><span class="line">distance_of_time_in_words(from_time, <span class="number">50</span>.minutes.from_now)                                   <span class="comment"># =&gt; about 1 hour</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">15</span>.seconds)                                <span class="comment"># =&gt; less than a minute</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">15</span>.seconds, <span class="symbol">include_seconds:</span> <span class="literal">true</span>)         <span class="comment"># =&gt; less than 20 seconds</span></span><br><span class="line">distance_of_time_in_words(from_time, <span class="number">3</span>.years.from_now)                                      <span class="comment"># =&gt; about 3 years</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">60</span>.hours)                                  <span class="comment"># =&gt; 3 days</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">45</span>.seconds, <span class="symbol">include_seconds:</span> <span class="literal">true</span>)         <span class="comment"># =&gt; less than a minute</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time - <span class="number">45</span>.seconds, <span class="symbol">include_seconds:</span> <span class="literal">true</span>)         <span class="comment"># =&gt; less than a minute</span></span><br><span class="line">distance_of_time_in_words(from_time, <span class="number">76</span>.seconds.from_now)                                   <span class="comment"># =&gt; 1 minute</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">1</span>.year + <span class="number">3</span>.days)                           <span class="comment"># =&gt; about 1 year</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">3</span>.years + <span class="number">6</span>.months)                        <span class="comment"># =&gt; over 3 years</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">4</span>.years + <span class="number">9</span>.days + <span class="number">30</span>.minutes + <span class="number">5</span>.seconds) <span class="comment"># =&gt; about 4 years</span></span><br><span class="line"></span><br><span class="line">to_time = Time.now + <span class="number">6</span>.years + <span class="number">19</span>.days</span><br><span class="line">distance_of_time_in_words(from_time, to_time, <span class="symbol">include_seconds:</span> <span class="literal">true</span>)                        <span class="comment"># =&gt; about 6 years</span></span><br><span class="line">distance_of_time_in_words(to_time, from_time, <span class="symbol">include_seconds:</span> <span class="literal">true</span>)                        <span class="comment"># =&gt; about 6 years</span></span><br><span class="line">distance_of_time_in_words(Time.now, Time.now)                                               <span class="comment"># =&gt; less than a minute</span></span><br></pre></td></tr></table></figure>

<p>With the scope option, you can define a custom scope for Rails to look up the translation.</p>
<p>For example you can define the following in your locale (e.g. en.yml).</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># locale/en.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">datetime:</span></span><br><span class="line">  <span class="attr">distance_in_words:</span></span><br><span class="line">    <span class="attr">short:</span></span><br><span class="line">      <span class="attr">about_x_hours:</span></span><br><span class="line">        <span class="attr">one:</span> <span class="string">&#x27;an hour&#x27;</span></span><br><span class="line">        <span class="attr">other:</span> <span class="string">&#x27;<span class="template-variable">%&#123;count&#125;</span> hours&#x27;</span></span><br></pre></td></tr></table></figure>

<p>See <a href="https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml">github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml - https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml</a> for more examples.</p>
<p>Which will then result in the following:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">from_time = Time.now</span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">50</span>.minutes, <span class="symbol">scope:</span> <span class="string">&#x27;datetime.distance_in_words.short&#x27;</span>) <span class="comment"># =&gt; &quot;an hour&quot;</span></span><br><span class="line">distance_of_time_in_words(from_time, from_time + <span class="number">3</span>.hours, <span class="symbol">scope:</span> <span class="string">&#x27;datetime.distance_in_words.short&#x27;</span>)    <span class="comment"># =&gt; &quot;3 hours&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="distance-of-time-in-words-to-now-from-time-options"><a href="#distance-of-time-in-words-to-now-from-time-options" class="headerlink" title="distance_of_time_in_words_to_now(from_time, options = {})"></a>distance_of_time_in_words_to_now(from_time, options = {})</h3><p>Alias for: <code>#time_ago_in_words</code>.</p>
<h3 id="time-ago-in-words-from-time-options"><a href="#time-ago-in-words-from-time-options" class="headerlink" title="#time_ago_in_words(from_time, options = {})"></a>#time_ago_in_words(from_time, options = {})</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">Like distance_of_time_in_words, but where to_time is fixed to Time.now.</span><br><span class="line"></span><br><span class="line">time_ago_in_words(<span class="number">3</span>.minutes.from_now)                 <span class="comment"># =&gt; 3 minutes</span></span><br><span class="line">time_ago_in_words(<span class="number">3</span>.minutes.ago)                      <span class="comment"># =&gt; 3 minutes</span></span><br><span class="line">time_ago_in_words(Time.now - <span class="number">15</span>.hours)                <span class="comment"># =&gt; about 15 hours</span></span><br><span class="line">time_ago_in_words(Time.now)                           <span class="comment"># =&gt; less than a minute</span></span><br><span class="line">time_ago_in_words(Time.now, <span class="symbol">include_seconds:</span> <span class="literal">true</span>) <span class="comment"># =&gt; less than 5 seconds</span></span><br><span class="line"></span><br><span class="line">from_time = Time.now - <span class="number">3</span>.days - <span class="number">14</span>.minutes - <span class="number">25</span>.seconds</span><br><span class="line">time_ago_in_words(from_time)      <span class="comment"># =&gt; 3 days</span></span><br><span class="line"></span><br><span class="line">from_time = (<span class="number">3</span>.days + <span class="number">14</span>.minutes + <span class="number">25</span>.seconds).ago</span><br><span class="line">time_ago_in_words(from_time)      <span class="comment"># =&gt; 3 days</span></span><br></pre></td></tr></table></figure>

<p>Note that you cannot pass a Numeric value to <code>#time_ago_in_words</code>.</p>
<p>Also aliased as: <code>#distance_of_time_in_words_to_now</code></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://api.rubyonrails.org/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words">ActionView::Helpers::DateHelper - https://api.rubyonrails.org/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Best practices</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Date</tag>
        <tag>Time</tag>
      </tags>
  </entry>
  <entry>
    <title>[Rust] How to install rustup and Rust on macOS</title>
    <url>/2020/12/12/Programming-Language/Rust/How-to-install-rustup-and-Rust-on-macOS/</url>
    <content><![CDATA[<h1 id="rustup-rs-The-Rust-toolchain-installer"><a href="#rustup-rs-The-Rust-toolchain-installer" class="headerlink" title="rustup.rs - The Rust toolchain installer"></a>rustup.rs - The Rust toolchain installer</h1><p><a href="https://rustup.rs/">rustup.rs - The Rust toolchain installer - https://rustup.rs/</a> is an installer for<br>the systems programming language Rust and support multiple Rust versions.</p>
<p>Rust is a language empowering everyone to build reliable and efficient software.</p>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>There are two ways to install rustup and Rust on macOS. </p>
<h3 id="Install-by-curl-and-shell"><a href="#Install-by-curl-and-shell" class="headerlink" title="Install by curl and shell"></a>Install by curl and shell</h3><p>To download Rustup and install Rust, run the following in your terminal, then follow the on-screen instructions.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-by-Brew"><a href="#Install-by-Brew" class="headerlink" title="Install by Brew"></a>Install by Brew</h3><p>First install Brew Formula rustup-init.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew install rustup-init</span></span><br></pre></td></tr></table></figure>

<p>Then, initiate rustup.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rustup-init</span></span><br><span class="line">Welcome to Rust!</span><br><span class="line"></span><br><span class="line">This will download and install the official compiler for the Rust</span><br><span class="line">programming language, and its package manager, Cargo.</span><br><span class="line"></span><br><span class="line">Rustup metadata and toolchains will be installed into the Rustup</span><br><span class="line">home directory, located at:</span><br><span class="line"></span><br><span class="line">  /Users/cloudolife/.rustup</span><br><span class="line"></span><br><span class="line">This can be modified with the RUSTUP_HOME environment variable.</span><br><span class="line"></span><br><span class="line">The Cargo home directory located at:</span><br><span class="line"></span><br><span class="line">  /Users/cloudolife/.cargo</span><br><span class="line"></span><br><span class="line">This can be modified with the CARGO_HOME environment variable.</span><br><span class="line"></span><br><span class="line">The cargo, rustc, rustup and other commands will be added to</span><br><span class="line">Cargo&#x27;s bin directory, located at:</span><br><span class="line"></span><br><span class="line">  /Users/cloudolife/.cargo/bin</span><br><span class="line"></span><br><span class="line">This path will then be added to your PATH environment variable by</span><br><span class="line">modifying the profile files located at:</span><br><span class="line"></span><br><span class="line">  /Users/cloudolife/.profile</span><br><span class="line">  /Users/cloudolife/.bash_profile</span><br><span class="line">  /Users/cloudolife/.bashrc</span><br><span class="line">  /Users/cloudolife/.zshenv</span><br><span class="line"></span><br><span class="line">You can uninstall at any time with rustup self uninstall and</span><br><span class="line">these changes will be reverted.</span><br><span class="line"></span><br><span class="line">Current installation options:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   default host triple: x86_64-apple-darwin</span><br><span class="line">     default toolchain: stable (default)</span><br><span class="line">               profile: default</span><br><span class="line">  modify PATH variable: yes</span><br><span class="line"></span><br><span class="line">1) Proceed with installation (default)</span><br><span class="line">2) Customize installation</span><br><span class="line">3) Cancel installation</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">1</span></span><br><span class="line"></span><br><span class="line">info: profile set to &#x27;default&#x27;</span><br><span class="line">info: default host triple is x86_64-apple-darwin</span><br><span class="line">info: syncing channel updates for &#x27;stable-x86_64-apple-darwin&#x27;</span><br><span class="line">619.5 KiB / 619.5 KiB (100 %)  84.4 KiB/s in  8s ETA:  0s</span><br><span class="line">info: latest update on 2020-11-19, rust version 1.48.0 (7eac88abb 2020-11-16)</span><br><span class="line">info: downloading component &#x27;cargo&#x27;</span><br><span class="line">  4.0 MiB /   4.0 MiB (100 %) 664.2 KiB/s in  6s ETA:  0s</span><br><span class="line">info: downloading component &#x27;clippy&#x27;</span><br><span class="line">  1.7 MiB /   1.7 MiB (100 %)   1.6 MiB/s in  1s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-docs&#x27;</span><br><span class="line"> 13.3 MiB /  13.3 MiB (100 %)   2.5 MiB/s in  6s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-std&#x27;</span><br><span class="line"> 20.4 MiB /  20.4 MiB (100 %)   2.1 MiB/s in  9s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rustc&#x27;</span><br><span class="line"> 49.9 MiB /  49.9 MiB (100 %)   1.7 MiB/s in 52s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rustfmt&#x27;</span><br><span class="line">info: installing component &#x27;cargo&#x27;</span><br><span class="line">info: using up to 500.0 MiB of RAM to unpack components</span><br><span class="line">info: installing component &#x27;clippy&#x27;</span><br><span class="line">info: installing component &#x27;rust-docs&#x27;</span><br><span class="line"> 13.3 MiB /  13.3 MiB (100 %)   6.1 MiB/s in  2s ETA:  0s</span><br><span class="line">info: installing component &#x27;rust-std&#x27;</span><br><span class="line"> 20.4 MiB /  20.4 MiB (100 %)  12.1 MiB/s in  1s ETA:  0s</span><br><span class="line">info: installing component &#x27;rustc&#x27;</span><br><span class="line"> 49.9 MiB /  49.9 MiB (100 %)  12.3 MiB/s in  4s ETA:  0s</span><br><span class="line">info: installing component &#x27;rustfmt&#x27;</span><br><span class="line">info: default toolchain set to &#x27;stable-x86_64-apple-darwin&#x27;</span><br><span class="line"></span><br><span class="line">  stable-x86_64-apple-darwin installed - rustc 1.48.0 (7eac88abb 2020-11-16)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Rust is installed now. Great!</span><br><span class="line"></span><br><span class="line">To get started you need Cargo&#x27;s bin directory ($HOME/.cargo/bin) in your PATH</span><br><span class="line">environment variable. Next time you log in this will be done</span><br><span class="line">automatically.</span><br><span class="line"></span><br><span class="line">To configure your current shell, run:</span><br><span class="line">source $HOME/.cargo/env</span><br></pre></td></tr></table></figure>

<p>Reload environment.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> <span class="variable">$HOME</span>/.cargo/env</span></span><br></pre></td></tr></table></figure>

<h2 id="Common-Commands"><a href="#Common-Commands" class="headerlink" title="Common Commands"></a>Common Commands</h2><p>n the Rust development environment, all tools are installed to the ~/.cargo/bin directory, and this is where you will find the Rust toolchain, including rustc, cargo, and rustup.</p>
<p>Check rustc version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rustc --version</span></span><br><span class="line">rustc 1.48.0 (7eac88abb 2020-11-16)</span><br></pre></td></tr></table></figure>

<p>Check cargo version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cargo --version</span></span><br><span class="line">cargo 1.48.0 (65cbdd2dc 2020-10-14)</span><br></pre></td></tr></table></figure>

<p>check rustup version</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rustup --version</span></span><br><span class="line">rustup 1.23.1 (2020-12-03)</span><br><span class="line">info: This is the version for the rustup toolchain manager, not the rustc compiler.</span><br><span class="line">info: The currently active `rustc` version is `rustc 1.48.0 (7eac88abb 2020-11-16)`</span><br></pre></td></tr></table></figure>

<p>Uninstall Rust.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rustup self uninstall</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://rustup.rs/">rustup.rs - The Rust toolchain installer - https://rustup.rs/</a></p>
<p>[2] <a href="https://www.rust-lang.org/tools/install">Install Rust - Rust Programming Language - https://www.rust-lang.org/tools/install</a></p>
<p>[3] <a href="https://www.rust-lang.org/">Rust Programming Language - https://www.rust-lang.org/</a></p>
<p>[4] <a href="https://formulae.brew.sh/formula/rustup-init">rustup-init — Homebrew Formulae - https://formulae.brew.sh/formula/rustup-init</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Rust</category>
        <category>rustup</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>Homebrew</tag>
        <tag>Programming language</tag>
        <tag>Rust</tag>
        <tag>rustup</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Use Docker or Docker Compose to run Hexo</title>
    <url>/2020/10/24/Site/Hexo/Use-Docker-or-Docker-Compose-to-run-Hexo/</url>
    <content><![CDATA[<h1 id="col-hexo-docker"><a href="#col-hexo-docker" class="headerlink" title="col-hexo-docker"></a>col-hexo-docker</h1><p><a href="https://github.com/CloudoLife/col-hexo-docker">col-hexo</a> is a Docker image to use Docker or Docker Compose to run Hexo.</p>
<p>Hexo is a fast, simple &amp; powerful blog framework. It use plugins to provide features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>Developing apps today requires so much more than writing code. Multiple languages, frameworks, architectures, and discontinuous interfaces between tools for each lifecycle stage creates enormous complexity. </p>
<p>Docker simplifies and accelerates your workflow, while giving developers the freedom to innovate with their choice of tools, application stacks, and deployment environments for each project.</p>
<p>To learn more about all the features of Docker, see <a href="https://www.docker.com/">Docker - https://www.docker.com/</a>.</p>
</li>
<li><p><a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
<p>Docker Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration. </p>
<p>To learn more about all the features of Docker Compose, see <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a>.</p>
</li>
</ul>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>You can run it with Docker or Docker Compose.</p>
<p>You can replace the following with your preferred content.</p>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>First, edit or modify the <a href="./Dockerfile">./Dockerfile</a>.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> NODE_VERSION=<span class="number">15.9</span>.<span class="number">0</span>-alpine3.<span class="number">10</span></span><br><span class="line"><span class="keyword">FROM</span> node:$&#123;NODE_VERSION&#125; as builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add --no-cache bash git</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> <span class="keyword">WORKDIR</span><span class="bash">=/app</span></span><br><span class="line"><span class="keyword">ARG</span> SITE</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;WORKDIR&#125;</span>/<span class="variable">$&#123;SITE&#125;</span>&#125;</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yarn \</span></span><br><span class="line"><span class="bash">    &amp;&amp; yarn global add hexo-cli</span></span><br></pre></td></tr></table></figure>

<p>Run with <code>docker</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build -t cloudolife/col-hexo .</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -it -v <span class="variable">$PWD</span>:/app --rm --name col-hexo cloudolife/col-hexo bash</span></span><br></pre></td></tr></table></figure>

<h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p>Edit or modify <a href="./docker-compose.yml">./docker-compose.yml</a>.</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># docker-compose run app bash</span></span><br><span class="line">  <span class="comment"># docker-compose run --service-ports app bash</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">cloudolife/col-hexo</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4000:4000&quot;</span></span><br><span class="line">    <span class="comment"># restart: on-failure</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">.:/app</span></span><br></pre></td></tr></table></figure>

<p>Run with <code>docker-compose</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker run --rm -it --name col-hexo col-hexo bash</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run --service-ports app bash</span></span><br></pre></td></tr></table></figure>

<h3 id="Run-Hexo"><a href="#Run-Hexo" class="headerlink" title="Run Hexo"></a>Run Hexo</h3><p>Then, run <code>hexo init</code> to create a new site in the container.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init col-hexo-docker-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> col-hexo-docker-example</span></span><br></pre></td></tr></table></figure>

<p>Run Hexo server.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br></pre></td></tr></table></figure>

<p>Now you can open <a href="http://localhost:4000/">http://localhost:4000</a> in your browser, and check whether the site works correctly.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/col-hexo-docker">col-hexo-docker</a></p>
<p>[2] <a href="https://hub.docker.com/r/cloudolife/col-hexo">cloudolife/col-hexo - </a></p>
<p>[3] <a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
<p>[4] <a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>[5] <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Docker Compose</tag>
        <tag>Site</tag>
        <tag>Docker Hub</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Use hexo-filter-nofollow plugin to add nofollow attribute to all external links automatically for Hexo</title>
    <url>/2020/10/24/Site/Hexo/Use-hexo-filter-nofollow-plugin-to-add-nofollow-attribute-to-all-external-links-automatically-for-Hexo/</url>
    <content><![CDATA[<h1 id="hexo-filter-nofollow"><a href="#hexo-filter-nofollow" class="headerlink" title="hexo-filter-nofollow"></a>hexo-filter-nofollow</h1><p>Hexo is a fast, simple &amp; powerful blog framework. It use plugins to provide features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>
<p><code>hexo-filter-nofollow</code> plugin add <code>nofollow</code> attribute to all external links automatically.</p>
<p><code>hexo-filter-nofollow</code> add `rel=”noopener external nofollow noreferrer” to all external links for security, privacy and SEO. Read more.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Use <code>npm</code> to install <code>hexo-filter-nofollow</code> package.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-filter-nofollow --save</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>It will generate sitemap.xml in the public folder by default after <code>hexo-filter-nofollow</code> installation.</p>
<p>You can configure this plugin in <a href="./_config.yml">./_config.yml</a>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude1.com&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude2.com&#x27;</span></span><br></pre></td></tr></table></figure>

<p>The follow is the options:</p>
<ul>
<li><p>enable - Enable the plugin. Default value is true.</p>
</li>
<li><p>field - The scope you want the plugin to proceed, can be ‘site’ or ‘post’. Default value is site.</p>
<ul>
<li><p>‘post’ - Only add nofollow attribute to external links in your post content</p>
</li>
<li><p>‘site’ - Add nofollow attribute to external links of whole sites</p>
</li>
</ul>
</li>
<li><p>exclude - Exclude hostname. Specify subdomain when applicable, including www. ‘exclude1.com’ does not apply to <a href="http://www.exclude1.com/">www.exclude1.com</a> nor en.exclude1.com.</p>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/hexojs/hexo-filter-nofollow/">hexojs/hexo-filter-nofollow: Add nofollow attribute to all external links automatically. - https://github.com/hexojs/hexo-filter-nofollow/</a></p>
<p>[2] <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types">Link types - HTML: HyperText Markup Language | MDN - https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types</a></p>
<p>[4] <a href="https://developers.google.com/search/docs/advanced/guidelines/qualify-outbound-links">Qualify Outbound Links for SEO | Google Search Central - https://developers.google.com/search/docs/advanced/guidelines/qualify-outbound-links</a></p>
<p>[3] <a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Site</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>hexo-filter-nofollow</tag>
        <tag>nofollow</tag>
        <tag>Link</tag>
        <tag>Search Engine Optimization (SEO)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Use hexo-generator-baidu-sitemap plugin to generate Baidu sitemap.xml automatically for Hexo</title>
    <url>/2020/10/24/Site/Hexo/Use-hexo-generator-baidu-sitemap-plugin-to-generate-Baidu-sitemap.xml-automatically-for-Hexo/</url>
    <content><![CDATA[<h1 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a>hexo-generator-baidu-sitemap</h1><p>Hexo is a fast, simple &amp; powerful blog framework. It use plugins to provide features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>
<p><code>hexo-generator-baidu-sitemap</code> plugin will generate Baidu sitemap.xml files for <code>Hexo</code> pages, posts, categories, tags.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Use <code>npm</code> to install <code>hexo-generator-baidu-sitemap</code> package.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-baidu-sitemap --save</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>It will generate <code>baidusitemap.xml</code> in the public folder by default after <code>hexo-generator-baidu-sitemap</code> installation.</p>
<p>You can configure this plugin in <a href="./_config.yml">./_config.yml</a>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure>

<p>The follow is the options:</p>
<ul>
<li>path - Sitemap path. (Default: baidusitemap.xml)</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">coneycode/hexo-generator-baidu-sitemap: Baidu Sitemap generator plugin for Hexo - https://github.com/coneycode/hexo-generator-baidu-sitemap</a></p>
<p>[2] <a href="https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap">Build and submit a sitemap  |  Google Search Central  |  Google Developers - https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap</a></p>
<p>[3] <a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Site</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Search Engine Optimization (SEO)</tag>
        <tag>hexo-generator-baidu-sitemap</tag>
        <tag>sitemap</tag>
        <tag>Baidu</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Use hexo-generator-sitemap plugin to generate sitemap.xml automatically for Hexo</title>
    <url>/2020/10/24/Site/Hexo/Use-hexo-generator-sitemap-plugin-to-generate-sitemap.xml-automatically-for-Hexo/</url>
    <content><![CDATA[<h1 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a>hexo-generator-sitemap</h1><p>Hexo is a fast, simple &amp; powerful blog framework. It use plugins to provide features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>
<p><code>hexo-generator-sitemap</code> plugin will generate sitemap files for <code>Hexo</code> pages, posts, categories, tags.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Use <code>npm</code> to install <code>hexo-generator-sitemap</code> package.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-sitemap --save</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>It will generate <code>sitemap.xml</code> in the public folder by default after <code>hexo-generator-sitemap</code> installation.</p>
<p>You can configure this plugin in <a href="./_config.yml">./_config.yml</a>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./sitemap_template.xml</span></span><br><span class="line">  <span class="attr">rel:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>The follow is the options:</p>
<ul>
<li><p>path - Sitemap path. (Default: sitemap.xml)</p>
</li>
<li><p>template - Custom template path. This file will be used to generate sitemap.xml. (See default template)</p>
</li>
<li><p>rel - Add rel-sitemap to the site’s header. (Default: false)</p>
</li>
<li><p>tags - Add site’s tags. (Default: true)</p>
</li>
<li><p>categories - Add site’s categories. (Default: true)</p>
</li>
</ul>
<h3 id="Exclude-Posts-Pages"><a href="#Exclude-Posts-Pages" class="headerlink" title="Exclude Posts/Pages"></a>Exclude Posts/Pages</h3><p>Add <code>sitemap: false</code> to the post/page’s front matter in order to exclude from sitemap.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">lorem</span> <span class="string">ipsum</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-01-02</span></span><br><span class="line"><span class="attr">sitemap:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/hexojs/hexo-generator-sitemap">GitHub - hexojs/hexo-generator-sitemap: Sitemap generator for Hexo. - https://github.com/hexojs/hexo-generator-sitemap</a></p>
<p>[2] <a href="https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap">Build and submit a sitemap  |  Google Search Central  |  Google Developers - https://developers.google.com/search/docs/advanced/sitemaps/build-sitemap</a></p>
<p>[3] <a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Site</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Search Engine Optimization (SEO)</tag>
        <tag>sitemap</tag>
        <tag>hexo-generator-sitemap</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Use hexo-theme-next within Hexo</title>
    <url>/2021/02/20/Site/Hexo/Use-hexo-theme-next-within%20Hexo/</url>
    <content><![CDATA[<h1 id="hexo-theme-next"><a href="#hexo-theme-next" class="headerlink" title="hexo-theme-next"></a>hexo-theme-next</h1><p>NexT is a high quality elegant theme for Hexo. It is crafted from scratch, with love.</p>
<p>Make sure that you have installed Hexo and created a site(such as hexo-site) with it successfully, because the following documents require you to operate in the site root directory.</p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
<p>Hexo is a fast, simple &amp; powerful blog framework. It use plugins to provide features powerful APIs for limitless extensibility. Various plugins are available to support most template engines (EJS, Pug, Nunjucks, and many others). Easily integrate with existing NPM packages (Babel, PostCSS, Less/Sass, etc).</p>
<p>To learn more about all the features of Docker, see <a href="https://hexo.io/">Hexo - https://hexo.io/</a>.</p>
</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Open your Terminal, change to Hexo site root directory and install NexT theme:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hexo-site</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-theme-next</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Config-Next-Theme"><a href="#Config-Next-Theme" class="headerlink" title="Config Next Theme"></a>Config Next Theme</h3><p>At present, NexT encourages users to use the Alternate Theme Config. It’s a feature of Hexo and the documentation is here: <a href="https://hexo.io/docs/configuration.html#Using-an-Alternate-Config">Configuration | Hexo - https://hexo.io/docs/configuration.html#Using-an-Alternate-Config</a>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Installed through npm</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp node_modules/hexo-theme-next/_config.yml _config.next.yml</span></span><br></pre></td></tr></table></figure>

<p>The traditional approach is to store some options in site config file and other options in theme config file. But it is not smooth to update NexT theme from pulling or downloading new releases.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Installed through Git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp theme/next/_config.yml _config.next.yml</span></span><br></pre></td></tr></table></figure>

<p><a href="https://theme-next.js.org/docs/getting-started/configuration.html">Configuration | NexT - https://theme-next.js.org/docs/getting-started/configuration.html</a></p>
<h3 id="Enabling-NexT"><a href="#Enabling-NexT" class="headerlink" title="Enabling NexT"></a>Enabling NexT</h3><p>Like all Hexo themes, after you download it, open site config file, find theme section, and change its value to next (or another theme directory name).</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo/_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>Now you have installed NexT theme and enabled it. The following steps will help you verify whether NexT is enabled correctly.</p>
<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.2.1</span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>Now you can open <a href="http://localhost:4000/">http://localhost:4000</a> in your browser, and check whether the site works correctly.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://theme-next.js.org/">NexT - Theme for Hexo - https://theme-next.js.org/</a></p>
<p>[2] <a href="https://theme-next.js.org/docs/getting-started/">Getting Started | NexT - https://theme-next.js.org/docs/getting-started/</a></p>
<p>[3] <a href="https://hexo.io/docs/configuration.html#Using-an-Alternate-Config">Configuration | Hexo - https://hexo.io/docs/configuration.html#Using-an-Alternate-Config</a></p>
<p>[4] <a href="https://hexo.io/">Hexo - https://hexo.io/</a></p>
]]></content>
      <categories>
        <category>Site</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Site</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>hexo-theme-next</tag>
        <tag>Theme</tag>
      </tags>
  </entry>
  <entry>
    <title>[Storage] Use AliCloud free certificates that are automatically renewed to avoid expiration of AliCloud CDN domain certificates</title>
    <url>/2020/12/05/Cloud-Native/Cloud-Computing/Network/Use-AliCloud-free-certificates-that-are-automatically-renewed-to-avoid-expiration-of-AliCloud-CDN-domain-certificates/</url>
    <content><![CDATA[<h1 id="Free-Certificates"><a href="#Free-Certificates" class="headerlink" title="Free Certificates"></a>Free Certificates</h1><p>This article is about to use Aliyun (AliCloud) / Alibaba Cloud free certificates that are automatically renewed to avoid expiration of Aliyun (AliCloud) / Alibaba Cloud Content Delivery Network (CDN) domain certificates.</p>
<a id="more"></a>

<h2 id="Alibaba-Cloud-Content-Delivery-Network-CDN"><a href="#Alibaba-Cloud-Content-Delivery-Network-CDN" class="headerlink" title="Alibaba Cloud Content Delivery Network (CDN)"></a>Alibaba Cloud Content Delivery Network (CDN)</h2><p><a href="https://www.alibabacloud.com/product/cdn">CDN: Content Delivery Service for Accelerated Distribution of Content - Alibaba Cloud - https://www.alibabacloud.com/product/cdn</a> is a distributed network built over the bearer network and contains edge nodes deployed in different regions. Alibaba Cloud CDN offloads network traffic from origin servers to prevent network congestion. You can use Alibaba Cloud CDN to accelerate website content delivery in different regions or scenarios.</p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><ol>
<li><p>Log in to the <a href="https://cdn.console.aliyun.com/domain/list">CDN console - https://cdn.console.aliyun.com/domain/list</a>.</p>
</li>
<li><p>In the left navigation bar, click Domain Management.</p>
</li>
<li><p>On the domain name management page, click the management corresponding to the target domain name.</p>
</li>
<li><p>In the left navigation bar of the specified domain name, click HTTPS configuration.</p>
</li>
<li><p>In the HTTPS certificate area, click Modify Configuration.</p>
</li>
<li><p>On the HTTPS setting interface, turn on the HTTPS security acceleration switch and configure the certificate-related parameters.</p>
</li>
</ol>
<h2 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h2><p>Free certificates are usually issued within 1 to 2 working days. During the waiting period, you can also choose to upload a custom certificate or Cloud Shield certificate again.<br>Note According to the CA Center’s review process, the certificate you applied for may be issued within a few hours, or it may take 2 working days to complete the issuance. This is a normal phenomenon. Please wait patiently.</p>
<p>The free certificate is only applicable to the HTTPS security acceleration business, so you cannot manage the certificate on the Alibaba Cloud Cloud YunDun console, nor can you view the public key and private key.</p>
<p>The free certificate is valid for one year. During your use, if you turn off the HTTPS security acceleration, when you turn on the free certificate again, the certificate that has been applied for but has not expired will be used directly. If the certificate has expired when it is turned on, you need to apply for a free certificate again.</p>
<p>HTTPS secure acceleration is a value-added feature and is charged in addition to CDN traffic. After you enable this feature, you are charged for all HTTPS requests. You can either pay for each individual HTTPS request or purchase a HTTPS request plan. To avoid business interruption, make sure that your account balance is sufficient to cover all fees. For more information, seeHTTPS pricing.</p>
<p>Wildcard domains do not support free certificates.</p>
<p>If your website has user information and transactions, we recommend that you use a certificate with a higher security level.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://help.aliyun.com/document_detail/27118.html">配置HTTPS证书 - CDN - 阿里云 - https://help.aliyun.com/document_detail/27118.html</a></p>
<p>[2] <a href="https://www.alibabacloud.com/product/cdn">CDN: Content Delivery Service for Accelerated Distribution of Content - Alibaba Cloud - https://www.alibabacloud.com/product/cdn</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Cloud Computing</category>
        <category>Network</category>
        <category>Content Delivery Network (CDN)</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Aliyun (AliCloud) / Alibaba Cloud</tag>
        <tag>HTTPS</tag>
        <tag>Cloud Computing</tag>
        <tag>Certificate</tag>
        <tag>Content Delivery Network (CDN)</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>[Storage] Restic backup data encrypted and safely</title>
    <url>/2020/11/28/Cloud-Native/Cloud-Computing/Storage/Restic-backup-data-encrypted-and-safely/</url>
    <content><![CDATA[<h1 id="Restic"><a href="#Restic" class="headerlink" title="Restic"></a>Restic</h1><p>Restic is a modern backup program that can back up your files encrypted and safely:</p>
<ul>
<li><p>from Linux, BSD, Mac and Windows</p>
</li>
<li><p>to many different storage types, including self-hosted and online services</p>
</li>
<li><p>easily, being a single executable that you can run without a server or complex setup</p>
</li>
<li><p>effectively, only transferring the parts that actually changed in the files you back up</p>
</li>
<li><p>securely, by careful use of cryptography in every part of the process</p>
</li>
<li><p>verifiably, enabling you to make sure that your files can be restored when needed</p>
</li>
<li><p>freely - restic is entirely free to use and completely open source</p>
</li>
</ul>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>If you are using macOS, you can install restic using the homebrew package manager:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> macOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install restic</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install osxfuse to mount <span class="keyword">for</span> File system integration. See [osxfuse — Homebrew Formulae - https://formulae.brew.sh/cask/osxfuse](https://formulae.brew.sh/cask/osxfuse)</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install --cask osxfuse</span></span><br></pre></td></tr></table></figure>

<p>You can learn how to install Restic from <a href="https://restic.readthedocs.io/en/stable/020_installation.html">Installation — restic 0.12.0 documentation - https://restic.readthedocs.io/en/stable/020_installation.html</a>.</p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h3><p>First initialize the repository.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic -r &lt;Your repository&gt; init</span></span><br></pre></td></tr></table></figure>

<h3 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h3><p>Backup your local folder to the repository.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic backup &lt;Your Local Folder&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Snapshot"><a href="#Snapshot" class="headerlink" title="Snapshot"></a>Snapshot</h3><p>Show snapshot list.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic snapshots</span></span><br></pre></td></tr></table></figure>

<p>Show content within the special snapshot.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic ls &lt;Your Snapshot ID&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Mount"><a href="#Mount" class="headerlink" title="Mount"></a>Mount</h3><p>Mount the repository into you local mounting folder.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic mount &lt;Your Local Mounting Folder&gt;</span></span><br></pre></td></tr></table></figure>

<p>Mounting repositories via FUSE is only possible on Linux, macOS and FreeBSD. On Linux, the fuse kernel module needs to be loaded and the fusermount command needs to be in the PATH. On macOS, you need FUSE for macOS <a href="https://osxfuse.github.io/">Home - macFUSE - https://osxfuse.github.io/</a>. On FreeBSD, you may need to install FUSE and load the kernel module (kldload fuse).</p>
<h3 id="Restoring-from-backup"><a href="#Restoring-from-backup" class="headerlink" title="Restoring from backup"></a>Restoring from backup</h3><h4 id="Restoring-from-a-snapshot"><a href="#Restoring-from-a-snapshot" class="headerlink" title="Restoring from a snapshot"></a>Restoring from a snapshot</h4><p>Restoring a snapshot is as easy as it sounds, just use the following command to restore the contents of the latest snapshot to <Your Local Restoring Folder>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic restore &lt;Your Snapshot ID&gt; --target &lt;Your Local Restoring Folder&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Restore-using-mount"><a href="#Restore-using-mount" class="headerlink" title="Restore using mount"></a>Restore using mount</h4><p>See above <a href="./#mount">Mount</a></p>
<h3 id="Removing-backup-snapshots"><a href="#Removing-backup-snapshots" class="headerlink" title="Removing backup snapshots"></a>Removing backup snapshots</h3><p>In order to remove the snapshot of repository, use the <code>forget</code> command and specify the snapshot ID on the command line:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic forget &lt;Your Snapshot ID&gt;</span></span><br></pre></td></tr></table></figure>

<p>But the data that was referenced by files in this snapshot is still stored in the repository. To cleanup unreferenced data, the <code>prune</code> command must be run:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic prune</span></span><br></pre></td></tr></table></figure>

<p>You can automate this two-step process by using the <code>--prune</code> switch to forget:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic forget --keep-last 1 --prune</span></span><br></pre></td></tr></table></figure>

<h3 id="Encryption"><a href="#Encryption" class="headerlink" title="Encryption"></a>Encryption</h3><p>The key command allows you to set multiple access keys or passwords per repository. In fact, you can use the list, add, remove, and passwd (changes a password) sub-commands to manage these keys very precisely:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic key list</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key add</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key remove</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key passwd</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://restic.net/">restic · Backups done right! - https://restic.net/</a></p>
<p>[2] <a href="https://osxfuse.github.io/">Home - macFUSE - https://osxfuse.github.io/</a></p>
<p>[3] <a href="https://formulae.brew.sh/cask/osxfuse">osxfuse — Homebrew Formulae - https://formulae.brew.sh/cask/osxfuse</a></p>
<p>[4] <a href="https://brew.sh/">The Missing Package Manager for macOS (or Linux) — Homebrew - https://brew.sh/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Cloud Computing</category>
        <category>Storage</category>
      </categories>
      <tags>
        <tag>Best practices</tag>
        <tag>Cloud Native</tag>
        <tag>Security</tag>
        <tag>Cloud Computing</tag>
        <tag>Homebrew</tag>
        <tag>Restic</tag>
        <tag>Encryption</tag>
        <tag>FUSE</tag>
        <tag>Storage</tag>
      </tags>
  </entry>
  <entry>
    <title>[Storage] Restic backup data to AliCloud Object Storage Service (OSS) encrypted and safely</title>
    <url>/2020/12/05/Cloud-Native/Cloud-Computing/Storage/Restic-backup-data-to-AliCloud-Object-Storage-Service-OSS-encrypted-and-safely/</url>
    <content><![CDATA[<h1 id="Restic-AliCloud-Object-Storage-Service-OSS"><a href="#Restic-AliCloud-Object-Storage-Service-OSS" class="headerlink" title="Restic + AliCloud Object Storage Service (OSS)"></a>Restic + AliCloud Object Storage Service (OSS)</h1><a id="more"></a>

<h2 id="Restic"><a href="#Restic" class="headerlink" title="Restic"></a>Restic</h2><p>Restic is a modern backup program that can back up your files encrypted and safely:</p>
<ul>
<li><p>from Linux, BSD, Mac and Windows</p>
</li>
<li><p>to many different storage types, including self-hosted and online services</p>
</li>
<li><p>easily, being a single executable that you can run without a server or complex setup</p>
</li>
<li><p>effectively, only transferring the parts that actually changed in the files you back up</p>
</li>
<li><p>securely, by careful use of cryptography in every part of the process</p>
</li>
<li><p>verifiably, enabling you to make sure that your files can be restored when needed</p>
</li>
<li><p>freely - restic is entirely free to use and completely open source</p>
</li>
</ul>
<h2 id="AliCloud-Object-Storage-Service-OSS"><a href="#AliCloud-Object-Storage-Service-OSS" class="headerlink" title="AliCloud Object Storage Service (OSS)"></a>AliCloud Object Storage Service (OSS)</h2><p>AliCloud Object Storage Service (OSS) is a secure, cost-effective, and high-durability cloud storage service provided by Alibaba Cloud. It enables you to store large amounts of data in the cloud. OSS can provide 99.9999999999% (twelve 9’s) data durability (designed for) and 99.995% service availability.</p>
<p>See <a href="https://www.alibabacloud.com/product/oss">OSS (Object Storage Service): Encrypted and Secure Cloud Storage Service - Alibaba Cloud - https://www.alibabacloud.com/product/oss</a> to learn more about OSS.</p>
<h2 id="Prerequsites"><a href="#Prerequsites" class="headerlink" title="Prerequsites"></a>Prerequsites</h2><p>Your must have a Alibaba Cloud account with Access Key.</p>
<h3 id="Aliyun-Account-and-Access-Key"><a href="#Aliyun-Account-and-Access-Key" class="headerlink" title="Aliyun Account and Access Key"></a>Aliyun Account and Access Key</h3><ul>
<li><p><a href="https://www.alibabacloud.com/help/doc-detail/50482.htm">Alibaba Cloud Document Center: Find the Documentation for Your Needs - Alibaba Cloud</a></p>
<p>  Before you purchase and use Alibaba Cloud products and services, you must have an Alibaba Cloud account. And then configure the account.</p>
</li>
<li><p><a href="https://www.alibabacloud.com/help/doc-detail/53045.htm">Create an AccessKey - General Reference| Alibaba Cloud Documentation Center</a></p>
<p>  An AccessKey is equivalent to a logon password, but they are used in different scenarios. AccessKeys are used to directly call APIs, while logon passwords are used to log on to the console. You must create an AccessKey only if you must call APIs.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>If you are using macOS, you can install restic using the homebrew package manager:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> macOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install restic</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install osxfuse to mount <span class="keyword">for</span> File system integration. See [osxfuse — Homebrew Formulae - https://formulae.brew.sh/cask/osxfuse](https://formulae.brew.sh/cask/osxfuse)</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install --cask osxfuse</span></span><br></pre></td></tr></table></figure>

<p>You can learn how to install Restic from <a href="https://restic.readthedocs.io/en/stable/020_installation.html">Installation — restic 0.12.0 documentation - https://restic.readthedocs.io/en/stable/020_installation.html</a>.</p>
<h2 id="Configuaration"><a href="#Configuaration" class="headerlink" title="Configuaration"></a>Configuaration</h2><p>Remember to replace the <code>&lt; &gt;</code> content with your prefered values.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> AWS_ACCESS_KEY_ID=&lt;Your Aliyun ACCESS KEY&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> AWS_SECRET_ACCESS_KEY=&lt;Your Aliyun SECRET ACCESS KEY&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">export</span> RESTIC_REPOSITORY=<span class="string">&quot;s3:https://oss-cn-shanghai.aliyuncs.com/&lt;Your Bucket Name&gt;&quot;</span></span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Initialize"><a href="#Initialize" class="headerlink" title="Initialize"></a>Initialize</h3><p>First initialize the repository.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic init</span></span><br></pre></td></tr></table></figure>

<h3 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h3><p>Backup your local folder to the repository.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic backup &lt;Your Local Folder&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Snapshot"><a href="#Snapshot" class="headerlink" title="Snapshot"></a>Snapshot</h3><p>Show snapshot list.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic snapshots</span></span><br></pre></td></tr></table></figure>

<p>Show content within the special snapshot.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic ls &lt;Your Snapshot ID&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Mount"><a href="#Mount" class="headerlink" title="Mount"></a>Mount</h3><p>Mount the repository into you local mounting folder.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic mount &lt;Your Local Mounting Folder&gt;</span></span><br></pre></td></tr></table></figure>

<p>Mounting repositories via FUSE is only possible on Linux, macOS and FreeBSD. On Linux, the fuse kernel module needs to be loaded and the fusermount command needs to be in the PATH. On macOS, you need FUSE for macOS <a href="https://osxfuse.github.io/">Home - macFUSE - https://osxfuse.github.io/</a>. On FreeBSD, you may need to install FUSE and load the kernel module (kldload fuse).</p>
<h3 id="Restoring-from-backup"><a href="#Restoring-from-backup" class="headerlink" title="Restoring from backup"></a>Restoring from backup</h3><h4 id="Restoring-from-a-snapshot"><a href="#Restoring-from-a-snapshot" class="headerlink" title="Restoring from a snapshot"></a>Restoring from a snapshot</h4><p>Restoring a snapshot is as easy as it sounds, just use the following command to restore the contents of the latest snapshot to <Your Local Restoring Folder>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic restore &lt;Your Snapshot ID&gt; --target &lt;Your Local Restoring Folder&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="Restore-using-mount"><a href="#Restore-using-mount" class="headerlink" title="Restore using mount"></a>Restore using mount</h4><p>See above <a href="./#mount">Mount</a></p>
<h3 id="Removing-backup-snapshots"><a href="#Removing-backup-snapshots" class="headerlink" title="Removing backup snapshots"></a>Removing backup snapshots</h3><p>In order to remove the snapshot of repository, use the <code>forget</code> command and specify the snapshot ID on the command line:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic forget &lt;Your Snapshot ID&gt;</span></span><br></pre></td></tr></table></figure>

<p>But the data that was referenced by files in this snapshot is still stored in the repository. To cleanup unreferenced data, the <code>prune</code> command must be run:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic prune</span></span><br></pre></td></tr></table></figure>

<p>You can automate this two-step process by using the <code>--prune</code> switch to forget:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic forget --keep-last 1 --prune</span></span><br></pre></td></tr></table></figure>

<h3 id="Encryption"><a href="#Encryption" class="headerlink" title="Encryption"></a>Encryption</h3><p>The key command allows you to set multiple access keys or passwords per repository. In fact, you can use the list, add, remove, and passwd (changes a password) sub-commands to manage these keys very precisely:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> restic key list</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key add</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key remove</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> restic key passwd</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://it.ismy.fun/2018/04/22/restic-backup-to-aliyun-oss/">Restic 备份数据到阿里云 OSS - https://it.ismy.fun/2018/04/22/restic-backup-to-aliyun-oss/</a></p>
<p>[2] <a href="https://restic.net/">restic · Backups done right! - https://restic.net/</a></p>
<p>[3] <a href="https://osxfuse.github.io/">Home - macFUSE - https://osxfuse.github.io/</a></p>
<p>[4] <a href="https://www.alibabacloud.com/product/oss">OSS (Object Storage Service): Encrypted and Secure Cloud Storage Service - Alibaba Cloud - https://www.alibabacloud.com/product/oss</a></p>
<p>[5] <a href="https://formulae.brew.sh/cask/osxfuse">osxfuse — Homebrew Formulae - https://formulae.brew.sh/cask/osxfuse</a></p>
<p>[6] <a href="https://brew.sh/">The Missing Package Manager for macOS (or Linux) — Homebrew - https://brew.sh/</a></p>
]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Cloud Computing</category>
        <category>Storage</category>
        <category>AliCloud Object Storage Service (OSS)</category>
      </categories>
      <tags>
        <tag>Cloud Native</tag>
        <tag>Aliyun (AliCloud) / Alibaba Cloud</tag>
        <tag>Cloud Computing</tag>
        <tag>Homebrew</tag>
        <tag>Restic</tag>
        <tag>FUSE</tag>
        <tag>Storage</tag>
        <tag>osxfuse</tag>
        <tag>AliCloud Object Storage Service (OSS)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Awesome Go] Use Air to hot live reload for Go apps</title>
    <url>/2021/01/30/Programming-Language/Golang/Awesome-Go/UseAir-to-hot-live-reload-for-Go-apps/</url>
    <content><![CDATA[<h1 id="Air"><a href="#Air" class="headerlink" title="Air"></a>Air</h1><p>When I get started with developing websites in Go and Iris or Gin framework, it’s a pity that gin lacks live-reloading.</p>
<p>Air is yet another live-reloading command line utility for Go applications in development. Just air in your project root directory, leave it alone, and focus on your code.</p>
<a id="more"></a>

<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul>
<li><p>Colorful log output</p>
</li>
<li><p>Customize build or binary command</p>
</li>
<li><p>Support excluding subdirectories</p>
</li>
<li><p>Allow watching new directories after Air started</p>
</li>
<li><p>Better building process</p>
</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>The classic way to install</p>
<p>Remember to repalce <code>col-air-example</code> with your prefer folder.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> col-air-example</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> go get -u github.com/cosmtrek/air</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><ol>
<li>create a new file</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch .air.toml</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>paste <code>air_example.toml</code> into this file, and <strong>modify it</strong> to satisfy your needs.</li>
</ol>
<p>See the complete <a href="https://github.com/cosmtrek/air/blob/master/air_example.toml">air_example.toml - https://github.com/cosmtrek/air/blob/master/air_example.toml</a></p>
<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Run air with your config. If file name is <code>.air.toml</code>, just run <code>air</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~/go/bin/air    </span><br><span class="line">  __    _   ___  </span><br><span class="line"> / /\  | | | |_) </span><br><span class="line">/_/--\ |_| |_| \_ v1.12.1 // live reload for Go apps, with Go1.14.0</span><br><span class="line"></span><br><span class="line">watching .</span><br><span class="line">!exclude tmp</span><br><span class="line">building...</span><br><span class="line">running...</span><br><span class="line">Now listening on: http://localhost:8080</span><br><span class="line">Application started. Press CMD+C to shut down.</span><br><span class="line"><span class="meta">#</span><span class="bash"> You have modify main.go file.</span></span><br><span class="line">main.go has changed</span><br><span class="line">building...</span><br><span class="line">running...</span><br><span class="line">Now listening on: http://localhost:8080</span><br><span class="line">Application started. Press CMD+C to shut down.</span><br></pre></td></tr></table></figure>

<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><p><code>air -d</code> prints all logs.</p>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>Please pull this docker image cosmtrek/air.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it --rm \</span><br><span class="line">    -w &quot;&lt;PROJECT&gt;&quot; \</span><br><span class="line">    -e &quot;air_wd=&lt;PROJECT&gt;&quot; \</span><br><span class="line">    -v $(pwd):&lt;PROJECT&gt; \</span><br><span class="line">    -p &lt;PORT&gt;:&lt;APP SERVER PORT&gt; \</span><br><span class="line">    cosmtrek/air</span><br><span class="line">    -c &lt;CONF&gt;</span><br></pre></td></tr></table></figure>

<p>For example, one of my project runs in docker:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it --rm \</span><br><span class="line">    -w &quot;/go/src/github.com/cosmtrek/hub&quot; \</span><br><span class="line">    -v $(pwd):/go/src/github.com/cosmtrek/hub \</span><br><span class="line">    -p 9090:9090 \</span><br><span class="line">    cosmtrek/air</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/cosmtrek/air">cosmtrek/air: ☁️ Live reload for Go apps - https://github.com/cosmtrek/air</a></p>
<p>[2] <a href="https://github.com/cosmtrek/air/blob/master/air_example.toml">air/air_example.toml at master · cosmtrek/air - https://github.com/cosmtrek/air/blob/master/air_example.toml</a></p>
<p>[3] <a href="https://hub.docker.com/r/cosmtrek/air">cosmtrek/air - Docker Hub - https://hub.docker.com/r/cosmtrek/air</a></p>
<p>[4] <a href="https://pkg.go.dev/github.com/cosmtrek/air">air · pkg.go.dev - https://pkg.go.dev/github.com/cosmtrek/air</a></p>
<p>[5] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Awesome Go</category>
      </categories>
      <tags>
        <tag>Programming language</tag>
        <tag>Golang (Go)</tag>
        <tag>Awesome Go</tag>
        <tag>air</tag>
        <tag>pkg</tag>
        <tag>Live Reload</tag>
      </tags>
  </entry>
  <entry>
    <title>[Awesome Go] Errors handling before Go 1.13 - errors - Programming language - Golang (Go) - Exception Error Handling</title>
    <url>/2021/01/30/Programming-Language/Golang/Error-Exception-Handling/Errors-handling-before-Go-1-13/</url>
    <content><![CDATA[<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><p>In error handling in the Go language, errors are an important part of the software package API and application user interface. Errors are returned as a normal return value. </p>
<p>In this article, we are going to explore error handling before Go 1.13.</p>
<a id="more"></a>

<p><code>error</code> is a built-in type in Go.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> error <span class="keyword">interface</span> &#123;</span><br><span class="line">  Error() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>An idiomatic way to handle an error is to return it as the last return value of a function call and check for the nil condition.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">val, err := myFunction( args... );</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="comment">// handle error</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// success</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="errors-new-string-error"><a href="#errors-new-string-error" class="headerlink" title="errors.new(string) error"></a>errors.new(string) error</h2><p>errors.New constructs a basic error value with the given error message.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(arg <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> arg == <span class="number">42</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>, errors.New(<span class="string">&quot;can&#x27;t work with 42&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A nil value in the error position indicates that there was no error.</span></span><br><span class="line">    <span class="keyword">return</span> arg + <span class="number">3</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> r, e := f1(<span class="number">42</span>); e != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;f1 failed:&quot;</span>, e)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;f1 worked:&quot;</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> r, e = f1(<span class="number">43</span>); e != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;f1 failed:&quot;</span>, e)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;f1 worked:&quot;</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">f1 failed:can&#x27;t work with 42</span><br><span class="line">f1 worked:</span><br></pre></td></tr></table></figure>

<h2 id="fmt-Errorf-string-…interface-error"><a href="#fmt-Errorf-string-…interface-error" class="headerlink" title="fmt.Errorf(string, …interface{}) error"></a>fmt.Errorf(string, …interface{}) error</h2><p>The fmt.Errorf() function in Go language allow us use formatting features to create descriptive error messages. </p>
<p>It will format an string and return an error by call <code>errors.new(string)</code>.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Errorf</span><span class="params">(format <span class="keyword">string</span>, a ...<span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span></span><br></pre></td></tr></table></figure>

<p>Example main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Golang program to illustrate the usage of </span></span><br><span class="line"><span class="comment">// fmt.Errorf() function </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// Including the main package </span></span><br><span class="line"><span class="keyword">package</span> main </span><br><span class="line">  </span><br><span class="line"><span class="comment">// Importing fmt and time </span></span><br><span class="line"><span class="keyword">import</span> ( </span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">) </span><br><span class="line">  </span><br><span class="line"><span class="comment">// Calling main </span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123; </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// Calling Errorf() function with verb $v which is used </span></span><br><span class="line">    <span class="comment">// for printing structs </span></span><br><span class="line">    err := fmt.Errorf(<span class="string">&quot;error occurred at: %v&quot;</span>, time.Now()) </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// Printing the error </span></span><br><span class="line">    fmt.Println(<span class="string">&quot;An error happened:&quot;</span>, err) </span><br><span class="line"></span><br><span class="line">    newErr := fmt.Errorf(<span class="string">&quot;A new error occurred at: %v&quot;</span>, err)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Printing the new error </span></span><br><span class="line">    fmt.Println(<span class="string">&quot;A new error happened:&quot;</span>, newErr) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">An error happened: error occurred at: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001</span><br><span class="line">A new error happened: A new error occurred at: error occurred at: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001</span><br></pre></td></tr></table></figure>

<p>Through the <code>fmt.Errorf</code> function, a new err is generated based on the existing err, and then the text information we want to add is appended. This method is more convenient, but the problem is also obvious, we lost the original err information.</p>
<h2 id="Custom-Error"><a href="#Custom-Error" class="headerlink" title="Custom Error"></a>Custom Error</h2><p>We can customize our own error struct and add fields for storing additional error information we need.</p>
<p>In Go language, any type that implements the <code>error</code> interface is as an error. So, let’s create our first error by implementing error interface.</p>
<p>Example: main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// create a struct</span></span><br><span class="line"><span class="keyword">type</span> MyError <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// struct implements `Error` method</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(myErr *MyError)</span> <span class="title">Error</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Something unexpected happend!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create error</span></span><br><span class="line">    myErr := &amp;MyError&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// print error message</span></span><br><span class="line">    fmt.Println(myErr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Run main.go.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">Something unexpected happend!</span><br></pre></td></tr></table></figure>

<p>An error value may be of any type which satisfies the language-defined error interface. A program can use a type assertion <code>(interface&#123;&#125;) (error, bool)</code> or type switch <code>target_type(interface&#123;&#125;)</code> to view an error value as a more specific type.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> NotFoundError <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *NotFoundError)</span> <span class="title">Error</span><span class="params">()</span> <span class="title">string</span></span> &#123; <span class="keyword">return</span> e.Name + <span class="string">&quot;: not found&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> e, ok := err.(*NotFoundError); ok &#123;</span><br><span class="line">    <span class="comment">// // e.Name wasn&#x27;t found</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// convert to NotFoundError explictly</span></span><br><span class="line">    notFoundError = NotFoundError(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.golang.org/go1.13-errors">Working with Errors in Go 1.13 - The Go Blog - https://blog.golang.org/go1.13-errors</a></p>
<p>[2] <a href="https://medium.com/rungo/error-handling-in-go-f0125de052f0">Error handling in Go. Go does not provide conventional… | by Uday Hiwarale | RunGo | Medium - https://medium.com/rungo/error-handling-in-go-f0125de052f0</a></p>
<p>[3] <a href="https://www.geeksforgeeks.org/fmt-errorf-function-in-golang-with-examples/">fmt.Errorf() Function in Golang With Examples - GeeksforGeeks -https://www.geeksforgeeks.org/fmt-errorf-function-in-golang-with-examples/</a></p>
<p>[4] <a href="https://gobyexample.com/errors">Go by Example: Errors - https://gobyexample.com/errors</a></p>
<p>[5] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Exception Error Handling</category>
      </categories>
  </entry>
  <entry>
    <title>[Awesome Go] Use os.Exit, log.Fatal to terminate program - os.Exit - log.Fatal - errors - Programming language - Golang (Go) - Exception Error Handling</title>
    <url>/2021/01/30/Programming-Language/Golang/Error-Exception-Handling/Use-os-Exit-log-Fatal-to-handle-errors/</url>
    <content><![CDATA[<h1 id="os-Exit-int-log-Fatal-v-…interface"><a href="#os-Exit-int-log-Fatal-v-…interface" class="headerlink" title="os.Exit(int), log.Fatal(v …interface{})"></a>os.Exit(int), log.Fatal(v …interface{})</h1><p>In Go language you can terminate program with <code>os.Exit</code> or <code>log.Fatal</code> to handle errors.</p>
<a id="more"></a>

<h1 id="os-Exit-int"><a href="#os-Exit-int" class="headerlink" title="os.Exit(int)"></a>os.Exit(int)</h1><p>Let’s see function definition.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Exit</span><span class="params">(code <span class="keyword">int</span>)</span></span></span><br><span class="line"></span><br><span class="line">Exit causes the current program to exit with the given status code.</span><br><span class="line">Conventionally, code zero indicates success, non-zero an error.</span><br><span class="line">The program terminates immediately; deferred functions are not run.</span><br></pre></td></tr></table></figure>

<p>Key points:</p>
<hr>
<ol>
<li><p>The program terminates immediately with a non-zero status.</p>
</li>
<li><p>deferred functions are not run.</p>
</li>
</ol>
<hr>
<p>Example: main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use `os.Exit` to immediately exit with a given</span></span><br><span class="line"><span class="comment">// status.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// `defer`s will _not_ be run when using `os.Exit`, so</span></span><br><span class="line">    <span class="comment">// this `log.Println` will never be called.</span></span><br><span class="line">    <span class="keyword">defer</span> log.Println(<span class="string">&quot;!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Exit with status 3.</span></span><br><span class="line">    os.Exit(<span class="number">3</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Note that unlike e.g. C, Go does not use an integer</span></span><br><span class="line"><span class="comment">// return value from `main` to indicate exit status. If</span></span><br><span class="line"><span class="comment">// you&#x27;d like to exit with a non-zero status you should</span></span><br><span class="line"><span class="comment">// use `os.Exit`.</span></span><br></pre></td></tr></table></figure>

<p>If you run exit.go using go run, the exit will be picked up by go and printed.</p>
<p>Note that the ! from our program never got printed.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">Program exited: status 3.</span><br></pre></td></tr></table></figure>

<h2 id="log-Fatal-v-…interface"><a href="#log-Fatal-v-…interface" class="headerlink" title="log.Fatal(v …interface{})"></a>log.Fatal(v …interface{})</h2><p>Let’s see function definition.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fatal</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line">Fatal is equivalent to Print() followed by a call to os.Exit(<span class="number">1</span>).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fatalf</span><span class="params">(format <span class="keyword">string</span>, v ...<span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line">Fatalf is equivalent to Printf() followed by a call to os.Exit(<span class="number">1</span>).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Fatalln</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span></span><br><span class="line">Fatalln is equivalent to Println() followed by a call to os.Exit(<span class="number">1</span>).</span><br></pre></td></tr></table></figure>

<p>Key points:</p>
<hr>
<ol>
<li><p>Print a given message.</p>
</li>
<li><p>The program terminates immediately with a non-zero status.</p>
</li>
<li><p>deferred functions are not run.</p>
</li>
</ol>
<hr>
<p>Example: main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use `log.Fatal` to immediately exit with a given message.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// `defer`s will _not_ be run when using `log.Fatal`, so</span></span><br><span class="line">    <span class="comment">// this `log.Println` will never be called.</span></span><br><span class="line">    <span class="keyword">defer</span> log.Println(<span class="string">&quot;!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Fatal with with a given message.</span></span><br><span class="line">    log.Fatal(<span class="string">&quot;Fatal&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>If you run exit.go using go run, the exit will be picked up by go and printed.</p>
<p>Note that the ! from our program never got printed.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">2009/11/10 23:00:00 Fatal</span><br><span class="line"></span><br><span class="line">Program exited: status 1.</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://gobyexample.com/exit">Go by Example: Exit - https://gobyexample.com/exit</a></p>
<p>[2] <a href="https://golang.org/pkg/log/#Fatalln">log - The Go Programming Language - https://golang.org/pkg/log/#Fatalln</a></p>
<p>[3] <a href="https://golang.org/pkg/os/#Exit">os - The Go Programming Language - https://golang.org/pkg/os/#Exit</a></p>
<p>[4] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Exception Error Handling</category>
      </categories>
  </entry>
  <entry>
    <title>[Awesome Go] Use panic and recover to handle errors and exceptions - os.Exit - log.Fatal - panic - recover - Programming language - Golang (Go) - Exception Error Handling</title>
    <url>/2021/01/30/Programming-Language/Golang/Error-Exception-Handling/Use-panic-and-recover-to-handle-errors-and-exceptions/</url>
    <content><![CDATA[<h1 id="panic-v-interface-and-recover-interface"><a href="#panic-v-interface-and-recover-interface" class="headerlink" title="panic(v interface{}) and recover() interface{}"></a>panic(v interface{}) and recover() interface{}</h1><p>In the Go language, an error is considered an expected result, but an exception is an unexpected result. An exception may indicate that there is a Bug in the program or other uncontrollable problems have occurred. </p>
<p>If an error is encountered during internal recursive code, an exception will be thrown to quickly jump out of the deeply nested function call, and then the outermost interface will capture panic through recover, and then return the corresponding error message.</p>
<a id="more"></a>

<h2 id="panic-v-interface-and-recover-interface-1"><a href="#panic-v-interface-and-recover-interface-1" class="headerlink" title="panic(v interface{}) and recover() interface{}"></a>panic(v interface{}) and recover() interface{}</h2><p>Go language recommends using the <code>recover</code> built-in function to turn internal exceptions into error handling, so that users can really care about business-related error handling.</p>
<p>Panic is similar to throwing an exception. In other words, a panic is an exception in Go. A panic is caused either by a runtime error, or an explicit call to the built-in panic function.</p>
<p>A panic is caused either by a runtime error or an explicit call to the built-in panic function.</p>
<p>Let’s see function <code>panic(v interface&#123;&#125;)</code> definition.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// The panic built-in function stops normal execution of the current</span></span><br><span class="line"><span class="comment">// goroutine. When a function F calls panic, normal execution of F stops</span></span><br><span class="line"><span class="comment">// immediately. Any functions whose execution was deferred by F are run in</span></span><br><span class="line"><span class="comment">// the usual way, and then F returns to its caller. To the caller G, the</span></span><br><span class="line"><span class="comment">// invocation of F then behaves like a call to panic, terminating G&#x27;s</span></span><br><span class="line"><span class="comment">// execution and running any deferred functions. This continues until all</span></span><br><span class="line"><span class="comment">// functions in the executing goroutine have stopped, in reverse order. At</span></span><br><span class="line"><span class="comment">// that point, the program is terminated and the error condition is reported,</span></span><br><span class="line"><span class="comment">// including the value of the argument to panic. This termination sequence</span></span><br><span class="line"><span class="comment">// is called panicking and can be  by the built-in function</span></span><br><span class="line"><span class="comment">// recover.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">panic</span><span class="params">(v <span class="keyword">interface</span>&#123;&#125;)</span></span></span><br></pre></td></tr></table></figure>

<p>Let’s see function <code>recover() interface&#123;&#125;</code> definition.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// The recover built-in function allows a program to manage behavior of a panicking goroutine. Executing a call to recover inside a deferred function (but not any function called by it) stops the panicking sequence by restoring normal execution and retrieves the error value passed to the call of panic. If recover is called outside the deferred function it will not stop a panicking sequence. In this case, or when the goroutine is not panicking, or if the argument supplied to panic was nil, recover returns nil. Thus the return value from recover reports whether the goroutine is panicking.</span></span><br></pre></td></tr></table></figure>

<p>Key points:</p>
<hr>
<ol>
<li><p>Stops normal execution of the current function F and the current goroutine.</p>
</li>
<li><p>Any functions whose execution was deferred by the current function F and the current goroutine.</p>
</li>
<li><p>Then the current function F returns to its caller G.</p>
</li>
<li><p>the caller G behaves like a call to panic, terminating G’s execution and running any deferred functions, likes 1, 2, 3.</p>
</li>
<li><p>This continues until all functions in the executing goroutine have stopped, in reverse order.</p>
</li>
<li><p>The program is terminated and the error condition is reported, including the value of the argument to panic.</p>
</li>
<li><p>This termination sequence can be controlled by the built-in function recover.</p>
</li>
</ol>
<hr>
<p>Example: main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use `panic` to terminate program and the error condition is reported,</span></span><br><span class="line"><span class="comment">// including the value of the argument to panic.</span></span><br><span class="line"><span class="comment">// Then use `recover` to controll the termination sequence.</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        log.Println(<span class="string">&quot;1. defer foo&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// controll the termination sequence</span></span><br><span class="line">        <span class="keyword">if</span> r := <span class="built_in">recover</span>(); r != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Println(<span class="string">&quot;2. Recovered in foo&quot;</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retry invoke recover(). </span></span><br><span class="line">        log.Println(<span class="string">&quot;2.1 Retry invoke recover() will return nil!&quot;</span>)</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invoke recover() outside defered function.</span></span><br><span class="line">    log.Println(<span class="string">&quot;0. recover() will return nil outside defered function!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">panic</span>(<span class="string">&quot;foo&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; log.Println(<span class="string">&quot;3. defer bar&quot;</span>) &#125;()</span><br><span class="line">    <span class="built_in">panic</span>(<span class="string">&quot;bar&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foobar</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; log.Println(<span class="string">&quot;4. defer foobar&quot;</span>) &#125;()</span><br><span class="line"></span><br><span class="line">    foo()</span><br><span class="line">    bar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// `defer`s will be run when using `panic`, so</span></span><br><span class="line">    <span class="comment">// this `log.Println` will be called.</span></span><br><span class="line">    <span class="keyword">defer</span> log.Println(<span class="string">&quot;5. main!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    foobar()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Panic with with a given message.</span></span><br><span class="line">    <span class="built_in">panic</span>(<span class="string">&quot;Panic&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go run main.go</span></span><br><span class="line">2009/11/10 23:00:00 0. recover() will return nil!</span><br><span class="line">2009/11/10 23:00:00 1. defer foo</span><br><span class="line">2009/11/10 23:00:00 2. Recovered in foo foo</span><br><span class="line">2009/11/10 23:00:00 2.1 recover() will return nil!</span><br><span class="line">2009/11/10 23:00:00 3. defer bar</span><br><span class="line">2009/11/10 23:00:00 4. defer foobar</span><br><span class="line">2009/11/10 23:00:00 5. main!</span><br><span class="line">panic: bar</span><br><span class="line"></span><br><span class="line">goroutine 1 [running]:</span><br><span class="line">main.bar()</span><br><span class="line">    /tmp/sandbox620540596/prog.go:31 +0x5b</span><br><span class="line">main.foobar()</span><br><span class="line">    /tmp/sandbox620540596/prog.go:38 +0x4a</span><br><span class="line">main.main()</span><br><span class="line">    /tmp/sandbox620540596/prog.go:47 +0x85</span><br></pre></td></tr></table></figure>

<p>Key points about <code>recover() interface&#123;&#125;</code>.</p>
<hr>
<ol>
<li><p>the built-in function recover only execute within the deferred function, otherwise recover will return <code>nil</code> </p>
</li>
<li><p>Once the panic is captured by the recover, it will not continue to spread.</p>
</li>
</ol>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://blog.golang.org/defer-panic-and-recover">Defer, Panic, and Recover - The Go Blog - https://blog.golang.org/defer-panic-and-recover</a></p>
<p>[2] <a href="https://golang.org/">The Go Programming Language - https://golang.org/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Golang (Go)</category>
        <category>Exception Error Handling</category>
      </categories>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use ActiveRecord Plugin acts_as_paranoid gem soft delete to hide and restore records without actually deleting them</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-ActiveRecord-Plugin-acts_as_paranoid-gem-soft-delete-to-hide-and-restore-records-without-actually-deleting-them/</url>
    <content><![CDATA[<h1 id="acts-as-paranoid"><a href="#acts-as-paranoid" class="headerlink" title="acts_as_paranoid"></a>acts_as_paranoid</h1><p>The acts_as_paranoid gem is an ActiveRecord plugin allowing you to hide and restore records without actually deleting them.</p>
<p>The acts_as_paranoid gem will set current time to <code>deleted_at</code> column when invoke model method <code>delete</code> or <code>destroy</code> record by ActiveRecord. The record won’t be retrieved when accessing the database default.</p>
<a id="more"></a>

<h2 id="Known-issues"><a href="#Known-issues" class="headerlink" title="Known issues"></a>Known issues</h2><ul>
<li>Using acts_as_paranoid and ActiveStorage on the same model leads to a SystemStackError.</li>
<li>You cannot directly create a model in a deleted state, or update a model after it’s been deleted.</li>
</ul>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Install-acts-as-paranoid"><a href="#Install-acts-as-paranoid" class="headerlink" title="Install acts_as_paranoid"></a>Install acts_as_paranoid</h3><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install acts_as_paranoid</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ActsAsParanoid/acts_as_paranoid: ActiveRecord plugin allowing you to hide and restore records without actually deleting them.</span></span><br><span class="line"><span class="comment"># https://github.com/ActsAsParanoid/acts_as_paranoid</span></span><br><span class="line">gem <span class="string">&#x27;acts_as_paranoid&#x27;</span>, <span class="string">&#x27;0.7.0&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<p>Create migration,</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bin/rails generate migration AddDeletedAtToUsers deleted_at:datetime:index</span></span><br><span class="line">Running via Spring preloader in process 2946</span><br><span class="line">      invoke  active_record</span><br><span class="line">      create    db/migrate/20200811215130_add_deleted_at_to_users.rb</span><br></pre></td></tr></table></figure>

<p>Show the migration 20200811215130_add_deleted_at_to_users.rb.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddDeletedAtToUsers</span> &lt; ActiveRecord::Migration</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    add_column <span class="symbol">:users</span>, <span class="symbol">:deleted_at</span>, <span class="symbol">:datetime</span></span><br><span class="line">    add_index <span class="symbol">:users</span>, <span class="symbol">:deleted_at</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Run db migrate.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bin/rails db:migrate</span></span><br></pre></td></tr></table></figure>

<p>Enable ActsAsParanoid.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  acts_as_paranoid</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or inherit from ApplicationRecord</span></span><br><span class="line"><span class="comment"># class ApplicationRecord &lt; ActiveRecord::Base</span></span><br><span class="line"><span class="comment">#   self.abstract_class = true</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#   acts_as_paranoid</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># class User &lt; ApplicationRecord</span></span><br><span class="line"><span class="comment"># end</span></span><br></pre></td></tr></table></figure>

<h3 id="Magic-Column"><a href="#Magic-Column" class="headerlink" title="Magic Column"></a>Magic Column</h3><p>By default, ActsAsParanoid assumes a record’s deletion is stored in a datetime column called <code>deleted_at</code>.</p>
<h3 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a>Filtering</h3><p>If a record is deleted by ActsAsParanoid, it won’t be retrieved when accessing the database.<br>So, Paranoiac.all will not include the deleted records.</p>
<p>When you want to access them, you have 2 choices:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">User.only_deleted <span class="comment"># retrieves only the deleted records</span></span><br><span class="line">User.with_deleted <span class="comment"># retrieves all records, deleted or not</span></span><br></pre></td></tr></table></figure>

<h3 id="Caveats"><a href="#Caveats" class="headerlink" title="Caveats"></a>Caveats</h3><p>Watch out for these caveats:</p>
<ul>
<li>You cannot use scopes named with_deleted and only_deleted</li>
<li>You cannot use scopes named deleted_inside_time_window, deleted_before_time, deleted_after_time if your paranoid column’s type is time</li>
<li>You cannot name association *_with_deleted</li>
<li>unscoped will return all records, deleted or not</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/ActsAsParanoid/acts_as_paranoid">ActsAsParanoid/acts_as_paranoid: ActiveRecord plugin allowing you to hide and restore records without actually deleting them. - https://github.com/ActsAsParanoid/acts_as_paranoid</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>acts_as_paranoid</tag>
        <tag>ActiveRecord Plugin</tag>
        <tag>Soft Delete</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use ActiveRecord Plugin paper_trail gem to track changes to your rails models</title>
    <url>/2020/08/29/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-ActiveRecord-Plugin-paper_trai-geml-to-track-changes-to-your-Rails-models/</url>
    <content><![CDATA[<h1 id="acts-as-paranoid"><a href="#acts-as-paranoid" class="headerlink" title="acts_as_paranoid"></a>acts_as_paranoid</h1><p>The paper_trail gem is an ActiveRecord plugin tracking changes to your rails models.</p>
<p>Track changes to your models, for auditing or versioning. See how a model looked at any stage in its lifecycle, revert it to any version, or restore it after it has been destroyed.</p>
<a id="more"></a>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install paper_trail</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># paper-trail-gem/paper_trail: Track changes to your rails models</span></span><br><span class="line"><span class="comment"># https://github.com/paper-trail-gem/paper_trail</span></span><br><span class="line">gem <span class="string">&#x27;paper_trail&#x27;</span>, <span class="string">&#x27;11.0.0&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<p>Add a versions table to your database:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bundle exec rails generate paper_trail:install [--with-changes]</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bundle exec rake db:migrate</span><br></pre></td></tr></table></figure>

<p>Add <code>has_paper_trail</code> to the models you want to track.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  has_paper_trail</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or inherit from ApplicationRecord</span></span><br><span class="line"><span class="comment"># class ApplicationRecord &lt; ActiveRecord::Base</span></span><br><span class="line"><span class="comment">#   self.abstract_class = true</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#   has_paper_trail</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># class User &lt; ApplicationRecord</span></span><br><span class="line"><span class="comment"># end</span></span><br></pre></td></tr></table></figure>

<p>If your controllers have a <code>current_user</code> method, you can easily track who is responsible for changes by adding a controller callback.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span></span></span><br><span class="line">  before_action <span class="symbol">:set_paper_trail_whodunnit</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Basic-Usage"><a href="#Basic-Usage" class="headerlink" title="Basic Usage"></a>Basic Usage</h3><p>Your models now have a versions method which returns the “paper trail” of changes to your model.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.find <span class="number">42</span></span><br><span class="line">widget.versions</span><br><span class="line"><span class="comment"># [&lt;PaperTrail::Version&gt;, &lt;PaperTrail::Version&gt;, ...]</span></span><br></pre></td></tr></table></figure>

<p>Once you have a version, you can find out what happened:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">v = widget.versions.last</span><br><span class="line">v.event <span class="comment"># &#x27;update&#x27;, &#x27;create&#x27;, &#x27;destroy&#x27;. See also: Custom Event Names</span></span><br><span class="line">v.created_at</span><br><span class="line">v.whodunnit <span class="comment"># ID of `current_user`. Requires `set_paper_trail_whodunnit` callback.</span></span><br><span class="line">widget = v.reify <span class="comment"># The widget as it was before the update (nil for a create event)</span></span><br></pre></td></tr></table></figure>

<p>PaperTrail stores the pre-change version of the model, unlike some other auditing/versioning plugins, so you can retrieve the original version. This is useful when you start keeping a paper trail for models that already have records in the database.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.find <span class="number">153</span></span><br><span class="line">widget.name                                 <span class="comment"># &#x27;Doobly&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add has_paper_trail to Widget model.</span></span><br><span class="line"></span><br><span class="line">widget.versions                             <span class="comment"># []</span></span><br><span class="line">widget.update <span class="symbol">name:</span> <span class="string">&#x27;Wotsit&#x27;</span></span><br><span class="line">widget.versions.last.reify.name             <span class="comment"># &#x27;Doobly&#x27;</span></span><br><span class="line">widget.versions.last.event                  <span class="comment"># &#x27;update&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="API-Summary"><a href="#API-Summary" class="headerlink" title="API Summary"></a>API Summary</h3><p>An introductory sample of common features.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Returns this widget&#x27;s versions.  You can customise the name of the</span></span><br><span class="line"><span class="comment"># association, but overriding this method is not supported.</span></span><br><span class="line">widget.versions</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return the version this widget was reified from, or nil if it is live.</span></span><br><span class="line"><span class="comment"># You can customise the name of the method.</span></span><br><span class="line">widget.version</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns true if this widget is the current, live one; or false if it is from</span></span><br><span class="line"><span class="comment"># a previous version.</span></span><br><span class="line">widget.paper_trail.live?</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns who put the widget into its current state.</span></span><br><span class="line">widget.paper_trail.originator</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the widget (not a version) as it looked at the given timestamp.</span></span><br><span class="line">widget.paper_trail.version_at(timestamp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the widget (not a version) as it was most recently.</span></span><br><span class="line">widget.paper_trail.previous_version</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the widget (not a version) as it became next.</span></span><br><span class="line">widget.paper_trail.next_version</span><br><span class="line">And a PaperTrail::Version instance (which is just an ordinary ActiveRecord instance, with all the usual methods) has methods such <span class="symbol">as:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the item restored from this version.</span></span><br><span class="line">version.reify(options = &#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Return a new item from this version</span></span><br><span class="line">version.reify(<span class="symbol">dup:</span> <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns who put the item into the state stored in this version.</span></span><br><span class="line">version.paper_trail_originator</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns who changed the item from the state it had in this version.</span></span><br><span class="line">version.terminator</span><br><span class="line">version.whodunnit</span><br><span class="line">version.version_author</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the next version.</span></span><br><span class="line">version.<span class="keyword">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the previous version.</span></span><br><span class="line">version.previous</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the index of this version in all the versions.</span></span><br><span class="line">version.index</span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the event that caused this version (create|update|destroy).</span></span><br><span class="line">version.event</span><br></pre></td></tr></table></figure>

<p>This is just a sample of common features. Keep reading for more.</p>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Many aspects of PaperTrail are configurable for individual models; typically this is achieved by passing options to the has_paper_trail method within a given model.</p>
<p>Some aspects of PaperTrail are configured globally for all models. These settings are assigned directly on the PaperTrail.config object. A common place to put these settings is in a Rails initializer file such as <code>config/initializers/paper_trail.rb</code> or in an environment-specific configuration file such as <code>config/environments/test.rb</code>.</p>
<h3 id="Global"><a href="#Global" class="headerlink" title="Global"></a>Global</h3><p>Global configuration options affect all threads.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">association_reify_error_behaviour</span><br><span class="line">enabled</span><br><span class="line">has_paper_trail_defaults</span><br><span class="line">object_changes_adapter</span><br><span class="line">serializer</span><br><span class="line">version_limit</span><br></pre></td></tr></table></figure>

<p>Syntax example: (options described in detail later)</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/initializers/paper_trail.rb</span></span><br><span class="line">PaperTrail.config.enabled = <span class="literal">true</span></span><br><span class="line">PaperTrail.config.has_paper_trail_defaults = &#123;</span><br><span class="line">  <span class="symbol">on:</span> %i[create update destroy]</span><br><span class="line">&#125;</span><br><span class="line">PaperTrail.config.version_limit = <span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>These options are intended to be set only once, during app initialization (eg. in <code>config/initializers</code>). It is unsafe to change them while the app is running. In contrast, <code>PaperTrail.request</code> has various options that only apply to a single HTTP request and thus are safe to use while the app is running.</p>
<h2 id="Working-With-Versions"><a href="#Working-With-Versions" class="headerlink" title="Working With Versions"></a>Working With Versions</h2><h3 id="Reverting-And-Undeleting-A-Model"><a href="#Reverting-And-Undeleting-A-Model" class="headerlink" title="Reverting And Undeleting A Model"></a>Reverting And Undeleting A Model</h3><p>PaperTrail makes reverting to a previous version easy:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.find <span class="number">42</span></span><br><span class="line">widget.update <span class="symbol">name:</span> <span class="string">&#x27;Blah blah&#x27;</span></span><br><span class="line"><span class="comment"># Time passes....</span></span><br><span class="line">widget = widget.paper_trail.previous_version  <span class="comment"># the widget as it was before the update</span></span><br><span class="line">widget.save                                   <span class="comment"># reverted</span></span><br></pre></td></tr></table></figure>

<p>Alternatively you can find the version at a given time:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = widget.paper_trail.version_at(<span class="number">1</span>.day.ago)  <span class="comment"># the widget as it was one day ago</span></span><br><span class="line">widget.save                                        <span class="comment"># reverted</span></span><br></pre></td></tr></table></figure>

<p>Note version_at gives you the object, not a version, so you don’t need to call reify.</p>
<p>Undeleting is just as simple:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.find(<span class="number">42</span>)</span><br><span class="line">widget.destroy</span><br><span class="line"><span class="comment"># Time passes....</span></span><br><span class="line">widget = Widget.new(<span class="symbol">id:</span><span class="number">42</span>)    <span class="comment"># creating a new object with the same id, re-establishes the link</span></span><br><span class="line">versions = widget.versions    <span class="comment"># versions ordered by versions.created_at, ascending</span></span><br><span class="line">widget = versions.last.reify  <span class="comment"># the widget as it was before destruction</span></span><br><span class="line">widget.save                   <span class="comment"># the widget lives!</span></span><br></pre></td></tr></table></figure>

<p>You could even use PaperTrail to implement an undo system; Ryan Bates has!</p>
<p>If your model uses optimistic locking don’t forget to increment your <code>lock_version</code> before saving or you’ll get a StaleObjectError.</p>
<h3 id="Navigating-Versions"><a href="#Navigating-Versions" class="headerlink" title="Navigating Versions"></a>Navigating Versions</h3><p>You can call previous_version and next_version on an item to get it as it was/became. Note that these methods <code>reify</code> the item for you.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">live_widget = Widget.find <span class="number">42</span></span><br><span class="line">live_widget.versions.length                       <span class="comment"># 4, for example</span></span><br><span class="line">widget = live_widget.paper_trail.previous_version <span class="comment"># =&gt; widget == live_widget.versions.last.reify</span></span><br><span class="line">widget = widget.paper_trail.previous_version      <span class="comment"># =&gt; widget == live_widget.versions[-2].reify</span></span><br><span class="line">widget = widget.paper_trail.next_version          <span class="comment"># =&gt; widget == live_widget.versions.last.reify</span></span><br><span class="line">widget.paper_trail.next_version                   <span class="comment"># live_widget</span></span><br></pre></td></tr></table></figure>

<p>If instead you have a particular version of an item you can navigate to the previous and next versions.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.find <span class="number">42</span></span><br><span class="line">version = widget.versions[-<span class="number">2</span>]    <span class="comment"># assuming widget has several versions</span></span><br><span class="line">previous_version = version.previous</span><br><span class="line">next_version = version.<span class="keyword">next</span></span><br><span class="line">You can find out which of an item<span class="string">&#x27;s versions yours is:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">current_version_number = version.index    # 0-based</span></span><br></pre></td></tr></table></figure>

<p>If you got an item by reifying one of its versions, you can navigate back to the version it came from:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">latest_version = Widget.find(<span class="number">42</span>).versions.last</span><br><span class="line">widget = latest_version.reify</span><br><span class="line">widget.version == latest_version    <span class="comment"># true</span></span><br><span class="line">You can find out whether a model instance is the current, live one -- <span class="keyword">or</span> whether it came instead from a previous version -- with <span class="symbol">live?:</span></span><br><span class="line"></span><br><span class="line">widget = Widget.find <span class="number">42</span></span><br><span class="line">widget.live?                        <span class="comment"># true</span></span><br><span class="line">widget = widget.paper_trail.previous_version</span><br><span class="line">widget.live?                        <span class="comment"># false</span></span><br></pre></td></tr></table></figure>

<p>And you can perform WHERE queries for object versions based on attributes:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Find versions that meet these criteria.</span></span><br><span class="line">PaperTrail::Version.where_object(<span class="symbol">content:</span> <span class="string">&#x27;Hello&#x27;</span>, <span class="symbol">title:</span> <span class="string">&#x27;Article&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find versions before and after attribute `atr` had value `v`:</span></span><br><span class="line">PaperTrail::Version.where_object_changes(<span class="symbol">atr:</span> <span class="string">&#x27;v&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Using where_object_changes to read YAML from a text column was deprecated in 8.1.0, and will now raise an error.</p>
<h3 id="Diffing-Versions"><a href="#Diffing-Versions" class="headerlink" title="Diffing Versions"></a>Diffing Versions</h3><p>There are two scenarios: diffing adjacent versions and diffing non-adjacent versions.</p>
<p>The best way to diff adjacent versions is to get PaperTrail to do it for you. If you add an object_changes text column to your versions table, either at installation time with the rails generate paper_trail:install –with-changes option or manually, PaperTrail will store the changes diff (excluding any attributes PaperTrail is ignoring) in each update version. You can use the version.changeset method to retrieve it. For example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">widget = Widget.create <span class="symbol">name:</span> <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line">widget.versions.last.changeset</span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   &quot;name&quot;=&gt;[nil, &quot;Bob&quot;],</span></span><br><span class="line"><span class="comment">#   &quot;created_at&quot;=&gt;[nil, 2015-08-10 04:10:40 UTC],</span></span><br><span class="line"><span class="comment">#   &quot;updated_at&quot;=&gt;[nil, 2015-08-10 04:10:40 UTC],</span></span><br><span class="line"><span class="comment">#   &quot;id&quot;=&gt;[nil, 1]</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">widget.update <span class="symbol">name:</span> <span class="string">&#x27;Robert&#x27;</span></span><br><span class="line">widget.versions.last.changeset</span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   &quot;name&quot;=&gt;[&quot;Bob&quot;, &quot;Robert&quot;],</span></span><br><span class="line"><span class="comment">#   &quot;updated_at&quot;=&gt;[2015-08-10 04:13:19 UTC, 2015-08-10 04:13:19 UTC]</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">widget.destroy</span><br><span class="line">widget.versions.last.changeset</span><br><span class="line"><span class="comment"># &#123;&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Saving-More-Information-About-Versions"><a href="#Saving-More-Information-About-Versions" class="headerlink" title="Saving More Information About Versions"></a>Saving More Information About Versions</h3><h3 id="Storing-Metadata"><a href="#Storing-Metadata" class="headerlink" title="Storing Metadata"></a>Storing Metadata</h3><p>You can add your own custom columns to your versions table. Values can be given using Model Metadata or Controller Metadata.</p>
<h4 id="Model-Metadata"><a href="#Model-Metadata" class="headerlink" title="Model Metadata"></a>Model Metadata</h4><p>You can specify metadata in the model using has_paper_trail(meta:).</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  belongs_to <span class="symbol">:author</span></span><br><span class="line">  has_paper_trail(</span><br><span class="line">    <span class="symbol">meta:</span> &#123;</span><br><span class="line">      <span class="symbol">author_id:</span> <span class="symbol">:author_id</span>, <span class="comment"># model attribute</span></span><br><span class="line">      <span class="symbol">word_count:</span> <span class="symbol">:count_words</span>, <span class="comment"># arbitrary model method</span></span><br><span class="line">      <span class="symbol">answer:</span> <span class="number">42</span>, <span class="comment"># scalar value</span></span><br><span class="line">      <span class="symbol">editor:</span> proc &#123; <span class="params">|article|</span> article.editor.full_name &#125; <span class="comment"># a Proc</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">count_words</span></span></span><br><span class="line">    <span class="number">153</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h4 id="Metadata-from-Controllers"><a href="#Metadata-from-Controllers" class="headerlink" title="Metadata from Controllers"></a>Metadata from Controllers</h4><p>You can also store any information you like from your controller. Override the info_for_paper_trail method in your controller to return a hash whose keys correspond to columns in your versions table.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">info_for_paper_trail</span></span></span><br><span class="line">    &#123; <span class="symbol">ip:</span> request.remote_ip, <span class="symbol">user_agent:</span> request.user_agent &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h4 id="Advantages-of-Metadata"><a href="#Advantages-of-Metadata" class="headerlink" title="Advantages of Metadata"></a>Advantages of Metadata</h4><p>Why would you do this? In this example, author_id is an attribute of Article and PaperTrail will store it anyway in a serialized form in the object column of the version record. But let’s say you wanted to pull out all versions for a particular author; without the metadata you would have to deserialize (reify) each version object to see if belonged to the author in question. Clearly this is inefficient. Using the metadata you can find just those versions you want:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">PaperTrail::Version.where(<span class="symbol">author_id:</span> author_id)</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/paper-trail-gem/paper_trail">paper-trail-gem/paper_trail: Track changes to your rails models - https://github.com/paper-trail-gem/paper_trail</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>acts_as_paranoid</tag>
        <tag>ActiveRecord Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use annotate gem to annotate Rails classes with schema and routes info</title>
    <url>/2020/08/22/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-annotate-gem-to-annotate-Rails-classes-with-schema-and-routes-info/</url>
    <content><![CDATA[<h1 id="Annotate-aka-AnnotateModels"><a href="#Annotate-aka-AnnotateModels" class="headerlink" title="Annotate (aka AnnotateModels)"></a>Annotate (aka AnnotateModels)</h1><p>The Annotate (aka AnnotateModels) gem annotating Rails classes with schema and routes info by adding a comment summarizing the current schema to the top or bottom of each of your…</p>
<a id="more"></a>

<ul>
<li>ActiveRecord models</li>
<li>Fixture files</li>
<li>Tests and Specs</li>
<li>Object Daddy exemplars</li>
<li>Machinist blueprints</li>
<li>Fabrication fabricators</li>
<li>Thoughtbot’s factory_bot factories, i.e. the (spec|test)/factories/<model>_factory.rb files</li>
<li>routes.rb file (for Rails projects)</li>
</ul>
<p>The schema comment looks like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># == Schema Info</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Table name: line_items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  id                  :integer(11)    not null, primary key</span></span><br><span class="line"><span class="comment">#  quantity            :integer(11)    not null</span></span><br><span class="line"><span class="comment">#  product_id          :integer(11)    not null</span></span><br><span class="line"><span class="comment">#  unit_price          :float</span></span><br><span class="line"><span class="comment">#  order_id            :integer(11)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LineItem</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  belongs_to <span class="symbol">:product</span></span><br><span class="line">  . . .</span><br></pre></td></tr></table></figure>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install annotate</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Put gems used only for development or testing in the appropriate group in the Gemfile</span></span><br><span class="line">group <span class="symbol">:development</span> <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># ctran/annotate_models: Annotate Rails classes with schema and routes info</span></span><br><span class="line">  <span class="comment"># https://github.com/ctran/annotate_models</span></span><br><span class="line">  gem <span class="string">&#x27;annotate&#x27;</span>, <span class="string">&#x27;3.1.1&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>(If you used the Gemfile install, prefix the below commands with bundle exec.)</p>
<h3 id="Usage-in-Rails"><a href="#Usage-in-Rails" class="headerlink" title="Usage in Rails"></a>Usage in Rails</h3><p>To annotate all your models, tests, fixtures, and factories:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /path/to/app</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> annotate</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>If you want to always skip annotations on a particular model, add this string anywhere in the file:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- SkipSchemaAnnotations</span></span><br></pre></td></tr></table></figure>

<h3 id="Configuration-in-Rails"><a href="#Configuration-in-Rails" class="headerlink" title="Configuration in Rails"></a>Configuration in Rails</h3><p>To generate a configuration file (in the form of a .rake file), to set default options:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rails g annotate:install</span></span><br><span class="line">Running via Spring preloader in process 6523</span><br><span class="line">      create  lib/tasks/auto_annotate_models.rake</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Edit this file <code>lib/tasks/auto_annotate_models.rake</code> to control things like output format, where annotations are added (top or bottom of file), and in which artifacts.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat lib/tasks/auto_annotate_models.rake</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> only doing this in development as some production environments (Heroku)</span></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> are sensitive to local FS writes, and besides -- it&#x27;s just not proper</span></span><br><span class="line"><span class="comment"># <span class="doctag">NOTE:</span> to have a dev-mode tool do its thing in production.</span></span><br><span class="line"><span class="keyword">if</span> Rails.env.development?</span><br><span class="line">  <span class="keyword">require</span> <span class="string">&#x27;annotate&#x27;</span></span><br><span class="line">  task <span class="symbol">:set_annotation_options</span> <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># You can override any of these by setting an environment variable of the</span></span><br><span class="line">    <span class="comment"># same name.</span></span><br><span class="line">    Annotate.set_defaults(</span><br><span class="line">      <span class="string">&#x27;routes&#x27;</span>                    =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_routes&#x27;</span>        =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_class&#x27;</span>         =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_test&#x27;</span>          =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_fixture&#x27;</span>       =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_factory&#x27;</span>       =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;position_in_serializer&#x27;</span>    =&gt; <span class="string">&#x27;before&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;show_foreign_keys&#x27;</span>         =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;show_complete_foreign_keys&#x27;</span> =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;show_indexes&#x27;</span>              =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;simple_indexes&#x27;</span>            =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;model_dir&#x27;</span>                 =&gt; <span class="string">&#x27;app/models&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;root_dir&#x27;</span>                  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;include_version&#x27;</span>           =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;require&#x27;</span>                   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_tests&#x27;</span>             =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_fixtures&#x27;</span>          =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_factories&#x27;</span>         =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_serializers&#x27;</span>       =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_scaffolds&#x27;</span>         =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_controllers&#x27;</span>       =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_helpers&#x27;</span>           =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;exclude_sti_subclasses&#x27;</span>    =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;ignore_model_sub_dir&#x27;</span>      =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;ignore_columns&#x27;</span>            =&gt; <span class="literal">nil</span>,</span><br><span class="line">      <span class="string">&#x27;ignore_routes&#x27;</span>             =&gt; <span class="literal">nil</span>,</span><br><span class="line">      <span class="string">&#x27;ignore_unknown_models&#x27;</span>     =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;hide_limit_column_types&#x27;</span>   =&gt; <span class="string">&#x27;integer,bigint,boolean&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;hide_default_column_types&#x27;</span> =&gt; <span class="string">&#x27;json,jsonb,hstore&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;skip_on_db_migrate&#x27;</span>        =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;format_bare&#x27;</span>               =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;format_rdoc&#x27;</span>               =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;format_markdown&#x27;</span>           =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;sort&#x27;</span>                      =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;force&#x27;</span>                     =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;frozen&#x27;</span>                    =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;classified_sort&#x27;</span>           =&gt; <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;trace&#x27;</span>                     =&gt; <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;wrapper_open&#x27;</span>              =&gt; <span class="literal">nil</span>,</span><br><span class="line">      <span class="string">&#x27;wrapper_close&#x27;</span>             =&gt; <span class="literal">nil</span>,</span><br><span class="line">      <span class="string">&#x27;with_comment&#x27;</span>              =&gt; <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  Annotate.load_tasks</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><p>The format produced is actually MultiMarkdown, making use of the syntax extension for tables. It’s recommended you use <code>kramdown</code> as your parser if you want to use this format. If you’re using yard to generate documentation, specify a format of markdown with kramdown as the provider by adding this to your .yardopts file:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cat .yardopts</span><br><span class="line"></span><br><span class="line">--markup markdown</span><br><span class="line">--markup-provider kramdown</span><br></pre></td></tr></table></figure>

<p>Be sure to add this to your Gemfile as well:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">gem <span class="string">&#x27;kramdown&#x27;</span>, groups =&gt; [<span class="symbol">:development</span>], <span class="keyword">require</span> =&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="WARNING"><a href="#WARNING" class="headerlink" title="WARNING"></a>WARNING</h2><p>Don’t add text after an automatically-created comment block. This tool will blow away the initial/final comment block in your models if it looks like it was previously added by this gem.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/ctran/annotate_models">ctran/annotate_models: Annotate Rails classes with schema and routes info - https://github.com/ctran/annotate_models</a></p>
<p>[2] <a href="https://github.com/pinnymz/migration_comments">pinnymz/migration_comments: Comments for your migrations - https://github.com/pinnymz/migration_comments</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>AnnotateModels</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use bullet gem to help to kill N+1 queries and unused eager loading</title>
    <url>/2020/08/22/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-bullet-gem-to-annotate-Rails-classes-with-schema-and-routes-info%20copy/</url>
    <content><![CDATA[<h1 id="bullet"><a href="#bullet" class="headerlink" title="bullet"></a>bullet</h1><p>The Bullet gem is designed to help you increase your application’s performance by reducing the number of queries it makes. It will watch your queries while you develop your application and notify you when you should add eager loading (N+1 queries), when you’re using eager loading that isn’t necessary and when you should use counter cache.</p>
<a id="more"></a>

<p>Best practice is to use Bullet in development mode or custom mode (staging, profile, etc.). The last thing you want is your clients getting alerts about how lazy you are.</p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install bullet</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Put gems used only for development or testing in the appropriate group in the Gemfile</span></span><br><span class="line">group <span class="symbol">:development</span> <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># flyerhzm/bullet: help to kill N+1 queries and unused eager loading</span></span><br><span class="line">  <span class="comment"># https://github.com/flyerhzm/bullet</span></span><br><span class="line">  gem <span class="string">&#x27;bullet&#x27;</span>, <span class="string">&#x27;6.1.2&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>(If you used the Gemfile install, prefix the below commands with <code>bundle exec</code>.)</p>
<h3 id="Usage-in-Rails"><a href="#Usage-in-Rails" class="headerlink" title="Usage in Rails"></a>Usage in Rails</h3><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Configuration-in-Rails"><a href="#Configuration-in-Rails" class="headerlink" title="Configuration in Rails"></a>Configuration in Rails</h3><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/flyerhzm/bullet">flyerhzm/bullet: help to kill N+1 queries and unused eager loading - https://github.com/flyerhzm/bullet</a></p>
<p>[2] <a href="https://rubygems.org/gems/bullet">bullet | RubyGems.org | your community gem host - https://rubygems.org/gems/bullet</a></p>
<p>[3] <a href="https://www.123ish.com/en/entries/2235-optimize-your-rails-code-with-bullet-gem-and-speed-up-your-site-">Optimize your Rails Code with Bullet Gem and Speed Up your site! | 123ish US - https://www.123ish.com/en/entries/2235-optimize-your-rails-code-with-bullet-gem-and-speed-up-your-site-</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>bullet</tag>
        <tag>N+1 Queries</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use elastic-apm gem to send Transactions, Errors and Metrics data to Elastic APM Server</title>
    <url>/2021/01/09/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-elastic-apm-gem-to-send-Transactions-Errors-and-Metrics-data-to-Elastic-APM-Server/</url>
    <content><![CDATA[<h1 id="elastic-apm"><a href="#elastic-apm" class="headerlink" title="elastic-apm"></a>elastic-apm</h1><p>elastic-apm gem is the official Elastic APM agent for Ruby and Ruby on Rails.</p>
<p>The APM Server receives data from APM agents and transforms them into Elasticsearch documents. It does this by exposing an HTTP server endpoint to which agents stream the APM data they collect. After the APM Server has validated and processed events from the APM agents, the server transforms the data into Elasticsearch documents and stores them in corresponding Elasticsearch indices.</p>
<p>The APM Server works in conjunction with APM agents, Elasticsearch, and Kibana. Please view the APM Overview for details on how these components work together.</p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><p>Make sure Elastic APM Server <a href="https://www.elastic.co/apm">Application Performance Monitoring (APM) with Elasticsearch | Elastic - https://www.elastic.co/apm</a> is running before you start implementing the APM agents.</p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install elastic-apm</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Getting started with Rails | APM Ruby Agent Reference [3.x] | Elastic</span></span><br><span class="line"><span class="comment"># https://www.elastic.co/guide/en/apm/agent/ruby/current/getting-started-rails.html</span></span><br><span class="line"><span class="comment"># elastic/apm-agent-ruby: Elastic APM agent for Ruby</span></span><br><span class="line"><span class="comment"># https://github.com/elastic/apm-agent-ruby</span></span><br><span class="line">gem <span class="string">&#x27;elastic-apm&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/elastic_apm.yml:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment"># false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set service name - allowed characters: a-z, A-Z, 0-9, -, _ and space</span></span><br><span class="line"><span class="comment"># Defaults to the name of your Rails app</span></span><br><span class="line"><span class="attr">service_name:</span> <span class="string">&#x27;col-rails-elastic-apm-example&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use if APM Server requires a token</span></span><br><span class="line"><span class="comment"># secret_token: &lt;%= ENV[&#x27;VERY_SECRET_TOKEN&#x27;] %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set custom APM Server URL (default: http://localhost:8200)</span></span><br><span class="line"><span class="attr">server_url:</span> <span class="string">&#x27;http://localhost:8200&#x27;</span></span><br></pre></td></tr></table></figure>

<p>See the documentation <a href="https://www.elastic.co/guide/en/apm/agent/ruby/current/configuration.html">Configuration | APM Ruby Agent Reference [3.x] | Elastic - https://www.elastic.co/guide/en/apm/agent/ruby/current/configuration.html</a> for configuration options and advanced usage.</p>
<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>APM is automatically started when your app boots. Configure the agent, by creating the config file <code>config/elastic_apm.yml</code>.</p>
<p>Then, you can visit your Elastic Kibana Web UI to see Transactions, Errors and Metrics.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.elastic.co/guide/en/apm/agent/ruby/current/configuration.html">Configuration | APM Ruby Agent Reference [3.x] | Elastic - https://www.elastic.co/guide/en/apm/agent/ruby/current/configuration.html</a></p>
<p>[2] <a href="https://github.com/elastic/apm-agent-ruby">elastic/apm-agent-ruby: Elastic APM agent for Ruby - https://github.com/elastic/apm-agent-ruby</a></p>
<p>[3] <a href="https://www.elastic.co/apm">Application Performance Monitoring (APM) with Elasticsearch | Elastic - https://www.elastic.co/apm</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>elastic-apm</tag>
        <tag>Application Performance Management (APM)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use marginalia gem to attach comments to your Rails ActiveRecord queries</title>
    <url>/2020/08/22/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-marginalia-gem-to-attach-comments-to-your-Rails-ActiveRecord-queries/</url>
    <content><![CDATA[<h1 id="marginalia"><a href="#marginalia" class="headerlink" title="marginalia"></a>marginalia</h1><p>The marginalia gem attaching comments to your ActiveRecord queries. By default, it adds the application, controller, and action names as a comment at the end of each query.</p>
<p>This helps when searching log files for queries, and seeing where slow queries came from.</p>
<a id="more"></a>

<p>For example, once enabled, your logs will look like:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Account <span class="keyword">Load</span> (<span class="number">0.3</span>ms)  <span class="keyword">SELECT</span> <span class="string">`accounts`</span>.* <span class="keyword">FROM</span> <span class="string">`accounts`</span> </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`accounts`</span>.<span class="string">`queenbee_id`</span> = <span class="number">1234567890</span> </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span> </span><br><span class="line"><span class="comment">/*application:BCX,controller:project_imports,action:show*/</span></span><br></pre></td></tr></table></figure>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install marginalia</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># basecamp/marginalia: Attach comments to ActiveRecord&#x27;s SQL queries</span></span><br><span class="line"><span class="comment"># https://github.com/basecamp/marginalia</span></span><br><span class="line">gem <span class="string">&#x27;marginalia&#x27;</span>, <span class="string">&#x27;1.9.0&#x27;</span>, <span class="symbol">:require</span> =&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Marginalia ships with :application, :controller, and :action enabled by default. In addition, implementation is provided for:</p>
<ul>
<li>:line (for file and line number calling query). :line supports a configuration by setting a regexp in Marginalia::Comment.lines_to_ignore to exclude parts of the stacktrace from inclusion in the line comment.</li>
<li>:controller_with_namespace to include the full classname (including namespace) of the controller.</li>
<li>:job to include the classname of the ActiveJob being performed.</li>
<li>:hostname to include Socket.gethostname.</li>
<li>:pid to include current process id.</li>
<li>:db_host to include the configured database hostname.</li>
<li>:socket to include the configured database socket.</li>
<li>:database to include the configured database name.</li>
</ul>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/initializers/marginalia.rb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># basecamp/marginalia: Attach comments to ActiveRecord&#x27;s SQL queries</span></span><br><span class="line"><span class="comment"># https://github.com/basecamp/marginalia</span></span><br><span class="line">Marginalia::Comment.components = [<span class="symbol">:application</span>, <span class="symbol">:controller</span>, <span class="symbol">:action</span>, <span class="symbol">:line</span>, <span class="symbol">:controller_with_namespace</span>, <span class="symbol">:job</span>]</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/basecamp/marginalia">basecamp/marginalia: Attach comments to ActiveRecord’s SQL queries - https://github.com/basecamp/marginalia</a></p>
<p>[2] <a href="https://www.percona.com/doc/percona-toolkit/2.1/pt-query-digest.html#query-reviews">pt-query-digest - https://www.percona.com/doc/percona-toolkit/2.1/pt-query-digest.html#query-reviews</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Rails ActiveRecord</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>marginalia</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use migration_comments gem to comment your Rails Migration</title>
    <url>/2020/08/15/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-migration_comments-gem-to-comment-your-Rails-Migration/</url>
    <content><![CDATA[<h1 id="migration-comments"><a href="#migration-comments" class="headerlink" title="migration_comments"></a>migration_comments</h1><p>Using MigrationComments, you can simply add comments during your migrations. Or if you already have existing data structures, just add the comments afterwards in a separate migration. And of course you can always modify and delete these comments in later migrations.</p>
<p>So where are these comments used? Firstly, they will be included in your schema.rb dump which is where your IDE (e.g. RubyMine, VS Code) should be learning about your model structure. This means that they’ll be available at any point in your project. Additionally, if you are using the ‘annotate’ gem, these comments will be added to the annotations that are generated within your model.rb file.</p>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install migration_comments</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Put gems used only for development or testing in the appropriate group in the Gemfile</span></span><br><span class="line">group <span class="symbol">:development</span> <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># pinnymz/migration_comments: Comments for your migrations</span></span><br><span class="line">  <span class="comment"># https://github.com/pinnymz/migration_comments </span></span><br><span class="line">  gem <span class="string">&#x27;migration_comments&#x27;</span>, <span class="string">&#x27;0.4.1&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>To add a comment to an existing structure…</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">up</span></span></span><br><span class="line">  set_table_comment <span class="symbol">:table_name</span>, <span class="string">&quot;A table comment&quot;</span></span><br><span class="line">  set_column_comment <span class="symbol">:table_name</span>, <span class="symbol">:column_name</span>, <span class="string">&quot;A column comment&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Or you can use the change_table macro…</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">up</span></span></span><br><span class="line">  change_table <span class="symbol">:table_name</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">    t.comment <span class="string">&quot;A table comment&quot;</span></span><br><span class="line">    t.change_comment <span class="symbol">:column_name</span>, <span class="string">&quot;A column comment&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Creating a new table?</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">up</span></span></span><br><span class="line">  create_table <span class="symbol">:table_name</span>, <span class="symbol">:comment</span> =&gt; <span class="string">&quot;A table comment&quot;</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">    t.string <span class="symbol">:column_name</span>, <span class="symbol">:comment</span> =&gt; <span class="string">&quot;A column comment&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>  </span><br></pre></td></tr></table></figure>

<h2 id="Annotate-aka-AnnotateModels"><a href="#Annotate-aka-AnnotateModels" class="headerlink" title="Annotate (aka AnnotateModels)"></a>Annotate (aka AnnotateModels)</h2><p>The Annotate (aka AnnotateModels) gem annotating Rails classes with schema and routes info by adding a comment summarizing the current schema to the top or bottom of each of your codes.</p>
<p>The schema comment looks like this:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># == Schema Info</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Table name: line_items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  id                  :integer(11)    not null, primary key</span></span><br><span class="line"><span class="comment">#  quantity            :integer(11)    not null</span></span><br><span class="line"><span class="comment">#  product_id          :integer(11)    not null</span></span><br><span class="line"><span class="comment">#  unit_price          :float</span></span><br><span class="line"><span class="comment">#  order_id            :integer(11)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LineItem</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  belongs_to <span class="symbol">:product</span></span><br><span class="line">  . . .</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/pinnymz/migration_comments">pinnymz/migration_comments: Comments for your migrations - https://github.com/pinnymz/migration_comments</a></p>
<p>[2] <a href="https://github.com/ctran/annotate_models">ctran/annotate_models: Annotate Rails classes with schema and routes info - https://github.com/ctran/annotate_models</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>migration_comments</tag>
        <tag>Rails Migration</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use rails_semantic_logger gem to replaces the Rails default logger</title>
    <url>/2020/08/01/Programming-Language/Ruby-on-Rails-RoR/Awesome-Ruby-Gem/Use-rails_semantic_logger-gem-to-replaces-the-Rails-default-logger/</url>
    <content><![CDATA[<h1 id="rails-semantic-logger"><a href="#rails-semantic-logger" class="headerlink" title="rails_semantic_logger"></a>rails_semantic_logger</h1><p>Semantic Logger is a comprehensive Rails logging interface that enables human and machine readable logging outputs.</p>
<ul>
<li><p>Colorful text log files for humans to read.</p>
</li>
<li><p>JSON log files containing all Semantic information that machines can easily comsume.</p>
</li>
<li><p>Write to multiple output destinations at the same time.</p>
</li>
<li><p>Forward logs to a centralized logging system, via JSON output or built-in appenders.</p>
</li>
</ul>
<a id="more"></a>

<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>You can install it as a gem:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem install amazing_print</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> gem install rails_semantic_logger</span></span><br></pre></td></tr></table></figure>

<p>or add it into a Gemfile (Bundler):</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># is optional, but is recommended to get colorized output of semantic data (Hash output).</span></span><br><span class="line">gem <span class="string">&#x27;amazing_print&#x27;</span>, <span class="string">&#x27;1.2.2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rocketjob/rails_semantic_logger: Rails Semantic Logger replaces the Rails default logger with Semantic Logger</span></span><br><span class="line"><span class="comment"># https://github.com/rocketjob/rails_semantic_logger</span></span><br><span class="line">gem <span class="string">&#x27;rails_semantic_logger&#x27;</span>, <span class="string">&#x27;4.4.4&#x27;</span></span><br></pre></td></tr></table></figure>

<p>Then, run <code>bundle install</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle install</span></span><br></pre></td></tr></table></figure>

<p>This will automatically replace the standard Rails logger with Semantic Logger which will write all log data to the configured Rails log file.</p>
<h3 id="Conflicting-Gems"><a href="#Conflicting-Gems" class="headerlink" title="Conflicting Gems"></a>Conflicting Gems</h3><p>Remove all of the following gems since they conflict or duplicate what Rails Semantic Logger already achieves.</p>
<ul>
<li><p>lograge</p>
</li>
<li><p>rails_stdout_logging</p>
</li>
<li><p>rails_12factor</p>
</li>
</ul>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># config/initializers/semantic_logger.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">defined</span>? SemanticLogger</span><br><span class="line">  ApplicationRecord.<span class="keyword">include</span>(SemanticLogger::Loggable)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># # Semantic Logger for Ruby or Rails. Supports Graylog, Bugsnag, MongoDB, Splunk, Syslog, NewRelic.</span></span><br><span class="line">  <span class="comment"># # https://logger.rocketjob.io/rails.html</span></span><br><span class="line">  <span class="comment"># STDOUT.sync = true</span></span><br><span class="line">  <span class="comment"># # all logging needs to be set to standard out.</span></span><br><span class="line">  <span class="comment"># config.rails_semantic_logger.add_file_appender = false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Semantic Logger for Ruby or Rails. Supports Graylog, Bugsnag, MongoDB, Splunk, Syslog, NewRelic.</span></span><br><span class="line">  <span class="comment"># https://logger.rocketjob.io/appenders.html</span></span><br><span class="line">  <span class="comment"># Semantic Logger can log data to any IO Stream instance, such as $stderr or $stdout</span></span><br><span class="line">  SemanticLogger.add_appender(<span class="symbol">io:</span> $stdout, <span class="symbol">level:</span> <span class="symbol">:debug</span>)</span><br><span class="line">  <span class="comment"># SemanticLogger.add_appender(io: $stderr, level: :error)</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  puts(<span class="string">&quot;\e[31mWarning: ApplicationRecord not include SemanticLogger::Loggable!\e[0m&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Example:</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;semantic_logger&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the global default log level</span></span><br><span class="line">SemanticLogger.default_level = <span class="symbol">:trace</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log to a file, and use the colorized formatter</span></span><br><span class="line">SemanticLogger.add_appender(<span class="symbol">file_name:</span> <span class="string">&#x27;development.log&#x27;</span>, <span class="symbol">formatter:</span> <span class="symbol">:color</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create an instance of a logger</span></span><br><span class="line"><span class="comment"># Add the application/class name to every log message</span></span><br><span class="line">logger = SemanticLogger[<span class="string">&#x27;MyClass&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>Informational logging</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">logger.info(<span class="string">&quot;Calling Supplier&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>Error information</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">logger.error(<span class="string">&quot;Oops external call failed&quot;</span>, <span class="symbol">:result</span> =&gt; <span class="symbol">:failed</span>, <span class="symbol">:reason_code</span> =&gt; -<span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/rocketjob/rails_semantic_logger">rocketjob/rails_semantic_logger: Rails Semantic Logger replaces the Rails default logger with Semantic Logger - https://github.com/rocketjob/rails_semantic_logger</a></p>
<p>[2] <a href="https://logger.rocketjob.io/index.html">Semantic Logger for Ruby or Rails. Supports Graylog, Bugsnag, MongoDB, Splunk, Syslog, NewRelic. - https://logger.rocketjob.io/index.html</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>Awesome Ruby Gem</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Awesome Ruby Gem</tag>
        <tag>rails_semantic_logger</tag>
        <tag>Rails Logger</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Install Ruby Version Manager (RVM) and try out ruby</title>
    <url>/2020/07/18/Programming-Language/Ruby-on-Rails-RoR/Installation/Install-Ruby-Version-Manager-RVM-and-try-out-ruby/</url>
    <content><![CDATA[<h1 id="Ruby-Version-Manager-RVM"><a href="#Ruby-Version-Manager-RVM" class="headerlink" title="Ruby Version Manager (RVM)"></a>Ruby Version Manager (RVM)</h1><p>RVM is a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems.</p>
<p><a href="https://rvm.io/">RVM: Ruby Version Manager - RVM Ruby Version Manager - Documentation - https://rvm.io/</a></p>
<a id="more"></a>

<h3 id="Installation-explained"><a href="#Installation-explained" class="headerlink" title="Installation explained"></a>Installation explained</h3><p>There are three different ways to install and configure RVM.</p>
<ul>
<li><p>Single-User installations (recommended) - For an isolated install within a user’s $HOME, not for root.</p>
</li>
<li><p>Multi-User installations - For server administrators - For an installation usable by all users on the system - Please note that Single-User supersedes Multi-User. This also used to be called the System-Wide Install. Using this type of installation without knowledge how umask works is a big security risk.</p>
</li>
<li><p>Mixed mode installations - For an installation usable by all users on the system - with isolated rubies/gemsets within a user’s $HOME. Installation instructions are exactly the same as for Multi-User installations, the difference is in users environment.</p>
</li>
</ul>
<h2 id="Install-RVM"><a href="#Install-RVM" class="headerlink" title="Install RVM"></a>Install RVM</h2><h3 id="1-Install-GPG-keys"><a href="#1-Install-GPG-keys" class="headerlink" title="1. Install GPG keys"></a>1. Install GPG keys</h3><p>As a first step install GPG keys used to verify installation package:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span></span><br></pre></td></tr></table></figure>

<p>In case you encounter an issues check security</p>
<h3 id="2-Install-RVM-stable-version"><a href="#2-Install-RVM-stable-version" class="headerlink" title="2. Install RVM stable version"></a>2. Install RVM stable version</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> \curl -sSL https://get.rvm.io | bash -s stable</span></span><br></pre></td></tr></table></figure>

<p>Single-User Install Location: ~/.rvm/</p>
<p>If the install script is run as a standard, non-root user, RVM will install into the current users’s home directory.</p>
<h3 id="3-Reload-shell-configuration-amp-test"><a href="#3-Reload-shell-configuration-amp-test" class="headerlink" title="3. Reload shell configuration &amp; test"></a>3. Reload shell configuration &amp; test</h3><p>Close out your current shell or terminal session and open a new one (preferred). You may load RVM with the following command:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.rvm/scripts/rvm</span></span><br></pre></td></tr></table></figure>

<p>If installation and configuration were successful, RVM should now load whenever you open a new shell. This can be tested by executing the following command which should output rvm is a function as shown below.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">type rvm | head -n 1</span><br><span class="line">rvm is a function</span><br></pre></td></tr></table></figure>

<p>NOTE: Before reporting problems check <code>rvm notes</code> as it might contain important information.</p>
<p>Congratulations! You have successfully installed RVM.</p>
<h2 id="Try-out-your-new-RVM-installation"><a href="#Try-out-your-new-RVM-installation" class="headerlink" title="Try out your new RVM installation"></a>Try out your new RVM installation</h2><p>Below are some examples of how to install and use a Ruby under RVM.</p>
<p>Display a list of all known rubies. NOTE: RVM can install many more Rubies not listed.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rvm list known</span><br><span class="line"><span class="meta">#</span><span class="bash"> MRI Rubies</span></span><br><span class="line">[ruby-]1.8.6[-p420]</span><br><span class="line">[ruby-]1.8.7[-p374]</span><br><span class="line">[ruby-]1.9.1[-p431]</span><br><span class="line">[ruby-]1.9.2[-p320]</span><br><span class="line">[ruby-]1.9.3[-p545]</span><br><span class="line">[ruby-]2.0.0-p353</span><br><span class="line">[ruby-]2.0.0[-p451]</span><br><span class="line">[ruby-]2.1[.1]</span><br><span class="line">[ruby-]2.1-head</span><br><span class="line">ruby-head</span><br></pre></td></tr></table></figure>

<p>Install a version of Ruby (eg 2.1.1):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rvm install 2.1</span></span><br><span class="line">Checking requirements for opensuse.</span><br><span class="line">Requirements installation successful.</span><br><span class="line">Installing Ruby from source to: ~/.rvm/rubies/ruby-2.1.1, this may take a while depending on your cpu(s)...</span><br><span class="line">...</span><br><span class="line">Install of ruby-2.1.1 - #complete</span><br><span class="line">Using ~/.rvm/gems/ruby-2.1.1</span><br><span class="line">Use the newly installed Ruby:</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rvm use 2.1</span></span><br><span class="line">Using ~/.rvm/gems/ruby-2.1.1</span><br><span class="line">Check this worked correctly:</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ruby -v</span></span><br><span class="line">ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-linux]</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">which</span> ruby</span></span><br><span class="line">~/.rvm/rubies/ruby-2.1.1/bin/ruby</span><br><span class="line">Optionally, you can set a version of Ruby to use as the default for new shells. Note that this overrides the &#x27;system&#x27; ruby:</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> rvm use 2.1 --default</span></span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://rvm.io/">RVM: Ruby Version Manager - RVM Ruby Version Manager - Documentation - https://rvm.io/</a></p>
<p>[2] <a href="https://rvm.io/rvm/install#installation">RVM: Ruby Version Manager - Installing RVM - https://rvm.io/rvm/install#installation</a></p>
<p>[3] <a href="https://www.ruby-lang.org/en/">Ruby Programming Language - https://www.ruby-lang.org/en/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Ruby on Rails (RoR)</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Ruby on Rails (RoR)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use RubyGems mirror to speed up downloading gems</title>
    <url>/2020/07/18/Programming-Language/Ruby-on-Rails-RoR/Installation/Use-RubyGems-mirror-to-speed-up-downloading-gems/</url>
    <content><![CDATA[<p>Please use a newer RubyGems version as much as possible, 2.6.x or above is recommended.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem update --system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> gem -v</span></span><br><span class="line">2.6.3</span><br></pre></td></tr></table></figure>

<p>Replace <code>https://rubygems.org/</code> with <code>https://gems.ruby-china.com/</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> gem sources -l</span></span><br><span class="line">https://gems.ruby-china.com</span><br></pre></td></tr></table></figure>

<p>Or mirror <code>https://rubygems.org/</code> with <code>https://gems.ruby-china.com/</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bundle config mirror.https://rubygems.org https://gems.ruby-china.com</span></span><br></pre></td></tr></table></figure>

<p>It will append the <code>BUNDLE_SET</code> and value into <code>~/.bundle/config</code>.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/.bundle/config</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">BUNDLE_SET:</span> <span class="string">&quot;mirror.https://rubygems.org https://gems.ruby-china.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>So you don’t need to change the source of your Gemfile.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">source <span class="string">&#x27;https://rubygems.org/&#x27;</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;rails&#x27;</span>, <span class="string">&#x27;6.1&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://gems.ruby-china.com/">RubyGems 镜像 - Ruby China - https://gems.ruby-china.com/</a></p>
<p>[2] <a href="https://rubygems.org/">RubyGems.org | your community gem host - https://rubygems.org/</a></p>
<p>[3] <a href="https://guides.rubygems.org/run-your-own-gem-server/">Run your own gem server - RubyGems Guides - https://guides.rubygems.org/run-your-own-gem-server/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
        <category>RubyGems</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Gem</tag>
        <tag>RubyGems</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use asdf and Ruby plugin to install multiple Ruby versions</title>
    <url>/2020/07/18/Programming-Language/Ruby-on-Rails-RoR/Installation/Use-asdf-and-Ruby-plugin-to-install-multiple-Ruby-versions/</url>
    <content><![CDATA[<h1 id="asdf-and-Ruby-Plugin"><a href="#asdf-and-Ruby-Plugin" class="headerlink" title="asdf and Ruby Plugin"></a>asdf and Ruby Plugin</h1><p><code>asdf</code> is a single CLI tool for managing multiple runtime versions. It extend with a simple plugin system to install your favourite language: Node.js, Ruby, Python, Elixir …</p>
<a id="more"></a>

<p>This article is about how to use <code>asdf</code> and Ruby plugin to install multiple Ruby versions on macOS with the Homebrew package manager.</p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://developer.apple.com/downloads/index.action">Xcode Command Line Tools</a><br>  The Xcode Command Line Tools Package is a small self-contained package available for download separately from Xcode and that allows you to do command line development in macOS which is consists of the macOS SDK and command-line tools such as Clang, which are installed at this</p>
<p>  For more information about installing and using Xcode Command Line Tools, see the <a href="https://developer.apple.com/downloads/index.action">Xcode Command Line Tools</a></p>
</li>
<li><p><a href="https://brew.sh/">Homebrew</a><br>  Homebrew is the Missing Package Manager for macOS (or Linux).</p>
<p>  For more information about installing and using Homebrew, see the <a href="https://brew.sh/">Homebrew - https://brew.sh/</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="Install-asdf"><a href="#Install-asdf" class="headerlink" title="Install asdf"></a>Install asdf</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install asdf dependencies</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install coreutils curl git</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install asdf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install asdf</span></span><br></pre></td></tr></table></figure>

<h3 id="asdf-Ruby-Plugin"><a href="#asdf-Ruby-Plugin" class="headerlink" title="asdf Ruby Plugin"></a>asdf Ruby Plugin</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install Ruby plugin requirements</span></span><br><span class="line">brew install openssl readline</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Install Ruby plugin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git</span></span><br></pre></td></tr></table></figure>

<h3 id="Install-Ruby-version"><a href="#Install-Ruby-version" class="headerlink" title="Install Ruby version"></a>Install Ruby version</h3><p>Install a Ruby version manually.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> asdf install ruby 2.7.2</span></span><br></pre></td></tr></table></figure>

<h2 id="Migrating-from-another-Ruby-version-manager"><a href="#Migrating-from-another-Ruby-version-manager" class="headerlink" title="Migrating from another Ruby version manager"></a>Migrating from another Ruby version manager</h2><h2 id="ruby-version-file"><a href="#ruby-version-file" class="headerlink" title=".ruby-version file"></a>.ruby-version file</h2><p>asdf uses the .tool-versions for auto-switching between software versions. To ease migration, you can have it read an existing .ruby-version file to find out what version of Ruby should be used. To do this, add the following to <code>$HOME/.asdfrc</code>:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">legacy_version_file</span> = <span class="literal">yes</span></span><br></pre></td></tr></table></figure>

<p>If you are migrating from version manager that supported fuzzy matching in .ruby-version like rvm or chruby, note that you might have to change .ruby-version to include full version (e.g. change 2.6 to 2.6.1).</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://asdf-vm.com/#/core-manage-asdf">Manage asdf - https://asdf-vm.com/#/core-manage-asdf</a></p>
<p>[2] <a href="https://github.com/asdf-vm/asdf-ruby">asdf-vm/asdf-ruby: Ruby plugin for asdf version manager - https://github.com/asdf-vm/asdf-ruby</a></p>
<p>[3] <a href="https://github.com/rbenv/ruby-build/wiki#suggested-build-environment">Home · rbenv/ruby-build Wiki - https://github.com/rbenv/ruby-build/wiki#suggested-build-environment</a></p>
<p>[4] <a href="https://wolfgangrittner.dev/switching-to-asdf-for-ruby/">Switching to asdf - https://wolfgangrittner.dev/switching-to-asdf-for-ruby/</a></p>
<p>[5] <a href="https://www.nikitakazakov.com/asdf-vm-version-manager-for-ruby-tutorial/">ASDF VM Version Manager for Ruby Tutorial - https://www.nikitakazakov.com/asdf-vm-version-manager-for-ruby-tutorial/</a></p>
<p>[6] <a href="https://brew.sh/">Homebrew - https://brew.sh/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Rails / Ruby on Rails (RoR)</category>
      </categories>
      <tags>
        <tag>Rails / Ruby on Rails (RoR)</tag>
        <tag>Best practices</tag>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>asdf</tag>
        <tag>Homebrew (brew)</tag>
        <tag>Xcode Command Line Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ruby on Rails (RoR)] Use brew to install Ruby on macOS with the Homebrew package manager</title>
    <url>/2020/07/18/Programming-Language/Ruby-on-Rails-RoR/Installation/Use-brew-to-install-Ruby-versions-on-macOS-with-the-Homebrew-package-manager/</url>
    <content><![CDATA[<h1 id="brew-install-ruby"><a href="#brew-install-ruby" class="headerlink" title="brew install ruby"></a>brew install ruby</h1><p>This article is about how to use <code>brew</code> install Ruby on macOS with the Homebrew package manager.</p>
<p>Ruby versions 2.0 and above are included by default in macOS releases since at least El Capitan (10.11).</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://developer.apple.com/downloads/index.action">Xcode Command Line Tools</a><br>  The Xcode Command Line Tools Package is a small self-contained package available for download separately from Xcode and that allows you to do command line development in macOS which is consists of the macOS SDK and command-line tools such as Clang, which are installed at this</p>
<p>  For more information about installing and using Xcode Command Line Tools, see the <a href="https://developer.apple.com/downloads/index.action">Xcode Command Line Tools - https://developer.apple.com/downloads/index.action</a></p>
</li>
<li><p><a href="https://brew.sh/">Homebrew</a><br>  Homebrew is the Missing Package Manager for macOS (or Linux).</p>
<p>  For more information about installing and using Homebrew, see the <a href="https://brew.sh/">Homebrew - https://brew.sh/</a>.</p>
</li>
</ul>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> macOS</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install ruby</span></span><br></pre></td></tr></table></figure>

<p>This should install the latest Ruby version in the <code>/usr/local/Cellar/ruby</code> folder.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://www.ruby-lang.org/en/documentation/installation/">Installing Ruby - https://www.ruby-lang.org/en/documentation/installation/</a></p>
<p>[2] <a href="https://brew.sh/">Homebrew - https://brew.sh/</a></p>
]]></content>
      <categories>
        <category>Programming language</category>
        <category>Ruby</category>
        <category>Ruby on Rails (RoR)</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>Programming language</tag>
        <tag>Ruby on Rails (RoR)</tag>
        <tag>Homebrew (brew)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Automation Testing] Use Docker or Docker Compose to run Playwright to test Web applications automatically</title>
    <url>/2021/02/21/Testing/Automation-Testing/Playwright/Use-Docker-or-Docker-Compose-to-run-Playwright-to-test-Web-applications-automatically/</url>
    <content><![CDATA[<h1 id="col-playwright-docker"><a href="#col-playwright-docker" class="headerlink" title="col-playwright-docker"></a>col-playwright-docker</h1><p><a href="https://github.com/CloudoLife/col-playwright-docker">col-playwright-docker</a> is a Docker image to use <a href="https://playwright.dev/">Fast and reliable end-to-end testing for modern web apps | Playwright - https://playwright.dev/</a> to test Web applications automatically.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p><a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>Developing apps today requires so much more than writing code. Multiple languages, frameworks, architectures, and discontinuous interfaces between tools for each lifecycle stage creates enormous complexity. </p>
<p>Docker simplifies and accelerates your workflow, while giving developers the freedom to innovate with their choice of tools, application stacks, and deployment environments for each project.</p>
<p>To learn more about all the features of Docker, see <a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
</li>
</ul>
<ul>
<li><p><a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
<p>Docker Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration. </p>
<p>To learn more about all the features of Docker Compose, see <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a>.</p>
</li>
</ul>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/CloudoLife/col-playwright-docker.git</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> col-playwright-docker</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker build </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Or run docker-compose build</span></span><br></pre></td></tr></table></figure>

<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>Edit or modify <a href="./Dockerfile">./Dockerfile</a> with your preferred content.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Docker | Playwright</span></span><br><span class="line"><span class="comment"># https://playwright.dev/docs/docker</span></span><br><span class="line"><span class="comment"># ARG IMAGE=mcr.microsoft.com/playwright:bionic</span></span><br><span class="line"><span class="keyword">ARG</span> IMAGE=mcr.microsoft.com/playwright:focal</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> $&#123;IMAGE&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> WORK_DIR=<span class="string">&quot;/app&quot;</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p <span class="variable">$&#123;WORK_DIR&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;WORK_DIR&#125;</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . <span class="variable">$&#123;WORK_DIR&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> npm i -D playwright</span></span><br></pre></td></tr></table></figure>

<p>Run with <code>docker</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build .</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker run -it -v <span class="variable">$PWD</span>:/app --rm --name col-playwright-docker col-playwright-docker bash</span></span><br></pre></td></tr></table></figure>

<h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p>Edit or modify [./docker-compose.yml] with your preferred content.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># docker-compose run app bash</span></span><br><span class="line">  <span class="comment"># docker-compose run --service-ports app bash</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">col-playwright-docker</span></span><br><span class="line">    <span class="comment"># ports:</span></span><br><span class="line">    <span class="comment">#   - 3000:3000</span></span><br><span class="line">    <span class="comment"># environment:</span></span><br><span class="line">    <span class="comment">#   - FLAG_debug_print=true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./:/app&quot;</span></span><br></pre></td></tr></table></figure>

<p>Run with <code>docker-compose</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run app bash</span></span><br></pre></td></tr></table></figure>

<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://github.com/CloudoLife/col-playwright-docker">CloudoLife/col-playwright-docker: col-playwright-docker - https://github.com/CloudoLife/col-playwright-docker</a></p>
<p>[2] <a href="https://hub.docker.com/r/cloudolife/col-playwright">cloudolife/col-playwright - https://hub.docker.com/r/cloudolife/col-playwright</a></p>
<p>[3] <a href="https://playwright.dev/">Fast and reliable end-to-end testing for modern web apps | Playwright - https://playwright.dev/</a></p>
<p>[4] <a href="https://www.docker.com/">Docker - https://www.docker.com/</a></p>
<p>[5] <a href="https://docs.docker.com/compose/">Docker Compose - https://docs.docker.com/compose/</a></p>
]]></content>
      <categories>
        <category>Testing</category>
        <category>Automation Testing (Test Automation)</category>
        <category>Playwright</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Docker Compose</tag>
        <tag>Docker Hub</tag>
        <tag>Playwright</tag>
        <tag>End-to-End Testing (E2E Testing)</tag>
        <tag>Testing</tag>
        <tag>Automation Testing (Test Automation)</tag>
      </tags>
  </entry>
  <entry>
    <title>[Automation Testing] Use Playwright to test cloudolife.com automatically</title>
    <url>/2020/11/07/Testing/Automation-Testing/Playwright/Use-Playwright-to-test-cloudolife-com-automatically/</url>
    <content><![CDATA[<h1 id="Playwright"><a href="#Playwright" class="headerlink" title="Playwright"></a>Playwright</h1><p>Playwright enables reliable end-to-end testing for modern web apps. It enables fast, reliable and capable automation across all modern browsers.</p>
<a id="more"></a>

<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p>There are some important features on Playwright.</p>
<ul>
<li><p>Test across all modern browsers</p>
<p>  Single API to automate Chromium, Firefox and WebKit.</p>
<p>  With Playwright, test how your app behaves in Apple Safari with WebKit builds for Windows, Linux and macOS. Test locally and on CI.</p>
<p>  Test for mobile. Use device emulation to test your responsive web apps in mobile web browsers.</p>
<p>  Playwright supports headless (without browser UI) and headful (with browser UI) modes for all browsers and all platforms.</p>
</li>
<li><p>Fast and reliable execution</p>
<p>  Auto-wait APIs. Playwright interactions auto-wait for elements to be ready. This improves reliability and simplifies test authoring.</p>
<p>  Timeout-free automation. Playwright receives browser signals, like network requests, page navigations and page load events to eliminate the need for sleep timeouts that cause flakiness.</p>
<p>  Lean parallelization with browser contexts. Reuse a single browser instance for multiple parallelized, isolated execution environments with browser contexts.</p>
<p>  Resilient element selectors. Playwright can rely on user-facing strings, like text content and accessibility labels to select elements. These strings are more resilient than selectors tightly-coupled to the DOM structure.</p>
</li>
<li><p>Automate without trade-offs</p>
<p>  Capable automation for single page apps that rely on the modern web platform.</p>
<p>  Multiple domains, pages and frames. Playwright is an out-of-process automation driver that is not limited by the scope of in-page JavaScript execution and can automate scenarios with multiple pages.</p>
<p>  Powerful network control. Playwright introduces context-wide network interception to stub and mock network requests.</p>
<p>  Modern web features. Playwright supports web components through shadow-piercing selectors, geolocation, permissions, web workers and other modern web APIs.</p>
<p>  Capabilities to cover all scenarios. Support for file downloads and uploads, out-of-process iframes, native input events, and even dark mode.</p>
</li>
<li><p>Integrates with your workflow</p>
<p>  One-line installation. Installing Playwright auto-downloads browser dependencies for your team to be onboarded quickly.</p>
<p>  Use in your preferred language. Use the Playwright API in <code>JavaScript</code> &amp; <code>TypeScript</code>, <code>Python</code>, <code>C#</code> and, <code>Java</code>.</p>
<p>  Debugging tools. Playwright works with the editor debugger and browser developer tools to pause execution and inspect the web page.</p>
<p>  Deploy tests to CI. First-party Docker image and GitHub Actions to deploy tests to your preferred CI/CD provider.</p>
</li>
</ul>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p>Node.js</p>
<p>  Playwright requires Node.js version 10.17 or above.</p>
</li>
</ul>
<h2 id="Installaltion"><a href="#Installaltion" class="headerlink" title="Installaltion"></a>Installaltion</h2><p>Use npm to install Playwright in your Node.js project.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> (Optional) Make a workspace folder and initialize npm package.json.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkdir col-playwright &amp;&amp; <span class="built_in">cd</span> col-playwright &amp;&amp; npm init</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm i -D playwright</span></span><br></pre></td></tr></table></figure>

<p>Once installed, you can require Playwright in a Node.js script, and launch any of the 3 browsers (<code>chromium</code>, <code>firefox</code> and <code>webkit</code>) by default.</p>
<h2 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h2><p>In the next script, we will navigate to <a href="http://cloudolife.com/">Cloud-oriented Life - http://cloudolife.com/</a> and take a screenshot in WebKit.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; webkit &#125; = <span class="built_in">require</span>(<span class="string">&#x27;playwright&#x27;</span>);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> browser = <span class="keyword">await</span> webkit.launch();</span><br><span class="line">  <span class="keyword">const</span> page = <span class="keyword">await</span> browser.newPage();</span><br><span class="line">  <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://cloudolife.com/&#x27;</span>);</span><br><span class="line">  <span class="keyword">await</span> page.screenshot(&#123; <span class="attr">path</span>: <span class="string">`cloudolife.png`</span> &#125;);</span><br><span class="line">  <span class="keyword">await</span> browser.close();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<p>By default, Playwright runs the browsers in headless mode. To see the browser UI, pass the headless: false flag while launching the browser. You can also use slowMo to slow down execution.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">webkit.launch(&#123; <span class="attr">headless</span>: <span class="literal">false</span>, <span class="attr">slowMo</span>: <span class="number">50</span> &#125;);</span><br></pre></td></tr></table></figure>

<p>This code snippet navigates to <a href="http://cloudolife.com/">Cloud-oriented Life - http://cloudolife.com/</a> in Chromium, Firefox and WebKit, and saves 3 screenshots.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">const</span> playwright = <span class="built_in">require</span>(<span class="string">&#x27;playwright&#x27;</span>);</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> browserType <span class="keyword">of</span> [<span class="string">&#x27;chromium&#x27;</span>, <span class="string">&#x27;firefox&#x27;</span>, <span class="string">&#x27;webkit&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> playwright[browserType].launch();</span><br><span class="line">    <span class="keyword">const</span> context = <span class="keyword">await</span> browser.newContext();</span><br><span class="line">    <span class="keyword">const</span> page = <span class="keyword">await</span> context.newPage();</span><br><span class="line">    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://cloudolife.com/&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> page.screenshot(&#123; <span class="attr">path</span>: <span class="string">`cloudolife-<span class="subst">$&#123;browserType&#125;</span>.png`</span> &#125;);</span><br><span class="line">    <span class="keyword">await</span> browser.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Run <code>index.js</code> with <code>node</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node index.js</span></span><br></pre></td></tr></table></figure>

<p>Or run <code>index.js</code> with <code>npm</code> run script.</p>
<p>First, edit and append the follow content in the <code>package.json</code> file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat package.json</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;scripts&quot;: &#123;</span><br><span class="line">        &quot;test&quot;: &quot;node index.js&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then, run with npm script.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm run <span class="built_in">test</span></span></span><br></pre></td></tr></table></figure>

<p>You will see the screenshots.</p>
<h2 id="Limitations"><a href="#Limitations" class="headerlink" title="Limitations"></a>Limitations</h2><ul>
<li><p>Legacy Edge and IE11 support. </p>
<p>  Playwright does not support legacy Microsoft Edge or IE11 (deprecation notice). The new Microsoft Edge (on Chromium) is supported.</p>
</li>
<li><p>Test on real mobile devices: </p>
<p>  Playwright uses desktop browsers to emulate mobile devices.</p>
</li>
</ul>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://playwright.dev/">Fast and reliable end-to-end testing for modern web apps | Playwright - https://playwright.dev/</a></p>
<p>[2] <a href="https://github.com/microsoft/playwright">GitHub - microsoft/playwright: Node.js library to automate Chromium, Firefox and WebKit with a single API - https://github.com/microsoft/playwright</a></p>
<p>[3] <a href="https://www.npmjs.com/package/playwright">playwright - npm - https://www.npmjs.com/package/playwright</a></p>
<p>[4] <a href="https://yarnpkg.com/package/playwright">playwright | Yarn - Package Manager - https://yarnpkg.com/package/playwright</a></p>
]]></content>
      <categories>
        <category>Testing</category>
        <category>Automation Testing (Test Automation)</category>
        <category>Playwright</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Node.js</tag>
        <tag>Playwright</tag>
        <tag>TypeScript</tag>
        <tag>End-to-End Testing (E2E Testing)</tag>
        <tag>Testing</tag>
        <tag>Automation Testing (Test Automation)</tag>
        <tag>Chromium</tag>
        <tag>Firefox</tag>
        <tag>WebKit</tag>
        <tag>Microsoft</tag>
        <tag>Python</tag>
        <tag>C#</tag>
        <tag>Java</tag>
        <tag>Node Package Manager (npm)</tag>
        <tag>Yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>[Automation Testing] Use miniprogram-automator and Wechat Devtools to test Miniprogram automatically</title>
    <url>/2021/02/13/Testing/Automation-Testing/miniprogram-automator/Use-miniprogram-automator-and-Wechat-Devtools-to-test-Miniprogram-automatically/</url>
    <content><![CDATA[<h1 id="miniprogram-automator"><a href="#miniprogram-automator" class="headerlink" title="miniprogram-automator"></a>miniprogram-automator</h1><p>miniprogram-automator is the Miniprogram Automation SDK provides developers with a set of solutions for manipulating Miniprograms through external scripts and Wechat Devtools so as to achieve the purpose of Miniprogram automation testing.</p>
<a id="more"></a>

<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><p>Node.js</p>
<p>Install <a href="https://nodejs.org/en/">Node.js - https://nodejs.org/en/</a> 8.0+.</p>
</li>
<li><p>Mini Program account</p>
<p>The first step in developing the Mini Program is to have a Mini Program account that allows you to manage your Mini Program</p>
<p><a href="https://developers.weixin.qq.com/miniprogram/en/dev/#Apply-for-an-account">Apply for an account | Weixin public doc - https://developers.weixin.qq.com/miniprogram/en/dev/#Apply-for-an-account</a></p>
<p>Log in <a href="https://mp.weixin.qq.com/">WeChat Official Accounts Platform - https://mp.weixin.qq.com</a>, and you can see the AppID of your Mini Program in the menu of “Settings” - “Development Settings”.</p>
</li>
<li><p>Wechat Devtools</p>
<p>Go to the <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">developer toolkit download page</a> to download the appropriate installation package for your operating system. More details about the developer toolkit can be found in the Developer Toolkit Introduction.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install by Homebrew package manager on macOS. </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> wechatwebdevtools — Homebrew Formulae</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://formulae.brew.sh/cask/wechatwebdevtools</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> brew install --cask wechatwebdevtools</span></span><br></pre></td></tr></table></figure>

<p>Open the Wechat Devtools, and log in by scanning QR code with your Weixin. Now you are ready to develop your first Mini Program!</p>
</li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>First, install miniprogram-automator SDK.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> (Optional) Make a workspace folder and initialize npm package.json.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkdir col-miniprogram-automator &amp;&amp; <span class="built_in">cd</span> col-miniprogram-automator &amp;&amp; npm init</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm i miniprogram-automator --save-dev</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Enable the CLI/HTTP call function in the Wechat Devtools security settings in Settings -&gt; Security Settings.</p>
<hr>
<p>The above options must be enabled, otherwise the SDK will not be able to start the tool automation function normally.</p>
<hr>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> automator = <span class="built_in">require</span>(<span class="string">&#x27;miniprogram-automator&#x27;</span>)</span><br><span class="line"></span><br><span class="line">automator.launch(&#123;</span><br><span class="line">  cliPath: <span class="string">&#x27;path/to/cli&#x27;</span>, <span class="comment">// 工具 cli 位置，如果你没有更改过默认安装位置，可以忽略此项</span></span><br><span class="line">  projectPath: <span class="string">&#x27;path/to/project&#x27;</span>, <span class="comment">// 项目文件地址</span></span><br><span class="line">&#125;).then(<span class="keyword">async</span> miniProgram =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> page = <span class="keyword">await</span> miniProgram.reLaunch(<span class="string">&#x27;/page/component/index&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> page.waitFor(<span class="number">500</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> miniProgram.screenshot(&#123;</span><br><span class="line">    path: <span class="string">&#x27;index.png&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> element = <span class="keyword">await</span> page.$(<span class="string">&#x27;.kind-list-item-hd&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">await</span> element.attribute(<span class="string">&#x27;class&#x27;</span>))</span><br><span class="line">  <span class="keyword">await</span> element.tap()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> miniProgram.screenshot(&#123;</span><br><span class="line">    path: <span class="string">&#x27;index-tap.png&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> miniProgram.close()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Run <code>index.js</code> with <code>node</code> command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> node index.js</span></span><br></pre></td></tr></table></figure>

<p>Or run <code>index.js</code> with <code>npm</code> run script.</p>
<p>First, edit and append the follow content in the <code>package.json</code> file.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat package.json</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;scripts&quot;: &#123;</span><br><span class="line">        &quot;test&quot;: &quot;node index.js&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then, run with npm script.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm run <span class="built_in">test</span></span></span><br></pre></td></tr></table></figure>

<p>You will Wechat Devtools run your Miniprogram project automatically and generate the screenshots.</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1] <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/quick-start.html">快速入门 | 微信开放文档 - https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/quick-start.html</a></p>
<p>[2] <a href="https://developers.weixin.qq.com/community/search?query=automator&page=1&block=1&random=1613793400435&type=1">automator | 微信开放社区 - https://developers.weixin.qq.com/community/search?query=automator&amp;page=1&amp;block=1&amp;random=1613793400435&amp;type=1</a></p>
<p>[3] <a href="https://nodejs.org/en/">Node.js - https://nodejs.org/en/</a></p>
<p>[4] <a href="https://formulae.brew.sh/cask/wechatwebdevtools">wechatwebdevtools — Homebrew Formulae - https://formulae.brew.sh/cask/wechatwebdevtools</a></p>
<p>[5] <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">developer toolkit download page</a></p>
]]></content>
      <categories>
        <category>Testing</category>
        <category>Automation Testing (Test Automation)</category>
        <category>Miniprogram</category>
        <category>miniprogram-automator</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Node.js</tag>
        <tag>macOS</tag>
        <tag>miniprogram-automator</tag>
        <tag>Homebrew (brew)</tag>
        <tag>Testing</tag>
        <tag>Automation Testing (Test Automation)</tag>
        <tag>Node Package Manager (npm)</tag>
        <tag>Wechat Devtools</tag>
        <tag>Wechat</tag>
        <tag>Miniprogram</tag>
      </tags>
  </entry>
</search>
